//
//  JaemCharacterStyleKit.swift
//  jaem
//
//  Created by limtaegeun on 2016. 4. 27..
//  Copyright (c) 2016 whataday. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class JaemCharacterStyleKit : NSObject {

    //// Cache

    private struct Cache {
        static var imageOfBlue2: UIImage?
        static var blue2Targets: [AnyObject]?
        static var imageOfBlue3: UIImage?
        static var blue3Targets: [AnyObject]?
        static var imageOfBlue4: UIImage?
        static var blue4Targets: [AnyObject]?
        static var imageOfBlue5: UIImage?
        static var blue5Targets: [AnyObject]?
        static var imageOfGray1: UIImage?
        static var gray1Targets: [AnyObject]?
        static var imageOfGray2: UIImage?
        static var gray2Targets: [AnyObject]?
        static var imageOfGray3: UIImage?
        static var gray3Targets: [AnyObject]?
        static var imageOfGray4: UIImage?
        static var gray4Targets: [AnyObject]?
        static var imageOfGray5: UIImage?
        static var gray5Targets: [AnyObject]?
        static var imageOfBlue1: UIImage?
        static var blue1Targets: [AnyObject]?
        static var imageOfBasicFemale: UIImage?
        static var basicFemaleTargets: [AnyObject]?
        static var imageOfBasicMale: UIImage?
        static var basicMaleTargets: [AnyObject]?
    }

    //// Drawing Methods

    public class func drawBlue2() {
        //// Color Declarations
        let fillColor = UIColor(red: 0.997, green: 0.849, blue: 0.775, alpha: 1.000)
        let fillColor2 = UIColor(red: 0.411, green: 0.686, blue: 0.839, alpha: 1.000)
        let fillColor3 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let fillColor4 = UIColor(red: 0.993, green: 0.655, blue: 0.569, alpha: 1.000)

        //// Page-1
        //// Group 옷장선택 3
        //// Group 5
        //// Shape Drawing
        let shapePath = UIBezierPath()
        shapePath.moveToPoint(CGPoint(x: 17.91, y: 14.07))
        shapePath.addCurveToPoint(CGPoint(x: 17.04, y: 16.33), controlPoint1: CGPoint(x: 18.33, y: 14.79), controlPoint2: CGPoint(x: 17.95, y: 15.81))
        shapePath.addLineToPoint(CGPoint(x: 2.99, y: 24.45))
        shapePath.addCurveToPoint(CGPoint(x: 0.59, y: 24.06), controlPoint1: CGPoint(x: 2.09, y: 24.96), controlPoint2: CGPoint(x: 1.02, y: 24.8))
        shapePath.addLineToPoint(CGPoint(x: 0.59, y: 24.06))
        shapePath.addCurveToPoint(CGPoint(x: 1.47, y: 21.79), controlPoint1: CGPoint(x: 0.17, y: 23.34), controlPoint2: CGPoint(x: 0.56, y: 22.32))
        shapePath.addLineToPoint(CGPoint(x: 15.51, y: 13.69))
        shapePath.addCurveToPoint(CGPoint(x: 17.91, y: 14.07), controlPoint1: CGPoint(x: 16.42, y: 13.16), controlPoint2: CGPoint(x: 17.49, y: 13.34))
        shapePath.addLineToPoint(CGPoint(x: 17.91, y: 14.07))
        shapePath.addLineToPoint(CGPoint(x: 17.91, y: 14.07))
        shapePath.closePath()
        shapePath.miterLimit = 4;

        shapePath.usesEvenOddFillRule = true;

        fillColor.setFill()
        shapePath.fill()


        //// Shape 2 Drawing
        let shape2Path = UIBezierPath()
        shape2Path.moveToPoint(CGPoint(x: 22.88, y: 14.07))
        shape2Path.addCurveToPoint(CGPoint(x: 23.75, y: 16.33), controlPoint1: CGPoint(x: 22.46, y: 14.79), controlPoint2: CGPoint(x: 22.85, y: 15.81))
        shape2Path.addLineToPoint(CGPoint(x: 37.81, y: 24.45))
        shape2Path.addCurveToPoint(CGPoint(x: 40.2, y: 24.06), controlPoint1: CGPoint(x: 38.71, y: 24.96), controlPoint2: CGPoint(x: 39.77, y: 24.8))
        shape2Path.addLineToPoint(CGPoint(x: 40.2, y: 24.06))
        shape2Path.addCurveToPoint(CGPoint(x: 39.33, y: 21.79), controlPoint1: CGPoint(x: 40.62, y: 23.34), controlPoint2: CGPoint(x: 40.23, y: 22.32))
        shape2Path.addLineToPoint(CGPoint(x: 25.28, y: 13.69))
        shape2Path.addCurveToPoint(CGPoint(x: 22.88, y: 14.07), controlPoint1: CGPoint(x: 24.38, y: 13.16), controlPoint2: CGPoint(x: 23.3, y: 13.34))
        shape2Path.addLineToPoint(CGPoint(x: 22.88, y: 14.07))
        shape2Path.addLineToPoint(CGPoint(x: 22.88, y: 14.07))
        shape2Path.closePath()
        shape2Path.miterLimit = 4;

        shape2Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape2Path.fill()


        //// Shape 3 Drawing
        let shape3Path = UIBezierPath()
        shape3Path.moveToPoint(CGPoint(x: 31.21, y: 23.69))
        shape3Path.addCurveToPoint(CGPoint(x: 20.3, y: 12.03), controlPoint1: CGPoint(x: 31.21, y: 17.25), controlPoint2: CGPoint(x: 26.33, y: 12.03))
        shape3Path.addCurveToPoint(CGPoint(x: 9.4, y: 23.69), controlPoint1: CGPoint(x: 14.29, y: 12.03), controlPoint2: CGPoint(x: 9.4, y: 17.25))
        shape3Path.addLineToPoint(CGPoint(x: 9.4, y: 25.8))
        shape3Path.addCurveToPoint(CGPoint(x: 20.3, y: 37.46), controlPoint1: CGPoint(x: 9.4, y: 32.24), controlPoint2: CGPoint(x: 14.29, y: 37.46))
        shape3Path.addCurveToPoint(CGPoint(x: 31.21, y: 25.8), controlPoint1: CGPoint(x: 26.32, y: 37.46), controlPoint2: CGPoint(x: 31.21, y: 32.24))
        shape3Path.addLineToPoint(CGPoint(x: 31.21, y: 25.8))
        shape3Path.addLineToPoint(CGPoint(x: 31.21, y: 23.69))
        shape3Path.addLineToPoint(CGPoint(x: 31.21, y: 23.69))
        shape3Path.closePath()
        shape3Path.miterLimit = 4;

        shape3Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape3Path.fill()


        //// Shape 4 Drawing
        let shape4Path = UIBezierPath()
        shape4Path.moveToPoint(CGPoint(x: 14.08, y: 43.36))
        shape4Path.addCurveToPoint(CGPoint(x: 20.31, y: 31.43), controlPoint1: CGPoint(x: 14.08, y: 36.77), controlPoint2: CGPoint(x: 16.87, y: 31.43))
        shape4Path.addCurveToPoint(CGPoint(x: 26.53, y: 43.36), controlPoint1: CGPoint(x: 23.75, y: 31.43), controlPoint2: CGPoint(x: 26.53, y: 36.77))
        shape4Path.addCurveToPoint(CGPoint(x: 25.57, y: 49.73), controlPoint1: CGPoint(x: 26.53, y: 45.7), controlPoint2: CGPoint(x: 26.17, y: 47.88))
        shape4Path.addLineToPoint(CGPoint(x: 28.37, y: 49.73))
        shape4Path.addCurveToPoint(CGPoint(x: 29.13, y: 43.36), controlPoint1: CGPoint(x: 28.85, y: 47.79), controlPoint2: CGPoint(x: 29.13, y: 45.64))
        shape4Path.addCurveToPoint(CGPoint(x: 20.31, y: 27.84), controlPoint1: CGPoint(x: 29.13, y: 34.65), controlPoint2: CGPoint(x: 25.25, y: 27.84))
        shape4Path.addCurveToPoint(CGPoint(x: 11.48, y: 43.36), controlPoint1: CGPoint(x: 15.36, y: 27.84), controlPoint2: CGPoint(x: 11.48, y: 34.65))
        shape4Path.addCurveToPoint(CGPoint(x: 12.24, y: 49.73), controlPoint1: CGPoint(x: 11.48, y: 45.64), controlPoint2: CGPoint(x: 11.76, y: 47.79))
        shape4Path.addLineToPoint(CGPoint(x: 15.04, y: 49.73))
        shape4Path.addCurveToPoint(CGPoint(x: 14.08, y: 43.36), controlPoint1: CGPoint(x: 14.43, y: 47.88), controlPoint2: CGPoint(x: 14.08, y: 45.7))
        shape4Path.addLineToPoint(CGPoint(x: 14.08, y: 43.36))
        shape4Path.closePath()
        shape4Path.miterLimit = 4;

        shape4Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape4Path.fill()


        //// Shape 5 Drawing
        let shape5Path = UIBezierPath()
        shape5Path.moveToPoint(CGPoint(x: 21.77, y: 11.91))
        shape5Path.addCurveToPoint(CGPoint(x: 20.31, y: 14.02), controlPoint1: CGPoint(x: 21.77, y: 13.07), controlPoint2: CGPoint(x: 21.12, y: 14.02))
        shape5Path.addLineToPoint(CGPoint(x: 20.31, y: 14.02))
        shape5Path.addCurveToPoint(CGPoint(x: 18.85, y: 11.91), controlPoint1: CGPoint(x: 19.49, y: 14.02), controlPoint2: CGPoint(x: 18.85, y: 13.07))
        shape5Path.addLineToPoint(CGPoint(x: 18.85, y: 11.64))
        shape5Path.addCurveToPoint(CGPoint(x: 20.31, y: 9.52), controlPoint1: CGPoint(x: 18.85, y: 10.47), controlPoint2: CGPoint(x: 19.49, y: 9.52))
        shape5Path.addLineToPoint(CGPoint(x: 20.31, y: 9.52))
        shape5Path.addCurveToPoint(CGPoint(x: 21.77, y: 11.64), controlPoint1: CGPoint(x: 21.12, y: 9.52), controlPoint2: CGPoint(x: 21.77, y: 10.47))
        shape5Path.addLineToPoint(CGPoint(x: 21.77, y: 11.91))
        shape5Path.addLineToPoint(CGPoint(x: 21.77, y: 11.91))
        shape5Path.closePath()
        shape5Path.miterLimit = 4;

        shape5Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape5Path.fill()


        //// Shape 6 Drawing
        let shape6Path = UIBezierPath(roundedRect: CGRect(x: 25.52, y: 48.03, width: 8.05, height: 4.05), cornerRadius: 2)
        fillColor.setFill()
        shape6Path.fill()


        //// Shape 7 Drawing
        let shape7Path = UIBezierPath(roundedRect: CGRect(x: 7.03, y: 48.03, width: 8.05, height: 4.05), cornerRadius: 2)
        fillColor.setFill()
        shape7Path.fill()


        //// Shape 8 Drawing
        let shape8Path = UIBezierPath()
        shape8Path.moveToPoint(CGPoint(x: 30.83, y: 29.41))
        shape8Path.addLineToPoint(CGPoint(x: 9.78, y: 29.41))
        shape8Path.addCurveToPoint(CGPoint(x: 9.79, y: 29.43), controlPoint1: CGPoint(x: 9.78, y: 29.42), controlPoint2: CGPoint(x: 9.78, y: 29.42))
        shape8Path.addCurveToPoint(CGPoint(x: 12.52, y: 34.16), controlPoint1: CGPoint(x: 10.34, y: 31.24), controlPoint2: CGPoint(x: 11.29, y: 32.85))
        shape8Path.addLineToPoint(CGPoint(x: 11.48, y: 36.66))
        shape8Path.addLineToPoint(CGPoint(x: 15.03, y: 38.13))
        shape8Path.addLineToPoint(CGPoint(x: 15.7, y: 36.5))
        shape8Path.addCurveToPoint(CGPoint(x: 20.31, y: 37.62), controlPoint1: CGPoint(x: 17.1, y: 37.2), controlPoint2: CGPoint(x: 18.66, y: 37.62))
        shape8Path.addCurveToPoint(CGPoint(x: 24.9, y: 36.51), controlPoint1: CGPoint(x: 21.95, y: 37.62), controlPoint2: CGPoint(x: 23.49, y: 37.2))
        shape8Path.addLineToPoint(CGPoint(x: 25.57, y: 38.13))
        shape8Path.addLineToPoint(CGPoint(x: 29.11, y: 36.66))
        shape8Path.addLineToPoint(CGPoint(x: 28.08, y: 34.17))
        shape8Path.addCurveToPoint(CGPoint(x: 30.83, y: 29.41), controlPoint1: CGPoint(x: 29.32, y: 32.85), controlPoint2: CGPoint(x: 30.28, y: 31.23))
        shape8Path.addLineToPoint(CGPoint(x: 30.83, y: 29.41))
        shape8Path.closePath()
        shape8Path.miterLimit = 4;

        shape8Path.usesEvenOddFillRule = true;

        fillColor2.setFill()
        shape8Path.fill()


        //// Shape 9 Drawing
        let shape9Path = UIBezierPath()
        shape9Path.moveToPoint(CGPoint(x: 9.59, y: 28.56))
        shape9Path.addCurveToPoint(CGPoint(x: 9.78, y: 29.41), controlPoint1: CGPoint(x: 9.65, y: 28.84), controlPoint2: CGPoint(x: 9.7, y: 29.13))
        shape9Path.addLineToPoint(CGPoint(x: 30.82, y: 29.41))
        shape9Path.addCurveToPoint(CGPoint(x: 31.04, y: 28.56), controlPoint1: CGPoint(x: 30.91, y: 29.13), controlPoint2: CGPoint(x: 30.98, y: 28.84))
        shape9Path.addLineToPoint(CGPoint(x: 9.59, y: 28.56))
        shape9Path.addLineToPoint(CGPoint(x: 9.59, y: 28.56))
        shape9Path.closePath()
        shape9Path.miterLimit = 4;

        shape9Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape9Path.fill()


        //// Shape 10 Drawing
        let shape10Path = UIBezierPath()
        shape10Path.moveToPoint(CGPoint(x: 39.77, y: 21.14))
        shape10Path.addCurveToPoint(CGPoint(x: 39.54, y: 21.71), controlPoint1: CGPoint(x: 39.86, y: 21.36), controlPoint2: CGPoint(x: 39.77, y: 21.62))
        shape10Path.addLineToPoint(CGPoint(x: 38.16, y: 22.31))
        shape10Path.addCurveToPoint(CGPoint(x: 37.59, y: 22.08), controlPoint1: CGPoint(x: 37.95, y: 22.4), controlPoint2: CGPoint(x: 37.69, y: 22.31))
        shape10Path.addLineToPoint(CGPoint(x: 37.59, y: 22.08))
        shape10Path.addCurveToPoint(CGPoint(x: 37.82, y: 21.51), controlPoint1: CGPoint(x: 37.5, y: 21.86), controlPoint2: CGPoint(x: 37.6, y: 21.61))
        shape10Path.addLineToPoint(CGPoint(x: 39.2, y: 20.91))
        shape10Path.addCurveToPoint(CGPoint(x: 39.77, y: 21.14), controlPoint1: CGPoint(x: 39.42, y: 20.82), controlPoint2: CGPoint(x: 39.68, y: 20.92))
        shape10Path.addLineToPoint(CGPoint(x: 39.77, y: 21.14))
        shape10Path.addLineToPoint(CGPoint(x: 39.77, y: 21.14))
        shape10Path.closePath()
        shape10Path.miterLimit = 4;

        shape10Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape10Path.fill()


        //// Shape 11 Drawing
        let shape11Path = UIBezierPath()
        shape11Path.moveToPoint(CGPoint(x: 1.09, y: 21.14))
        shape11Path.addCurveToPoint(CGPoint(x: 1.31, y: 21.71), controlPoint1: CGPoint(x: 0.99, y: 21.36), controlPoint2: CGPoint(x: 1.09, y: 21.62))
        shape11Path.addLineToPoint(CGPoint(x: 2.69, y: 22.31))
        shape11Path.addCurveToPoint(CGPoint(x: 3.26, y: 22.08), controlPoint1: CGPoint(x: 2.91, y: 22.4), controlPoint2: CGPoint(x: 3.17, y: 22.31))
        shape11Path.addLineToPoint(CGPoint(x: 3.26, y: 22.08))
        shape11Path.addCurveToPoint(CGPoint(x: 3.03, y: 21.51), controlPoint1: CGPoint(x: 3.36, y: 21.86), controlPoint2: CGPoint(x: 3.26, y: 21.61))
        shape11Path.addLineToPoint(CGPoint(x: 1.65, y: 20.91))
        shape11Path.addCurveToPoint(CGPoint(x: 1.09, y: 21.14), controlPoint1: CGPoint(x: 1.44, y: 20.82), controlPoint2: CGPoint(x: 1.18, y: 20.92))
        shape11Path.addLineToPoint(CGPoint(x: 1.09, y: 21.14))
        shape11Path.addLineToPoint(CGPoint(x: 1.09, y: 21.14))
        shape11Path.closePath()
        shape11Path.miterLimit = 4;

        shape11Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape11Path.fill()


        //// Shape 12
        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.moveToPoint(CGPoint(x: 27.13, y: 14.5))
        bezier10Path.addCurveToPoint(CGPoint(x: 25.91, y: 13.52), controlPoint1: CGPoint(x: 26.73, y: 14.16), controlPoint2: CGPoint(x: 26.35, y: 13.79))
        bezier10Path.addCurveToPoint(CGPoint(x: 23.6, y: 12.46), controlPoint1: CGPoint(x: 25.17, y: 13.06), controlPoint2: CGPoint(x: 24.4, y: 12.72))
        bezier10Path.addLineToPoint(CGPoint(x: 23.51, y: 12.4))
        bezier10Path.addLineToPoint(CGPoint(x: 23.49, y: 12.43))
        bezier10Path.addCurveToPoint(CGPoint(x: 22.45, y: 12.11), controlPoint1: CGPoint(x: 23.15, y: 12.32), controlPoint2: CGPoint(x: 22.81, y: 12.18))
        bezier10Path.addCurveToPoint(CGPoint(x: 20.31, y: 11.88), controlPoint1: CGPoint(x: 21.74, y: 11.96), controlPoint2: CGPoint(x: 21.02, y: 11.88))
        bezier10Path.addCurveToPoint(CGPoint(x: 17.97, y: 12.15), controlPoint1: CGPoint(x: 19.54, y: 11.88), controlPoint2: CGPoint(x: 18.75, y: 11.97))
        bezier10Path.addCurveToPoint(CGPoint(x: 14.07, y: 13.95), controlPoint1: CGPoint(x: 16.57, y: 12.47), controlPoint2: CGPoint(x: 15.25, y: 13.07))
        bezier10Path.addCurveToPoint(CGPoint(x: 13.13, y: 14.88), controlPoint1: CGPoint(x: 13.72, y: 14.2), controlPoint2: CGPoint(x: 13.45, y: 14.58))
        bezier10Path.addLineToPoint(CGPoint(x: 7.2, y: 18.31))
        bezier10Path.addLineToPoint(CGPoint(x: 8.94, y: 21.32))
        bezier10Path.addLineToPoint(CGPoint(x: 9.7, y: 20.88))
        bezier10Path.addCurveToPoint(CGPoint(x: 9.3, y: 22.77), controlPoint1: CGPoint(x: 9.55, y: 21.51), controlPoint2: CGPoint(x: 9.35, y: 22.11))
        bezier10Path.addCurveToPoint(CGPoint(x: 9.25, y: 23.69), controlPoint1: CGPoint(x: 9.28, y: 23.07), controlPoint2: CGPoint(x: 9.25, y: 23.38))
        bezier10Path.addLineToPoint(CGPoint(x: 9.25, y: 25.26))
        bezier10Path.addLineToPoint(CGPoint(x: 31.36, y: 25.26))
        bezier10Path.addLineToPoint(CGPoint(x: 31.36, y: 23.69))
        bezier10Path.addCurveToPoint(CGPoint(x: 31.34, y: 23.18), controlPoint1: CGPoint(x: 31.36, y: 23.52), controlPoint2: CGPoint(x: 31.35, y: 23.35))
        bezier10Path.addLineToPoint(CGPoint(x: 31.33, y: 22.99))
        bezier10Path.addCurveToPoint(CGPoint(x: 30.91, y: 20.7), controlPoint1: CGPoint(x: 31.28, y: 22.21), controlPoint2: CGPoint(x: 31.1, y: 21.45))
        bezier10Path.addLineToPoint(CGPoint(x: 31.98, y: 21.32))
        bezier10Path.addLineToPoint(CGPoint(x: 33.73, y: 18.31))
        bezier10Path.addLineToPoint(CGPoint(x: 27.13, y: 14.5))
        bezier10Path.addLineToPoint(CGPoint(x: 27.13, y: 14.5))
        bezier10Path.closePath()
        bezier10Path.miterLimit = 4;

        bezier10Path.usesEvenOddFillRule = true;

        fillColor2.setFill()
        bezier10Path.fill()


        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.moveToPoint(CGPoint(x: 9.25, y: 25.8))
        bezier11Path.addCurveToPoint(CGPoint(x: 9.46, y: 27.84), controlPoint1: CGPoint(x: 9.25, y: 26.5), controlPoint2: CGPoint(x: 9.34, y: 27.18))
        bezier11Path.addLineToPoint(CGPoint(x: 31.16, y: 27.84))
        bezier11Path.addCurveToPoint(CGPoint(x: 31.36, y: 25.8), controlPoint1: CGPoint(x: 31.28, y: 27.18), controlPoint2: CGPoint(x: 31.36, y: 26.5))
        bezier11Path.addLineToPoint(CGPoint(x: 31.36, y: 25.26))
        bezier11Path.addLineToPoint(CGPoint(x: 9.25, y: 25.26))
        bezier11Path.addLineToPoint(CGPoint(x: 9.25, y: 25.8))
        bezier11Path.addLineToPoint(CGPoint(x: 9.25, y: 25.8))
        bezier11Path.closePath()
        bezier11Path.miterLimit = 4;

        bezier11Path.usesEvenOddFillRule = true;

        fillColor2.setFill()
        bezier11Path.fill()




        //// Shape 13 Drawing
        let shape13Path = UIBezierPath()
        shape13Path.moveToPoint(CGPoint(x: 9.46, y: 27.84))
        shape13Path.addCurveToPoint(CGPoint(x: 9.59, y: 28.56), controlPoint1: CGPoint(x: 9.51, y: 28.08), controlPoint2: CGPoint(x: 9.54, y: 28.32))
        shape13Path.addLineToPoint(CGPoint(x: 31.04, y: 28.56))
        shape13Path.addCurveToPoint(CGPoint(x: 31.16, y: 27.84), controlPoint1: CGPoint(x: 31.1, y: 28.32), controlPoint2: CGPoint(x: 31.12, y: 28.08))
        shape13Path.addLineToPoint(CGPoint(x: 9.46, y: 27.84))
        shape13Path.addLineToPoint(CGPoint(x: 9.46, y: 27.84))
        shape13Path.closePath()
        shape13Path.miterLimit = 4;

        shape13Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape13Path.fill()


        //// Shape 14 Drawing
        let shape14Path = UIBezierPath()
        shape14Path.moveToPoint(CGPoint(x: 26.16, y: 5.34))
        shape14Path.addCurveToPoint(CGPoint(x: 26.07, y: 5.35), controlPoint1: CGPoint(x: 26.13, y: 5.34), controlPoint2: CGPoint(x: 26.11, y: 5.35))
        shape14Path.addCurveToPoint(CGPoint(x: 20.31, y: 0.33), controlPoint1: CGPoint(x: 25.67, y: 2.51), controlPoint2: CGPoint(x: 23.26, y: 0.33))
        shape14Path.addCurveToPoint(CGPoint(x: 14.54, y: 5.35), controlPoint1: CGPoint(x: 17.35, y: 0.33), controlPoint2: CGPoint(x: 14.94, y: 2.51))
        shape14Path.addCurveToPoint(CGPoint(x: 14.45, y: 5.34), controlPoint1: CGPoint(x: 14.51, y: 5.35), controlPoint2: CGPoint(x: 14.49, y: 5.34))
        shape14Path.addCurveToPoint(CGPoint(x: 13.61, y: 6.18), controlPoint1: CGPoint(x: 13.98, y: 5.34), controlPoint2: CGPoint(x: 13.61, y: 5.71))
        shape14Path.addCurveToPoint(CGPoint(x: 14.45, y: 7.02), controlPoint1: CGPoint(x: 13.61, y: 6.64), controlPoint2: CGPoint(x: 13.98, y: 7.02))
        shape14Path.addCurveToPoint(CGPoint(x: 14.54, y: 7), controlPoint1: CGPoint(x: 14.48, y: 7.02), controlPoint2: CGPoint(x: 14.51, y: 7))
        shape14Path.addCurveToPoint(CGPoint(x: 20.31, y: 12.03), controlPoint1: CGPoint(x: 14.94, y: 9.84), controlPoint2: CGPoint(x: 17.35, y: 12.03))
        shape14Path.addCurveToPoint(CGPoint(x: 26.07, y: 7), controlPoint1: CGPoint(x: 23.26, y: 12.03), controlPoint2: CGPoint(x: 25.67, y: 9.84))
        shape14Path.addCurveToPoint(CGPoint(x: 26.16, y: 7.02), controlPoint1: CGPoint(x: 26.11, y: 7), controlPoint2: CGPoint(x: 26.13, y: 7.02))
        shape14Path.addCurveToPoint(CGPoint(x: 27, y: 6.18), controlPoint1: CGPoint(x: 26.62, y: 7.02), controlPoint2: CGPoint(x: 27, y: 6.64))
        shape14Path.addCurveToPoint(CGPoint(x: 26.16, y: 5.34), controlPoint1: CGPoint(x: 27, y: 5.71), controlPoint2: CGPoint(x: 26.62, y: 5.34))
        shape14Path.addLineToPoint(CGPoint(x: 26.16, y: 5.34))
        shape14Path.closePath()
        shape14Path.miterLimit = 4;

        shape14Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape14Path.fill()


        //// Oval 2 Drawing
        let oval2Path = UIBezierPath(ovalInRect: CGRect(x: 22.01, y: 4.8, width: 1, height: 1))
        fillColor3.setFill()
        oval2Path.fill()


        //// Oval 4 Drawing
        let oval4Path = UIBezierPath(ovalInRect: CGRect(x: 17.54, y: 4.79, width: 1, height: 1))
        fillColor3.setFill()
        oval4Path.fill()


        //// Shape 15 Drawing
        let shape15Path = UIBezierPath()
        shape15Path.moveToPoint(CGPoint(x: 21.77, y: 12.46))
        shape15Path.addCurveToPoint(CGPoint(x: 20.31, y: 13.92), controlPoint1: CGPoint(x: 21.77, y: 13.27), controlPoint2: CGPoint(x: 21.12, y: 13.92))
        shape15Path.addLineToPoint(CGPoint(x: 20.31, y: 13.92))
        shape15Path.addCurveToPoint(CGPoint(x: 18.85, y: 12.46), controlPoint1: CGPoint(x: 19.49, y: 13.92), controlPoint2: CGPoint(x: 18.85, y: 13.27))
        shape15Path.addLineToPoint(CGPoint(x: 18.85, y: 11.08))
        shape15Path.addCurveToPoint(CGPoint(x: 20.31, y: 9.62), controlPoint1: CGPoint(x: 18.85, y: 10.28), controlPoint2: CGPoint(x: 19.49, y: 9.62))
        shape15Path.addLineToPoint(CGPoint(x: 20.31, y: 9.62))
        shape15Path.addCurveToPoint(CGPoint(x: 21.77, y: 11.08), controlPoint1: CGPoint(x: 21.12, y: 9.62), controlPoint2: CGPoint(x: 21.77, y: 10.28))
        shape15Path.addLineToPoint(CGPoint(x: 21.77, y: 12.46))
        shape15Path.addLineToPoint(CGPoint(x: 21.77, y: 12.46))
        shape15Path.closePath()
        shape15Path.miterLimit = 4;

        shape15Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape15Path.fill()


        //// Shape 16 Drawing
        let shape16Path = UIBezierPath()
        shape16Path.moveToPoint(CGPoint(x: 21.46, y: 10.05))
        shape16Path.addCurveToPoint(CGPoint(x: 21.29, y: 9.98), controlPoint1: CGPoint(x: 21.4, y: 10.05), controlPoint2: CGPoint(x: 21.34, y: 10.02))
        shape16Path.addCurveToPoint(CGPoint(x: 20.24, y: 9.48), controlPoint1: CGPoint(x: 20.95, y: 9.63), controlPoint2: CGPoint(x: 20.59, y: 9.46))
        shape16Path.addCurveToPoint(CGPoint(x: 19.34, y: 9.95), controlPoint1: CGPoint(x: 19.72, y: 9.51), controlPoint2: CGPoint(x: 19.34, y: 9.95))
        shape16Path.addCurveToPoint(CGPoint(x: 19, y: 9.99), controlPoint1: CGPoint(x: 19.26, y: 10.06), controlPoint2: CGPoint(x: 19.1, y: 10.07))
        shape16Path.addCurveToPoint(CGPoint(x: 18.96, y: 9.65), controlPoint1: CGPoint(x: 18.9, y: 9.91), controlPoint2: CGPoint(x: 18.88, y: 9.75))
        shape16Path.addCurveToPoint(CGPoint(x: 20.21, y: 8.99), controlPoint1: CGPoint(x: 18.98, y: 9.63), controlPoint2: CGPoint(x: 19.47, y: 9.03))
        shape16Path.addCurveToPoint(CGPoint(x: 21.63, y: 9.63), controlPoint1: CGPoint(x: 20.71, y: 8.97), controlPoint2: CGPoint(x: 21.18, y: 9.18))
        shape16Path.addCurveToPoint(CGPoint(x: 21.63, y: 9.97), controlPoint1: CGPoint(x: 21.73, y: 9.73), controlPoint2: CGPoint(x: 21.73, y: 9.88))
        shape16Path.addCurveToPoint(CGPoint(x: 21.46, y: 10.05), controlPoint1: CGPoint(x: 21.58, y: 10.03), controlPoint2: CGPoint(x: 21.53, y: 10.05))
        shape16Path.addLineToPoint(CGPoint(x: 21.46, y: 10.05))
        shape16Path.closePath()
        shape16Path.miterLimit = 4;

        shape16Path.usesEvenOddFillRule = true;

        fillColor4.setFill()
        shape16Path.fill()
    }

    public class func drawBlue3() {
        //// Color Declarations
        let fillColor = UIColor(red: 0.997, green: 0.849, blue: 0.775, alpha: 1.000)
        let fillColor2 = UIColor(red: 0.411, green: 0.686, blue: 0.839, alpha: 1.000)
        let fillColor3 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let fillColor4 = UIColor(red: 0.993, green: 0.655, blue: 0.569, alpha: 1.000)
        let fillColor5 = UIColor(red: 0.295, green: 0.483, blue: 0.589, alpha: 1.000)

        //// Page-1
        //// Group 옷장선택 3
        //// Group 5
        //// Shape Drawing
        let shapePath = UIBezierPath()
        shapePath.moveToPoint(CGPoint(x: 17.69, y: 14.01))
        shapePath.addCurveToPoint(CGPoint(x: 16.82, y: 16.28), controlPoint1: CGPoint(x: 18.11, y: 14.74), controlPoint2: CGPoint(x: 17.72, y: 15.76))
        shapePath.addLineToPoint(CGPoint(x: 2.71, y: 24.42))
        shapePath.addCurveToPoint(CGPoint(x: 0.32, y: 24.04), controlPoint1: CGPoint(x: 1.81, y: 24.94), controlPoint2: CGPoint(x: 0.73, y: 24.77))
        shapePath.addLineToPoint(CGPoint(x: 0.32, y: 24.04))
        shapePath.addCurveToPoint(CGPoint(x: 1.19, y: 21.76), controlPoint1: CGPoint(x: -0.12, y: 23.31), controlPoint2: CGPoint(x: 0.28, y: 22.29))
        shapePath.addLineToPoint(CGPoint(x: 15.28, y: 13.63))
        shapePath.addCurveToPoint(CGPoint(x: 17.69, y: 14.01), controlPoint1: CGPoint(x: 16.19, y: 13.1), controlPoint2: CGPoint(x: 17.27, y: 13.28))
        shapePath.addLineToPoint(CGPoint(x: 17.69, y: 14.01))
        shapePath.addLineToPoint(CGPoint(x: 17.69, y: 14.01))
        shapePath.closePath()
        shapePath.miterLimit = 4;

        shapePath.usesEvenOddFillRule = true;

        fillColor.setFill()
        shapePath.fill()


        //// Shape 2 Drawing
        let shape2Path = UIBezierPath()
        shape2Path.moveToPoint(CGPoint(x: 22.67, y: 14.01))
        shape2Path.addCurveToPoint(CGPoint(x: 23.54, y: 16.28), controlPoint1: CGPoint(x: 22.25, y: 14.74), controlPoint2: CGPoint(x: 22.63, y: 15.76))
        shape2Path.addLineToPoint(CGPoint(x: 37.64, y: 24.42))
        shape2Path.addCurveToPoint(CGPoint(x: 40.05, y: 24.04), controlPoint1: CGPoint(x: 38.55, y: 24.94), controlPoint2: CGPoint(x: 39.62, y: 24.77))
        shape2Path.addLineToPoint(CGPoint(x: 40.05, y: 24.04))
        shape2Path.addCurveToPoint(CGPoint(x: 39.17, y: 21.76), controlPoint1: CGPoint(x: 40.47, y: 23.31), controlPoint2: CGPoint(x: 40.08, y: 22.29))
        shape2Path.addLineToPoint(CGPoint(x: 25.08, y: 13.63))
        shape2Path.addCurveToPoint(CGPoint(x: 22.67, y: 14.01), controlPoint1: CGPoint(x: 24.17, y: 13.1), controlPoint2: CGPoint(x: 23.09, y: 13.28))
        shape2Path.addLineToPoint(CGPoint(x: 22.67, y: 14.01))
        shape2Path.addLineToPoint(CGPoint(x: 22.67, y: 14.01))
        shape2Path.closePath()
        shape2Path.miterLimit = 4;

        shape2Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape2Path.fill()


        //// Shape 3 Drawing
        let shape3Path = UIBezierPath(roundedRect: CGRect(x: 9.18, y: 11.95, width: 21.85, height: 25.5), cornerRadius: 10.93)
        fillColor.setFill()
        shape3Path.fill()


        //// Shape 4 Drawing


        //// Shape 5 Drawing
        let shape5Path = UIBezierPath()
        shape5Path.moveToPoint(CGPoint(x: 13.84, y: 43.4))
        shape5Path.addCurveToPoint(CGPoint(x: 20.09, y: 31.43), controlPoint1: CGPoint(x: 13.84, y: 36.79), controlPoint2: CGPoint(x: 16.64, y: 31.43))
        shape5Path.addCurveToPoint(CGPoint(x: 26.34, y: 43.4), controlPoint1: CGPoint(x: 23.54, y: 31.43), controlPoint2: CGPoint(x: 26.34, y: 36.78))
        shape5Path.addCurveToPoint(CGPoint(x: 25.36, y: 49.78), controlPoint1: CGPoint(x: 26.34, y: 45.75), controlPoint2: CGPoint(x: 25.98, y: 47.94))
        shape5Path.addLineToPoint(CGPoint(x: 28.18, y: 49.78))
        shape5Path.addCurveToPoint(CGPoint(x: 28.93, y: 43.4), controlPoint1: CGPoint(x: 28.66, y: 47.84), controlPoint2: CGPoint(x: 28.93, y: 45.69))
        shape5Path.addCurveToPoint(CGPoint(x: 20.09, y: 27.83), controlPoint1: CGPoint(x: 28.93, y: 34.66), controlPoint2: CGPoint(x: 25.05, y: 27.83))
        shape5Path.addCurveToPoint(CGPoint(x: 11.24, y: 43.4), controlPoint1: CGPoint(x: 15.12, y: 27.83), controlPoint2: CGPoint(x: 11.24, y: 34.66))
        shape5Path.addCurveToPoint(CGPoint(x: 11.99, y: 49.78), controlPoint1: CGPoint(x: 11.24, y: 45.69), controlPoint2: CGPoint(x: 11.51, y: 47.84))
        shape5Path.addLineToPoint(CGPoint(x: 14.81, y: 49.78))
        shape5Path.addCurveToPoint(CGPoint(x: 13.84, y: 43.4), controlPoint1: CGPoint(x: 14.2, y: 47.94), controlPoint2: CGPoint(x: 13.84, y: 45.75))
        shape5Path.addLineToPoint(CGPoint(x: 13.84, y: 43.4))
        shape5Path.closePath()
        shape5Path.miterLimit = 4;

        shape5Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape5Path.fill()


        //// Shape 6 Drawing
        let shape6Path = UIBezierPath()
        shape6Path.moveToPoint(CGPoint(x: 21.56, y: 11.84))
        shape6Path.addCurveToPoint(CGPoint(x: 20.09, y: 13.97), controlPoint1: CGPoint(x: 21.56, y: 13.01), controlPoint2: CGPoint(x: 20.9, y: 13.97))
        shape6Path.addLineToPoint(CGPoint(x: 20.09, y: 13.97))
        shape6Path.addCurveToPoint(CGPoint(x: 18.62, y: 11.84), controlPoint1: CGPoint(x: 19.28, y: 13.97), controlPoint2: CGPoint(x: 18.62, y: 13.01))
        shape6Path.addLineToPoint(CGPoint(x: 18.62, y: 11.57))
        shape6Path.addCurveToPoint(CGPoint(x: 20.09, y: 9.45), controlPoint1: CGPoint(x: 18.62, y: 10.4), controlPoint2: CGPoint(x: 19.28, y: 9.45))
        shape6Path.addLineToPoint(CGPoint(x: 20.09, y: 9.45))
        shape6Path.addCurveToPoint(CGPoint(x: 21.56, y: 11.57), controlPoint1: CGPoint(x: 20.9, y: 9.45), controlPoint2: CGPoint(x: 21.56, y: 10.4))
        shape6Path.addLineToPoint(CGPoint(x: 21.56, y: 11.84))
        shape6Path.addLineToPoint(CGPoint(x: 21.56, y: 11.84))
        shape6Path.closePath()
        shape6Path.miterLimit = 4;

        shape6Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape6Path.fill()


        //// Shape 7 Drawing
        let shape7Path = UIBezierPath(roundedRect: CGRect(x: 25.38, y: 48.05, width: 8.05, height: 4.1), cornerRadius: 2)
        fillColor.setFill()
        shape7Path.fill()


        //// Shape 8 Drawing
        let shape8Path = UIBezierPath(roundedRect: CGRect(x: 6.78, y: 48.05, width: 8.05, height: 4.1), cornerRadius: 2)
        fillColor.setFill()
        shape8Path.fill()


        //// Shape 9 Drawing
        let shape9Path = UIBezierPath()
        shape9Path.moveToPoint(CGPoint(x: 30.64, y: 29.4))
        shape9Path.addLineToPoint(CGPoint(x: 9.53, y: 29.4))
        shape9Path.addCurveToPoint(CGPoint(x: 9.54, y: 29.42), controlPoint1: CGPoint(x: 9.53, y: 29.41), controlPoint2: CGPoint(x: 9.53, y: 29.41))
        shape9Path.addCurveToPoint(CGPoint(x: 12.28, y: 34.17), controlPoint1: CGPoint(x: 10.09, y: 31.23), controlPoint2: CGPoint(x: 11.04, y: 32.86))
        shape9Path.addLineToPoint(CGPoint(x: 11.24, y: 36.68))
        shape9Path.addLineToPoint(CGPoint(x: 14.79, y: 38.15))
        shape9Path.addLineToPoint(CGPoint(x: 15.47, y: 36.51))
        shape9Path.addCurveToPoint(CGPoint(x: 20.09, y: 37.63), controlPoint1: CGPoint(x: 16.88, y: 37.22), controlPoint2: CGPoint(x: 18.43, y: 37.63))
        shape9Path.addCurveToPoint(CGPoint(x: 24.69, y: 36.52), controlPoint1: CGPoint(x: 21.74, y: 37.63), controlPoint2: CGPoint(x: 23.29, y: 37.22))
        shape9Path.addLineToPoint(CGPoint(x: 25.37, y: 38.15))
        shape9Path.addLineToPoint(CGPoint(x: 28.93, y: 36.68))
        shape9Path.addLineToPoint(CGPoint(x: 27.89, y: 34.18))
        shape9Path.addCurveToPoint(CGPoint(x: 30.64, y: 29.4), controlPoint1: CGPoint(x: 29.13, y: 32.85), controlPoint2: CGPoint(x: 30.09, y: 31.23))
        shape9Path.addLineToPoint(CGPoint(x: 30.64, y: 29.4))
        shape9Path.closePath()
        shape9Path.miterLimit = 4;

        shape9Path.usesEvenOddFillRule = true;

        fillColor2.setFill()
        shape9Path.fill()


        //// Shape 10 Drawing
        let shape10Path = UIBezierPath()
        shape10Path.moveToPoint(CGPoint(x: 9.34, y: 28.55))
        shape10Path.addCurveToPoint(CGPoint(x: 9.53, y: 29.4), controlPoint1: CGPoint(x: 9.41, y: 28.83), controlPoint2: CGPoint(x: 9.45, y: 29.12))
        shape10Path.addLineToPoint(CGPoint(x: 30.64, y: 29.4))
        shape10Path.addCurveToPoint(CGPoint(x: 30.86, y: 28.55), controlPoint1: CGPoint(x: 30.73, y: 29.12), controlPoint2: CGPoint(x: 30.8, y: 28.84))
        shape10Path.addLineToPoint(CGPoint(x: 9.34, y: 28.55))
        shape10Path.addLineToPoint(CGPoint(x: 9.34, y: 28.55))
        shape10Path.closePath()
        shape10Path.miterLimit = 4;

        shape10Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape10Path.fill()


        //// Shape 11 Drawing
        let shape11Path = UIBezierPath()
        shape11Path.moveToPoint(CGPoint(x: 39.62, y: 21.1))
        shape11Path.addCurveToPoint(CGPoint(x: 39.39, y: 21.68), controlPoint1: CGPoint(x: 39.71, y: 21.32), controlPoint2: CGPoint(x: 39.61, y: 21.58))
        shape11Path.addLineToPoint(CGPoint(x: 38.01, y: 22.28))
        shape11Path.addCurveToPoint(CGPoint(x: 37.43, y: 22.05), controlPoint1: CGPoint(x: 37.79, y: 22.37), controlPoint2: CGPoint(x: 37.53, y: 22.28))
        shape11Path.addLineToPoint(CGPoint(x: 37.43, y: 22.05))
        shape11Path.addCurveToPoint(CGPoint(x: 37.66, y: 21.48), controlPoint1: CGPoint(x: 37.34, y: 21.83), controlPoint2: CGPoint(x: 37.44, y: 21.57))
        shape11Path.addLineToPoint(CGPoint(x: 39.05, y: 20.88))
        shape11Path.addCurveToPoint(CGPoint(x: 39.62, y: 21.1), controlPoint1: CGPoint(x: 39.27, y: 20.79), controlPoint2: CGPoint(x: 39.52, y: 20.88))
        shape11Path.addLineToPoint(CGPoint(x: 39.62, y: 21.1))
        shape11Path.addLineToPoint(CGPoint(x: 39.62, y: 21.1))
        shape11Path.closePath()
        shape11Path.miterLimit = 4;

        shape11Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape11Path.fill()


        //// Shape 12 Drawing
        let shape12Path = UIBezierPath()
        shape12Path.moveToPoint(CGPoint(x: 0.8, y: 21.1))
        shape12Path.addCurveToPoint(CGPoint(x: 1.03, y: 21.68), controlPoint1: CGPoint(x: 0.71, y: 21.32), controlPoint2: CGPoint(x: 0.81, y: 21.58))
        shape12Path.addLineToPoint(CGPoint(x: 2.42, y: 22.28))
        shape12Path.addCurveToPoint(CGPoint(x: 2.99, y: 22.05), controlPoint1: CGPoint(x: 2.64, y: 22.37), controlPoint2: CGPoint(x: 2.89, y: 22.28))
        shape12Path.addLineToPoint(CGPoint(x: 2.99, y: 22.05))
        shape12Path.addCurveToPoint(CGPoint(x: 2.76, y: 21.48), controlPoint1: CGPoint(x: 3.09, y: 21.83), controlPoint2: CGPoint(x: 2.98, y: 21.57))
        shape12Path.addLineToPoint(CGPoint(x: 1.38, y: 20.88))
        shape12Path.addCurveToPoint(CGPoint(x: 0.8, y: 21.1), controlPoint1: CGPoint(x: 1.16, y: 20.79), controlPoint2: CGPoint(x: 0.91, y: 20.88))
        shape12Path.addLineToPoint(CGPoint(x: 0.8, y: 21.1))
        shape12Path.addLineToPoint(CGPoint(x: 0.8, y: 21.1))
        shape12Path.closePath()
        shape12Path.miterLimit = 4;

        shape12Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape12Path.fill()


        //// Shape 13 Drawing
        let shape13Path = UIBezierPath()
        shape13Path.moveToPoint(CGPoint(x: 29.77, y: 31.43))
        shape13Path.addLineToPoint(CGPoint(x: 10.35, y: 31.43))
        shape13Path.addLineToPoint(CGPoint(x: 9.53, y: 29.33))
        shape13Path.addLineToPoint(CGPoint(x: 30.64, y: 29.33))
        shape13Path.addLineToPoint(CGPoint(x: 29.77, y: 31.43))
        shape13Path.closePath()
        shape13Path.miterLimit = 4;

        shape13Path.usesEvenOddFillRule = true;

        fillColor5.setFill()
        shape13Path.fill()


        //// Shape 14 Drawing
        let shape14Path = UIBezierPath()
        shape14Path.moveToPoint(CGPoint(x: 33.61, y: 18.01))
        shape14Path.addLineToPoint(CGPoint(x: 25.49, y: 13.32))
        shape14Path.addLineToPoint(CGPoint(x: 25.47, y: 13.35))
        shape14Path.addCurveToPoint(CGPoint(x: 23.36, y: 12.39), controlPoint1: CGPoint(x: 24.8, y: 12.95), controlPoint2: CGPoint(x: 24.08, y: 12.64))
        shape14Path.addLineToPoint(CGPoint(x: 23.26, y: 12.34))
        shape14Path.addLineToPoint(CGPoint(x: 23.25, y: 12.36))
        shape14Path.addCurveToPoint(CGPoint(x: 22.21, y: 12.05), controlPoint1: CGPoint(x: 22.91, y: 12.25), controlPoint2: CGPoint(x: 22.57, y: 12.12))
        shape14Path.addCurveToPoint(CGPoint(x: 20.05, y: 11.81), controlPoint1: CGPoint(x: 21.49, y: 11.89), controlPoint2: CGPoint(x: 20.77, y: 11.81))
        shape14Path.addCurveToPoint(CGPoint(x: 17.7, y: 12.09), controlPoint1: CGPoint(x: 19.28, y: 11.81), controlPoint2: CGPoint(x: 18.48, y: 11.91))
        shape14Path.addCurveToPoint(CGPoint(x: 14.7, y: 13.35), controlPoint1: CGPoint(x: 16.64, y: 12.33), controlPoint2: CGPoint(x: 15.64, y: 12.79))
        shape14Path.addLineToPoint(CGPoint(x: 14.69, y: 13.32))
        shape14Path.addLineToPoint(CGPoint(x: 6.56, y: 18.01))
        shape14Path.addLineToPoint(CGPoint(x: 8.61, y: 21.56))
        shape14Path.addLineToPoint(CGPoint(x: 9.33, y: 21.15))
        shape14Path.addCurveToPoint(CGPoint(x: 9.01, y: 22.74), controlPoint1: CGPoint(x: 9.2, y: 21.67), controlPoint2: CGPoint(x: 9.05, y: 22.19))
        shape14Path.addCurveToPoint(CGPoint(x: 8.96, y: 23.66), controlPoint1: CGPoint(x: 8.99, y: 23.05), controlPoint2: CGPoint(x: 8.96, y: 23.35))
        shape14Path.addLineToPoint(CGPoint(x: 8.96, y: 23.85))
        shape14Path.addLineToPoint(CGPoint(x: 8.96, y: 23.85))
        shape14Path.addLineToPoint(CGPoint(x: 8.96, y: 30.38))
        shape14Path.addLineToPoint(CGPoint(x: 31.18, y: 30.38))
        shape14Path.addLineToPoint(CGPoint(x: 31.18, y: 23.85))
        shape14Path.addLineToPoint(CGPoint(x: 31.14, y: 23.85))
        shape14Path.addLineToPoint(CGPoint(x: 31.14, y: 23.66))
        shape14Path.addCurveToPoint(CGPoint(x: 31.12, y: 23.15), controlPoint1: CGPoint(x: 31.14, y: 23.49), controlPoint2: CGPoint(x: 31.13, y: 23.32))
        shape14Path.addLineToPoint(CGPoint(x: 31.11, y: 22.97))
        shape14Path.addCurveToPoint(CGPoint(x: 30.79, y: 21.12), controlPoint1: CGPoint(x: 31.07, y: 22.33), controlPoint2: CGPoint(x: 30.94, y: 21.72))
        shape14Path.addLineToPoint(CGPoint(x: 31.56, y: 21.56))
        shape14Path.addLineToPoint(CGPoint(x: 31.73, y: 21.26))
        shape14Path.addLineToPoint(CGPoint(x: 33.51, y: 18.27))
        shape14Path.addLineToPoint(CGPoint(x: 33.48, y: 18.24))
        shape14Path.addLineToPoint(CGPoint(x: 33.61, y: 18.01))
        shape14Path.addLineToPoint(CGPoint(x: 33.61, y: 18.01))
        shape14Path.closePath()
        shape14Path.miterLimit = 4;

        shape14Path.usesEvenOddFillRule = true;

        fillColor2.setFill()
        shape14Path.fill()


        //// Shape 15 Drawing
        let shape15Path = UIBezierPath()
        shape15Path.moveToPoint(CGPoint(x: 25.96, y: 5.25))
        shape15Path.addCurveToPoint(CGPoint(x: 25.88, y: 5.27), controlPoint1: CGPoint(x: 25.94, y: 5.25), controlPoint2: CGPoint(x: 25.91, y: 5.27))
        shape15Path.addCurveToPoint(CGPoint(x: 20.09, y: 0.22), controlPoint1: CGPoint(x: 25.47, y: 2.42), controlPoint2: CGPoint(x: 23.05, y: 0.22))
        shape15Path.addCurveToPoint(CGPoint(x: 14.3, y: 5.27), controlPoint1: CGPoint(x: 17.13, y: 0.22), controlPoint2: CGPoint(x: 14.7, y: 2.42))
        shape15Path.addCurveToPoint(CGPoint(x: 14.22, y: 5.25), controlPoint1: CGPoint(x: 14.27, y: 5.27), controlPoint2: CGPoint(x: 14.24, y: 5.25))
        shape15Path.addCurveToPoint(CGPoint(x: 13.37, y: 6.1), controlPoint1: CGPoint(x: 13.75, y: 5.25), controlPoint2: CGPoint(x: 13.37, y: 5.63))
        shape15Path.addCurveToPoint(CGPoint(x: 14.22, y: 6.94), controlPoint1: CGPoint(x: 13.37, y: 6.56), controlPoint2: CGPoint(x: 13.75, y: 6.94))
        shape15Path.addCurveToPoint(CGPoint(x: 14.3, y: 6.92), controlPoint1: CGPoint(x: 14.24, y: 6.94), controlPoint2: CGPoint(x: 14.27, y: 6.92))
        shape15Path.addCurveToPoint(CGPoint(x: 20.09, y: 11.96), controlPoint1: CGPoint(x: 14.7, y: 9.77), controlPoint2: CGPoint(x: 17.13, y: 11.96))
        shape15Path.addCurveToPoint(CGPoint(x: 25.88, y: 6.92), controlPoint1: CGPoint(x: 23.05, y: 11.96), controlPoint2: CGPoint(x: 25.48, y: 9.77))
        shape15Path.addCurveToPoint(CGPoint(x: 25.96, y: 6.94), controlPoint1: CGPoint(x: 25.91, y: 6.92), controlPoint2: CGPoint(x: 25.94, y: 6.94))
        shape15Path.addCurveToPoint(CGPoint(x: 26.8, y: 6.1), controlPoint1: CGPoint(x: 26.43, y: 6.94), controlPoint2: CGPoint(x: 26.8, y: 6.56))
        shape15Path.addCurveToPoint(CGPoint(x: 25.96, y: 5.25), controlPoint1: CGPoint(x: 26.8, y: 5.63), controlPoint2: CGPoint(x: 26.43, y: 5.25))
        shape15Path.addLineToPoint(CGPoint(x: 25.96, y: 5.25))
        shape15Path.closePath()
        shape15Path.miterLimit = 4;

        shape15Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape15Path.fill()


        //// Shape 16 Drawing
        let shape16Path = UIBezierPath(ovalInRect: CGRect(x: 21.75, y: 4.65, width: 1, height: 1))
        fillColor3.setFill()
        shape16Path.fill()


        //// Shape 17 Drawing
        let shape17Path = UIBezierPath(ovalInRect: CGRect(x: 17.25, y: 4.65, width: 1, height: 1))
        fillColor3.setFill()
        shape17Path.fill()


        //// Shape 18 Drawing
        let shape18Path = UIBezierPath(roundedRect: CGRect(x: 18.62, y: 9.55, width: 2.95, height: 4.3), cornerRadius: 1.4)
        fillColor.setFill()
        shape18Path.fill()


        //// Shape 19 Drawing
        let shape19Path = UIBezierPath()
        shape19Path.moveToPoint(CGPoint(x: 18.93, y: 8.92))
        shape19Path.addCurveToPoint(CGPoint(x: 19.11, y: 8.99), controlPoint1: CGPoint(x: 18.99, y: 8.92), controlPoint2: CGPoint(x: 19.06, y: 8.94))
        shape19Path.addCurveToPoint(CGPoint(x: 20.15, y: 9.49), controlPoint1: CGPoint(x: 19.46, y: 9.34), controlPoint2: CGPoint(x: 19.8, y: 9.51))
        shape19Path.addCurveToPoint(CGPoint(x: 21.07, y: 9.01), controlPoint1: CGPoint(x: 20.68, y: 9.46), controlPoint2: CGPoint(x: 21.05, y: 9.01))
        shape19Path.addCurveToPoint(CGPoint(x: 21.4, y: 8.97), controlPoint1: CGPoint(x: 21.14, y: 8.9), controlPoint2: CGPoint(x: 21.3, y: 8.89))
        shape19Path.addCurveToPoint(CGPoint(x: 21.44, y: 9.32), controlPoint1: CGPoint(x: 21.51, y: 9.06), controlPoint2: CGPoint(x: 21.53, y: 9.21))
        shape19Path.addCurveToPoint(CGPoint(x: 20.18, y: 9.97), controlPoint1: CGPoint(x: 21.42, y: 9.34), controlPoint2: CGPoint(x: 20.93, y: 9.94))
        shape19Path.addCurveToPoint(CGPoint(x: 18.76, y: 9.34), controlPoint1: CGPoint(x: 19.68, y: 10), controlPoint2: CGPoint(x: 19.21, y: 9.79))
        shape19Path.addCurveToPoint(CGPoint(x: 18.76, y: 8.99), controlPoint1: CGPoint(x: 18.67, y: 9.24), controlPoint2: CGPoint(x: 18.67, y: 9.09))
        shape19Path.addCurveToPoint(CGPoint(x: 18.93, y: 8.92), controlPoint1: CGPoint(x: 18.81, y: 8.94), controlPoint2: CGPoint(x: 18.87, y: 8.92))
        shape19Path.addLineToPoint(CGPoint(x: 18.93, y: 8.92))
        shape19Path.closePath()
        shape19Path.miterLimit = 4;

        shape19Path.usesEvenOddFillRule = true;

        fillColor4.setFill()
        shape19Path.fill()
    }

    public class func drawBlue4() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let fillColor = UIColor(red: 0.997, green: 0.849, blue: 0.775, alpha: 1.000)
        let fillColor2 = UIColor(red: 0.411, green: 0.686, blue: 0.839, alpha: 1.000)
        let fillColor3 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let fillColor4 = UIColor(red: 0.993, green: 0.655, blue: 0.569, alpha: 1.000)
        let fillColor5 = UIColor(red: 0.295, green: 0.483, blue: 0.589, alpha: 1.000)
        let fillColor6 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let fillColor7 = UIColor(red: 0.638, green: 0.638, blue: 0.638, alpha: 0.800)

        //// Page-1
        //// Group 옷장선택 3
        //// Group 5
        //// Shape Drawing
        let shapePath = UIBezierPath()
        shapePath.moveToPoint(CGPoint(x: 18.07, y: 14.07))
        shapePath.addCurveToPoint(CGPoint(x: 17.2, y: 16.33), controlPoint1: CGPoint(x: 18.49, y: 14.79), controlPoint2: CGPoint(x: 18.1, y: 15.81))
        shapePath.addLineToPoint(CGPoint(x: 3.15, y: 24.45))
        shapePath.addCurveToPoint(CGPoint(x: 0.75, y: 24.07), controlPoint1: CGPoint(x: 2.24, y: 24.96), controlPoint2: CGPoint(x: 1.17, y: 24.8))
        shapePath.addLineToPoint(CGPoint(x: 0.75, y: 24.07))
        shapePath.addCurveToPoint(CGPoint(x: 1.62, y: 21.79), controlPoint1: CGPoint(x: 0.32, y: 23.34), controlPoint2: CGPoint(x: 0.72, y: 22.32))
        shapePath.addLineToPoint(CGPoint(x: 15.67, y: 13.69))
        shapePath.addCurveToPoint(CGPoint(x: 18.07, y: 14.07), controlPoint1: CGPoint(x: 16.57, y: 13.16), controlPoint2: CGPoint(x: 17.65, y: 13.33))
        shapePath.addLineToPoint(CGPoint(x: 18.07, y: 14.07))
        shapePath.addLineToPoint(CGPoint(x: 18.07, y: 14.07))
        shapePath.closePath()
        shapePath.miterLimit = 4;

        shapePath.usesEvenOddFillRule = true;

        fillColor.setFill()
        shapePath.fill()


        //// Shape 2 Drawing
        let shape2Path = UIBezierPath()
        shape2Path.moveToPoint(CGPoint(x: 23.04, y: 14.07))
        shape2Path.addCurveToPoint(CGPoint(x: 23.91, y: 16.33), controlPoint1: CGPoint(x: 22.61, y: 14.79), controlPoint2: CGPoint(x: 23, y: 15.81))
        shape2Path.addLineToPoint(CGPoint(x: 37.95, y: 24.45))
        shape2Path.addCurveToPoint(CGPoint(x: 40.35, y: 24.07), controlPoint1: CGPoint(x: 38.86, y: 24.96), controlPoint2: CGPoint(x: 39.93, y: 24.8))
        shape2Path.addLineToPoint(CGPoint(x: 40.35, y: 24.07))
        shape2Path.addCurveToPoint(CGPoint(x: 39.48, y: 21.79), controlPoint1: CGPoint(x: 40.78, y: 23.34), controlPoint2: CGPoint(x: 40.38, y: 22.32))
        shape2Path.addLineToPoint(CGPoint(x: 25.43, y: 13.69))
        shape2Path.addCurveToPoint(CGPoint(x: 23.04, y: 14.07), controlPoint1: CGPoint(x: 24.53, y: 13.16), controlPoint2: CGPoint(x: 23.46, y: 13.33))
        shape2Path.addLineToPoint(CGPoint(x: 23.04, y: 14.07))
        shape2Path.addLineToPoint(CGPoint(x: 23.04, y: 14.07))
        shape2Path.closePath()
        shape2Path.miterLimit = 4;

        shape2Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape2Path.fill()


        //// Shape 3 Drawing
        let shape3Path = UIBezierPath()
        shape3Path.moveToPoint(CGPoint(x: 26.32, y: 5.34))
        shape3Path.addCurveToPoint(CGPoint(x: 26.23, y: 5.36), controlPoint1: CGPoint(x: 26.29, y: 5.34), controlPoint2: CGPoint(x: 26.26, y: 5.35))
        shape3Path.addCurveToPoint(CGPoint(x: 20.46, y: 0.33), controlPoint1: CGPoint(x: 25.83, y: 2.51), controlPoint2: CGPoint(x: 23.42, y: 0.33))
        shape3Path.addCurveToPoint(CGPoint(x: 14.69, y: 5.36), controlPoint1: CGPoint(x: 17.51, y: 0.33), controlPoint2: CGPoint(x: 15.09, y: 2.51))
        shape3Path.addCurveToPoint(CGPoint(x: 14.61, y: 5.34), controlPoint1: CGPoint(x: 14.66, y: 5.35), controlPoint2: CGPoint(x: 14.64, y: 5.34))
        shape3Path.addCurveToPoint(CGPoint(x: 13.77, y: 6.18), controlPoint1: CGPoint(x: 14.14, y: 5.34), controlPoint2: CGPoint(x: 13.77, y: 5.71))
        shape3Path.addCurveToPoint(CGPoint(x: 14.61, y: 7.02), controlPoint1: CGPoint(x: 13.77, y: 6.64), controlPoint2: CGPoint(x: 14.14, y: 7.02))
        shape3Path.addCurveToPoint(CGPoint(x: 14.69, y: 7), controlPoint1: CGPoint(x: 14.64, y: 7.02), controlPoint2: CGPoint(x: 14.66, y: 7))
        shape3Path.addCurveToPoint(CGPoint(x: 20.46, y: 12.03), controlPoint1: CGPoint(x: 15.09, y: 9.84), controlPoint2: CGPoint(x: 17.51, y: 12.03))
        shape3Path.addCurveToPoint(CGPoint(x: 26.23, y: 7), controlPoint1: CGPoint(x: 23.42, y: 12.03), controlPoint2: CGPoint(x: 25.83, y: 9.84))
        shape3Path.addCurveToPoint(CGPoint(x: 26.32, y: 7.02), controlPoint1: CGPoint(x: 26.26, y: 7), controlPoint2: CGPoint(x: 26.29, y: 7.02))
        shape3Path.addCurveToPoint(CGPoint(x: 27.15, y: 6.18), controlPoint1: CGPoint(x: 26.78, y: 7.02), controlPoint2: CGPoint(x: 27.15, y: 6.64))
        shape3Path.addCurveToPoint(CGPoint(x: 26.32, y: 5.34), controlPoint1: CGPoint(x: 27.15, y: 5.71), controlPoint2: CGPoint(x: 26.78, y: 5.34))
        shape3Path.addLineToPoint(CGPoint(x: 26.32, y: 5.34))
        shape3Path.closePath()
        shape3Path.miterLimit = 4;

        shape3Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape3Path.fill()


        //// Shape 4 Drawing
        let shape4Path = UIBezierPath()
        shape4Path.moveToPoint(CGPoint(x: 31.36, y: 23.69))
        shape4Path.addCurveToPoint(CGPoint(x: 20.46, y: 12.03), controlPoint1: CGPoint(x: 31.36, y: 17.25), controlPoint2: CGPoint(x: 26.48, y: 12.03))
        shape4Path.addCurveToPoint(CGPoint(x: 9.56, y: 23.69), controlPoint1: CGPoint(x: 14.44, y: 12.03), controlPoint2: CGPoint(x: 9.56, y: 17.25))
        shape4Path.addLineToPoint(CGPoint(x: 9.56, y: 25.8))
        shape4Path.addCurveToPoint(CGPoint(x: 20.46, y: 37.46), controlPoint1: CGPoint(x: 9.56, y: 32.24), controlPoint2: CGPoint(x: 14.44, y: 37.46))
        shape4Path.addCurveToPoint(CGPoint(x: 31.36, y: 25.8), controlPoint1: CGPoint(x: 26.48, y: 37.46), controlPoint2: CGPoint(x: 31.36, y: 32.24))
        shape4Path.addLineToPoint(CGPoint(x: 31.36, y: 25.8))
        shape4Path.addLineToPoint(CGPoint(x: 31.36, y: 23.69))
        shape4Path.addLineToPoint(CGPoint(x: 31.36, y: 23.69))
        shape4Path.closePath()
        shape4Path.miterLimit = 4;

        shape4Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape4Path.fill()


        //// Shape 5 Drawing
        let shape5Path = UIBezierPath()
        shape5Path.moveToPoint(CGPoint(x: 33.84, y: 18.31))
        shape5Path.addLineToPoint(CGPoint(x: 33.81, y: 18.29))
        shape5Path.addLineToPoint(CGPoint(x: 33.94, y: 18.06))
        shape5Path.addLineToPoint(CGPoint(x: 25.85, y: 13.39))
        shape5Path.addLineToPoint(CGPoint(x: 25.83, y: 13.41))
        shape5Path.addCurveToPoint(CGPoint(x: 23.72, y: 12.46), controlPoint1: CGPoint(x: 25.15, y: 13.02), controlPoint2: CGPoint(x: 24.44, y: 12.71))
        shape5Path.addLineToPoint(CGPoint(x: 23.63, y: 12.4))
        shape5Path.addLineToPoint(CGPoint(x: 23.62, y: 12.43))
        shape5Path.addCurveToPoint(CGPoint(x: 22.57, y: 12.11), controlPoint1: CGPoint(x: 23.27, y: 12.32), controlPoint2: CGPoint(x: 22.93, y: 12.18))
        shape5Path.addCurveToPoint(CGPoint(x: 20.42, y: 11.88), controlPoint1: CGPoint(x: 21.86, y: 11.96), controlPoint2: CGPoint(x: 21.13, y: 11.88))
        shape5Path.addCurveToPoint(CGPoint(x: 18.09, y: 12.15), controlPoint1: CGPoint(x: 19.65, y: 11.88), controlPoint2: CGPoint(x: 18.86, y: 11.97))
        shape5Path.addCurveToPoint(CGPoint(x: 15.09, y: 13.41), controlPoint1: CGPoint(x: 17.02, y: 12.39), controlPoint2: CGPoint(x: 16.03, y: 12.85))
        shape5Path.addLineToPoint(CGPoint(x: 15.07, y: 13.39))
        shape5Path.addLineToPoint(CGPoint(x: 6.98, y: 18.06))
        shape5Path.addLineToPoint(CGPoint(x: 9.03, y: 21.6))
        shape5Path.addLineToPoint(CGPoint(x: 9.74, y: 21.18))
        shape5Path.addCurveToPoint(CGPoint(x: 9.42, y: 22.77), controlPoint1: CGPoint(x: 9.61, y: 21.7), controlPoint2: CGPoint(x: 9.46, y: 22.22))
        shape5Path.addCurveToPoint(CGPoint(x: 9.37, y: 23.69), controlPoint1: CGPoint(x: 9.39, y: 23.07), controlPoint2: CGPoint(x: 9.37, y: 23.38))
        shape5Path.addLineToPoint(CGPoint(x: 9.37, y: 25.26))
        shape5Path.addLineToPoint(CGPoint(x: 31.48, y: 25.26))
        shape5Path.addLineToPoint(CGPoint(x: 31.48, y: 23.69))
        shape5Path.addCurveToPoint(CGPoint(x: 31.45, y: 23.18), controlPoint1: CGPoint(x: 31.48, y: 23.52), controlPoint2: CGPoint(x: 31.46, y: 23.35))
        shape5Path.addLineToPoint(CGPoint(x: 31.45, y: 23))
        shape5Path.addCurveToPoint(CGPoint(x: 31.13, y: 21.15), controlPoint1: CGPoint(x: 31.41, y: 22.36), controlPoint2: CGPoint(x: 31.27, y: 21.76))
        shape5Path.addLineToPoint(CGPoint(x: 31.89, y: 21.6))
        shape5Path.addLineToPoint(CGPoint(x: 32.06, y: 21.3))
        shape5Path.miterLimit = 4;

        shape5Path.usesEvenOddFillRule = true;

        fillColor2.setFill()
        shape5Path.fill()


        //// Shape 6 Drawing
        let shape6Path = UIBezierPath()
        shape6Path.moveToPoint(CGPoint(x: 14.24, y: 43.36))
        shape6Path.addCurveToPoint(CGPoint(x: 20.46, y: 31.43), controlPoint1: CGPoint(x: 14.24, y: 36.77), controlPoint2: CGPoint(x: 17.02, y: 31.43))
        shape6Path.addCurveToPoint(CGPoint(x: 26.69, y: 43.36), controlPoint1: CGPoint(x: 23.9, y: 31.43), controlPoint2: CGPoint(x: 26.69, y: 36.77))
        shape6Path.addCurveToPoint(CGPoint(x: 25.72, y: 49.73), controlPoint1: CGPoint(x: 26.69, y: 45.7), controlPoint2: CGPoint(x: 26.33, y: 47.88))
        shape6Path.addLineToPoint(CGPoint(x: 28.53, y: 49.73))
        shape6Path.addCurveToPoint(CGPoint(x: 29.29, y: 43.36), controlPoint1: CGPoint(x: 29.01, y: 47.79), controlPoint2: CGPoint(x: 29.29, y: 45.64))
        shape6Path.addCurveToPoint(CGPoint(x: 20.47, y: 27.84), controlPoint1: CGPoint(x: 29.29, y: 34.65), controlPoint2: CGPoint(x: 25.41, y: 27.84))
        shape6Path.addCurveToPoint(CGPoint(x: 11.64, y: 43.36), controlPoint1: CGPoint(x: 15.52, y: 27.84), controlPoint2: CGPoint(x: 11.64, y: 34.65))
        shape6Path.addCurveToPoint(CGPoint(x: 12.4, y: 49.73), controlPoint1: CGPoint(x: 11.64, y: 45.64), controlPoint2: CGPoint(x: 11.91, y: 47.79))
        shape6Path.addLineToPoint(CGPoint(x: 15.21, y: 49.73))
        shape6Path.addCurveToPoint(CGPoint(x: 14.24, y: 43.36), controlPoint1: CGPoint(x: 14.59, y: 47.88), controlPoint2: CGPoint(x: 14.24, y: 45.7))
        shape6Path.addLineToPoint(CGPoint(x: 14.24, y: 43.36))
        shape6Path.closePath()
        shape6Path.miterLimit = 4;

        shape6Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape6Path.fill()


        //// Shape 7 Drawing
        let shape7Path = UIBezierPath()
        shape7Path.moveToPoint(CGPoint(x: 21.93, y: 11.91))
        shape7Path.addCurveToPoint(CGPoint(x: 20.46, y: 14.02), controlPoint1: CGPoint(x: 21.93, y: 13.08), controlPoint2: CGPoint(x: 21.28, y: 14.02))
        shape7Path.addLineToPoint(CGPoint(x: 20.46, y: 14.02))
        shape7Path.addCurveToPoint(CGPoint(x: 19, y: 11.91), controlPoint1: CGPoint(x: 19.65, y: 14.02), controlPoint2: CGPoint(x: 19, y: 13.07))
        shape7Path.addLineToPoint(CGPoint(x: 19, y: 11.64))
        shape7Path.addCurveToPoint(CGPoint(x: 20.46, y: 9.52), controlPoint1: CGPoint(x: 19, y: 10.47), controlPoint2: CGPoint(x: 19.65, y: 9.52))
        shape7Path.addLineToPoint(CGPoint(x: 20.46, y: 9.52))
        shape7Path.addCurveToPoint(CGPoint(x: 21.93, y: 11.64), controlPoint1: CGPoint(x: 21.27, y: 9.52), controlPoint2: CGPoint(x: 21.93, y: 10.47))
        shape7Path.addLineToPoint(CGPoint(x: 21.93, y: 11.91))
        shape7Path.addLineToPoint(CGPoint(x: 21.93, y: 11.91))
        shape7Path.closePath()
        shape7Path.miterLimit = 4;

        shape7Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape7Path.fill()


        //// Shape 8 Drawing
        let shape8Path = UIBezierPath(roundedRect: CGRect(x: 25.68, y: 48.03, width: 8.05, height: 4.05), cornerRadius: 2)
        fillColor.setFill()
        shape8Path.fill()


        //// Shape 9 Drawing
        let shape9Path = UIBezierPath(roundedRect: CGRect(x: 7.18, y: 48.03, width: 8.05, height: 4.05), cornerRadius: 2)
        fillColor.setFill()
        shape9Path.fill()


        //// Oval 2 Drawing
        let oval2Path = UIBezierPath(ovalInRect: CGRect(x: 22.17, y: 4.79, width: 1, height: 1))
        fillColor3.setFill()
        oval2Path.fill()


        //// Oval 4 Drawing
        let oval4Path = UIBezierPath(ovalInRect: CGRect(x: 17.69, y: 4.79, width: 1, height: 1))
        fillColor3.setFill()
        oval4Path.fill()


        //// Shape 10 Drawing
        let shape10Path = UIBezierPath()
        shape10Path.moveToPoint(CGPoint(x: 21.93, y: 12.45))
        shape10Path.addCurveToPoint(CGPoint(x: 20.46, y: 13.92), controlPoint1: CGPoint(x: 21.93, y: 13.27), controlPoint2: CGPoint(x: 21.28, y: 13.92))
        shape10Path.addLineToPoint(CGPoint(x: 20.46, y: 13.92))
        shape10Path.addCurveToPoint(CGPoint(x: 19, y: 12.45), controlPoint1: CGPoint(x: 19.65, y: 13.92), controlPoint2: CGPoint(x: 19, y: 13.27))
        shape10Path.addLineToPoint(CGPoint(x: 19, y: 11.08))
        shape10Path.addCurveToPoint(CGPoint(x: 20.46, y: 9.62), controlPoint1: CGPoint(x: 19, y: 10.28), controlPoint2: CGPoint(x: 19.65, y: 9.62))
        shape10Path.addLineToPoint(CGPoint(x: 20.46, y: 9.62))
        shape10Path.addCurveToPoint(CGPoint(x: 21.93, y: 11.08), controlPoint1: CGPoint(x: 21.27, y: 9.62), controlPoint2: CGPoint(x: 21.93, y: 10.28))
        shape10Path.addLineToPoint(CGPoint(x: 21.93, y: 12.45))
        shape10Path.addLineToPoint(CGPoint(x: 21.93, y: 12.45))
        shape10Path.closePath()
        shape10Path.miterLimit = 4;

        shape10Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape10Path.fill()


        //// Shape 11 Drawing
        let shape11Path = UIBezierPath()
        shape11Path.moveToPoint(CGPoint(x: 30.98, y: 29.41))
        shape11Path.addLineToPoint(CGPoint(x: 9.94, y: 29.41))
        shape11Path.addCurveToPoint(CGPoint(x: 9.95, y: 29.43), controlPoint1: CGPoint(x: 9.94, y: 29.42), controlPoint2: CGPoint(x: 9.94, y: 29.42))
        shape11Path.addCurveToPoint(CGPoint(x: 12.68, y: 34.16), controlPoint1: CGPoint(x: 10.49, y: 31.24), controlPoint2: CGPoint(x: 11.44, y: 32.86))
        shape11Path.addLineToPoint(CGPoint(x: 11.64, y: 36.66))
        shape11Path.addLineToPoint(CGPoint(x: 15.18, y: 38.13))
        shape11Path.addLineToPoint(CGPoint(x: 15.86, y: 36.5))
        shape11Path.addCurveToPoint(CGPoint(x: 20.46, y: 37.62), controlPoint1: CGPoint(x: 17.27, y: 37.2), controlPoint2: CGPoint(x: 18.82, y: 37.62))
        shape11Path.addCurveToPoint(CGPoint(x: 25.05, y: 36.51), controlPoint1: CGPoint(x: 22.1, y: 37.62), controlPoint2: CGPoint(x: 23.65, y: 37.2))
        shape11Path.addLineToPoint(CGPoint(x: 25.72, y: 38.13))
        shape11Path.addLineToPoint(CGPoint(x: 29.27, y: 36.66))
        shape11Path.addLineToPoint(CGPoint(x: 28.23, y: 34.18))
        shape11Path.addCurveToPoint(CGPoint(x: 30.98, y: 29.41), controlPoint1: CGPoint(x: 29.48, y: 32.85), controlPoint2: CGPoint(x: 30.43, y: 31.23))
        shape11Path.addLineToPoint(CGPoint(x: 30.98, y: 29.41))
        shape11Path.closePath()
        shape11Path.miterLimit = 4;

        shape11Path.usesEvenOddFillRule = true;

        fillColor2.setFill()
        shape11Path.fill()


        //// Shape 12 Drawing
        let shape12Path = UIBezierPath()
        shape12Path.moveToPoint(CGPoint(x: 9.75, y: 28.56))
        shape12Path.addCurveToPoint(CGPoint(x: 9.94, y: 29.41), controlPoint1: CGPoint(x: 9.81, y: 28.84), controlPoint2: CGPoint(x: 9.86, y: 29.13))
        shape12Path.addLineToPoint(CGPoint(x: 30.98, y: 29.41))
        shape12Path.addCurveToPoint(CGPoint(x: 31.2, y: 28.56), controlPoint1: CGPoint(x: 31.06, y: 29.13), controlPoint2: CGPoint(x: 31.13, y: 28.85))
        shape12Path.addLineToPoint(CGPoint(x: 9.75, y: 28.56))
        shape12Path.addLineToPoint(CGPoint(x: 9.75, y: 28.56))
        shape12Path.closePath()
        shape12Path.miterLimit = 4;

        shape12Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape12Path.fill()


        //// Shape 13 Drawing
        let shape13Path = UIBezierPath()
        shape13Path.moveToPoint(CGPoint(x: 9.75, y: 28.56))
        shape13Path.addLineToPoint(CGPoint(x: 31.2, y: 28.56))
        shape13Path.addCurveToPoint(CGPoint(x: 31.51, y: 25.8), controlPoint1: CGPoint(x: 31.4, y: 27.67), controlPoint2: CGPoint(x: 31.51, y: 26.75))
        shape13Path.addLineToPoint(CGPoint(x: 31.51, y: 25.26))
        shape13Path.addLineToPoint(CGPoint(x: 9.41, y: 25.26))
        shape13Path.addLineToPoint(CGPoint(x: 9.41, y: 25.8))
        shape13Path.addCurveToPoint(CGPoint(x: 9.75, y: 28.56), controlPoint1: CGPoint(x: 9.41, y: 26.76), controlPoint2: CGPoint(x: 9.55, y: 27.67))
        shape13Path.addLineToPoint(CGPoint(x: 9.75, y: 28.56))
        shape13Path.closePath()
        shape13Path.miterLimit = 4;

        shape13Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape13Path.fill()


        //// Shape 14 Drawing
        let shape14Path = UIBezierPath()
        shape14Path.moveToPoint(CGPoint(x: 39.93, y: 21.14))
        shape14Path.addCurveToPoint(CGPoint(x: 39.7, y: 21.71), controlPoint1: CGPoint(x: 40.02, y: 21.36), controlPoint2: CGPoint(x: 39.93, y: 21.62))
        shape14Path.addLineToPoint(CGPoint(x: 38.32, y: 22.31))
        shape14Path.addCurveToPoint(CGPoint(x: 37.75, y: 22.08), controlPoint1: CGPoint(x: 38.1, y: 22.4), controlPoint2: CGPoint(x: 37.85, y: 22.31))
        shape14Path.addLineToPoint(CGPoint(x: 37.75, y: 22.08))
        shape14Path.addCurveToPoint(CGPoint(x: 37.98, y: 21.51), controlPoint1: CGPoint(x: 37.66, y: 21.86), controlPoint2: CGPoint(x: 37.76, y: 21.61))
        shape14Path.addLineToPoint(CGPoint(x: 39.36, y: 20.91))
        shape14Path.addCurveToPoint(CGPoint(x: 39.93, y: 21.14), controlPoint1: CGPoint(x: 39.57, y: 20.82), controlPoint2: CGPoint(x: 39.83, y: 20.92))
        shape14Path.addLineToPoint(CGPoint(x: 39.93, y: 21.14))
        shape14Path.addLineToPoint(CGPoint(x: 39.93, y: 21.14))
        shape14Path.closePath()
        shape14Path.miterLimit = 4;

        shape14Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape14Path.fill()


        //// Shape 15 Drawing
        let shape15Path = UIBezierPath()
        shape15Path.moveToPoint(CGPoint(x: 1.24, y: 21.14))
        shape15Path.addCurveToPoint(CGPoint(x: 1.47, y: 21.71), controlPoint1: CGPoint(x: 1.15, y: 21.36), controlPoint2: CGPoint(x: 1.25, y: 21.62))
        shape15Path.addLineToPoint(CGPoint(x: 2.85, y: 22.31))
        shape15Path.addCurveToPoint(CGPoint(x: 3.42, y: 22.08), controlPoint1: CGPoint(x: 3.07, y: 22.4), controlPoint2: CGPoint(x: 3.32, y: 22.31))
        shape15Path.addLineToPoint(CGPoint(x: 3.42, y: 22.08))
        shape15Path.addCurveToPoint(CGPoint(x: 3.19, y: 21.51), controlPoint1: CGPoint(x: 3.51, y: 21.86), controlPoint2: CGPoint(x: 3.41, y: 21.61))
        shape15Path.addLineToPoint(CGPoint(x: 1.81, y: 20.91))
        shape15Path.addCurveToPoint(CGPoint(x: 1.24, y: 21.14), controlPoint1: CGPoint(x: 1.6, y: 20.82), controlPoint2: CGPoint(x: 1.34, y: 20.92))
        shape15Path.addLineToPoint(CGPoint(x: 1.24, y: 21.14))
        shape15Path.addLineToPoint(CGPoint(x: 1.24, y: 21.14))
        shape15Path.closePath()
        shape15Path.miterLimit = 4;

        shape15Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape15Path.fill()


        //// Shape 16 Drawing
        let shape16Path = UIBezierPath()
        shape16Path.moveToPoint(CGPoint(x: 21.62, y: 10.04))
        shape16Path.addCurveToPoint(CGPoint(x: 21.45, y: 9.97), controlPoint1: CGPoint(x: 21.56, y: 10.04), controlPoint2: CGPoint(x: 21.5, y: 10.03))
        shape16Path.addCurveToPoint(CGPoint(x: 20.4, y: 9.48), controlPoint1: CGPoint(x: 21.1, y: 9.63), controlPoint2: CGPoint(x: 20.75, y: 9.46))
        shape16Path.addCurveToPoint(CGPoint(x: 19.5, y: 9.96), controlPoint1: CGPoint(x: 19.88, y: 9.5), controlPoint2: CGPoint(x: 19.5, y: 9.95))
        shape16Path.addCurveToPoint(CGPoint(x: 19.16, y: 9.99), controlPoint1: CGPoint(x: 19.42, y: 10.06), controlPoint2: CGPoint(x: 19.26, y: 10.07))
        shape16Path.addCurveToPoint(CGPoint(x: 19.12, y: 9.65), controlPoint1: CGPoint(x: 19.05, y: 9.91), controlPoint2: CGPoint(x: 19.04, y: 9.75))
        shape16Path.addCurveToPoint(CGPoint(x: 20.38, y: 8.99), controlPoint1: CGPoint(x: 19.14, y: 9.62), controlPoint2: CGPoint(x: 19.63, y: 9.03))
        shape16Path.addCurveToPoint(CGPoint(x: 21.79, y: 9.63), controlPoint1: CGPoint(x: 20.87, y: 8.97), controlPoint2: CGPoint(x: 21.35, y: 9.18))
        shape16Path.addCurveToPoint(CGPoint(x: 21.79, y: 9.97), controlPoint1: CGPoint(x: 21.89, y: 9.72), controlPoint2: CGPoint(x: 21.89, y: 9.88))
        shape16Path.addCurveToPoint(CGPoint(x: 21.62, y: 10.04), controlPoint1: CGPoint(x: 21.75, y: 10.03), controlPoint2: CGPoint(x: 21.68, y: 10.04))
        shape16Path.addLineToPoint(CGPoint(x: 21.62, y: 10.04))
        shape16Path.closePath()
        shape16Path.miterLimit = 4;

        shape16Path.usesEvenOddFillRule = true;

        fillColor4.setFill()
        shape16Path.fill()


        //// Shape 17 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 12.25, 17.5)
        CGContextRotateCTM(context, -30.05 * CGFloat(M_PI) / 180)

        let shape17Path = UIBezierPath(rect: CGRect(x: -4.67, y: -2.05, width: 9.35, height: 4.1))
        fillColor2.setFill()
        shape17Path.fill()

        CGContextRestoreGState(context)


        //// Shape 18 Drawing
        let shape18Path = UIBezierPath()
        shape18Path.moveToPoint(CGPoint(x: 28.27, y: 34.26))
        shape18Path.addLineToPoint(CGPoint(x: 12.68, y: 34.26))
        shape18Path.addLineToPoint(CGPoint(x: 11.79, y: 33.08))
        shape18Path.addLineToPoint(CGPoint(x: 29.12, y: 33.08))
        shape18Path.addLineToPoint(CGPoint(x: 28.27, y: 34.26))
        shape18Path.closePath()
        shape18Path.miterLimit = 4;

        shape18Path.usesEvenOddFillRule = true;

        fillColor7.setFill()
        shape18Path.fill()


        //// Rectangle-path Drawing
        let rectanglepathPath = UIBezierPath(rect: CGRect(x: 9.41, y: 23.29, width: 22.11, height: 11.53))
        fillColor2.setFill()
        rectanglepathPath.fill()


        //// Shape 19 Drawing
        let shape19Path = UIBezierPath()
        shape19Path.moveToPoint(CGPoint(x: 28.8, y: 35.63))
        shape19Path.addLineToPoint(CGPoint(x: 12.07, y: 35.63))
        shape19Path.addLineToPoint(CGPoint(x: 12.4, y: 34.82))
        shape19Path.addLineToPoint(CGPoint(x: 28.42, y: 34.82))
        shape19Path.addLineToPoint(CGPoint(x: 28.8, y: 35.63))
        shape19Path.closePath()
        shape19Path.miterLimit = 4;

        shape19Path.usesEvenOddFillRule = true;

        fillColor5.setFill()
        shape19Path.fill()
    }

    public class func drawBlue5() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let fillColor = UIColor(red: 0.997, green: 0.849, blue: 0.775, alpha: 1.000)
        let fillColor2 = UIColor(red: 0.411, green: 0.686, blue: 0.839, alpha: 1.000)
        let fillColor3 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let fillColor4 = UIColor(red: 0.993, green: 0.655, blue: 0.569, alpha: 1.000)
        let fillColor6 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let fillColor8 = UIColor(red: 0.831, green: 0.835, blue: 0.835, alpha: 0.300)

        //// Page-1
        //// Group 옷장선택 3
        //// Group 5
        //// Shape Drawing
        let shapePath = UIBezierPath()
        shapePath.moveToPoint(CGPoint(x: 18.42, y: 14.07))
        shapePath.addCurveToPoint(CGPoint(x: 17.55, y: 16.33), controlPoint1: CGPoint(x: 18.84, y: 14.79), controlPoint2: CGPoint(x: 18.45, y: 15.81))
        shapePath.addLineToPoint(CGPoint(x: 3.5, y: 24.45))
        shapePath.addCurveToPoint(CGPoint(x: 1.1, y: 24.07), controlPoint1: CGPoint(x: 2.59, y: 24.97), controlPoint2: CGPoint(x: 1.52, y: 24.8))
        shapePath.addLineToPoint(CGPoint(x: 1.1, y: 24.07))
        shapePath.addCurveToPoint(CGPoint(x: 1.97, y: 21.8), controlPoint1: CGPoint(x: 0.68, y: 23.34), controlPoint2: CGPoint(x: 1.07, y: 22.32))
        shapePath.addLineToPoint(CGPoint(x: 16.02, y: 13.69))
        shapePath.addCurveToPoint(CGPoint(x: 18.42, y: 14.07), controlPoint1: CGPoint(x: 16.92, y: 13.16), controlPoint2: CGPoint(x: 18, y: 13.34))
        shapePath.addLineToPoint(CGPoint(x: 18.42, y: 14.07))
        shapePath.addLineToPoint(CGPoint(x: 18.42, y: 14.07))
        shapePath.closePath()
        shapePath.miterLimit = 4;

        shapePath.usesEvenOddFillRule = true;

        fillColor.setFill()
        shapePath.fill()


        //// Shape 2 Drawing
        let shape2Path = UIBezierPath()
        shape2Path.moveToPoint(CGPoint(x: 23.39, y: 14.07))
        shape2Path.addCurveToPoint(CGPoint(x: 24.26, y: 16.33), controlPoint1: CGPoint(x: 22.97, y: 14.79), controlPoint2: CGPoint(x: 23.35, y: 15.81))
        shape2Path.addLineToPoint(CGPoint(x: 38.31, y: 24.45))
        shape2Path.addCurveToPoint(CGPoint(x: 40.71, y: 24.07), controlPoint1: CGPoint(x: 39.21, y: 24.97), controlPoint2: CGPoint(x: 40.28, y: 24.8))
        shape2Path.addLineToPoint(CGPoint(x: 40.71, y: 24.07))
        shape2Path.addCurveToPoint(CGPoint(x: 39.84, y: 21.8), controlPoint1: CGPoint(x: 41.13, y: 23.34), controlPoint2: CGPoint(x: 40.74, y: 22.32))
        shape2Path.addLineToPoint(CGPoint(x: 25.79, y: 13.69))
        shape2Path.addCurveToPoint(CGPoint(x: 23.39, y: 14.07), controlPoint1: CGPoint(x: 24.88, y: 13.16), controlPoint2: CGPoint(x: 23.81, y: 13.34))
        shape2Path.addLineToPoint(CGPoint(x: 23.39, y: 14.07))
        shape2Path.addLineToPoint(CGPoint(x: 23.39, y: 14.07))
        shape2Path.closePath()
        shape2Path.miterLimit = 4;

        shape2Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape2Path.fill()


        //// Shape 3 Drawing
        let shape3Path = UIBezierPath()
        shape3Path.moveToPoint(CGPoint(x: 31.71, y: 23.69))
        shape3Path.addCurveToPoint(CGPoint(x: 20.81, y: 12.03), controlPoint1: CGPoint(x: 31.71, y: 17.25), controlPoint2: CGPoint(x: 26.83, y: 12.03))
        shape3Path.addCurveToPoint(CGPoint(x: 9.91, y: 23.69), controlPoint1: CGPoint(x: 14.79, y: 12.03), controlPoint2: CGPoint(x: 9.91, y: 17.25))
        shape3Path.addLineToPoint(CGPoint(x: 9.91, y: 25.8))
        shape3Path.addCurveToPoint(CGPoint(x: 20.81, y: 37.46), controlPoint1: CGPoint(x: 9.91, y: 32.24), controlPoint2: CGPoint(x: 14.79, y: 37.46))
        shape3Path.addCurveToPoint(CGPoint(x: 31.71, y: 25.8), controlPoint1: CGPoint(x: 26.83, y: 37.46), controlPoint2: CGPoint(x: 31.71, y: 32.24))
        shape3Path.addLineToPoint(CGPoint(x: 31.71, y: 25.8))
        shape3Path.addLineToPoint(CGPoint(x: 31.71, y: 23.69))
        shape3Path.addLineToPoint(CGPoint(x: 31.71, y: 23.69))
        shape3Path.closePath()
        shape3Path.miterLimit = 4;

        shape3Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape3Path.fill()


        //// Shape 4 Drawing
        let shape4Path = UIBezierPath()
        shape4Path.moveToPoint(CGPoint(x: 14.59, y: 43.36))
        shape4Path.addCurveToPoint(CGPoint(x: 20.81, y: 31.43), controlPoint1: CGPoint(x: 14.59, y: 36.77), controlPoint2: CGPoint(x: 17.37, y: 31.43))
        shape4Path.addCurveToPoint(CGPoint(x: 27.04, y: 43.36), controlPoint1: CGPoint(x: 24.25, y: 31.43), controlPoint2: CGPoint(x: 27.04, y: 36.77))
        shape4Path.addCurveToPoint(CGPoint(x: 26.07, y: 49.73), controlPoint1: CGPoint(x: 27.04, y: 45.71), controlPoint2: CGPoint(x: 26.68, y: 47.88))
        shape4Path.addLineToPoint(CGPoint(x: 28.88, y: 49.73))
        shape4Path.addCurveToPoint(CGPoint(x: 29.64, y: 43.36), controlPoint1: CGPoint(x: 29.36, y: 47.79), controlPoint2: CGPoint(x: 29.64, y: 45.65))
        shape4Path.addCurveToPoint(CGPoint(x: 20.82, y: 27.84), controlPoint1: CGPoint(x: 29.64, y: 34.65), controlPoint2: CGPoint(x: 25.76, y: 27.84))
        shape4Path.addCurveToPoint(CGPoint(x: 11.99, y: 43.36), controlPoint1: CGPoint(x: 15.87, y: 27.84), controlPoint2: CGPoint(x: 11.99, y: 34.65))
        shape4Path.addCurveToPoint(CGPoint(x: 12.75, y: 49.73), controlPoint1: CGPoint(x: 11.99, y: 45.65), controlPoint2: CGPoint(x: 12.26, y: 47.79))
        shape4Path.addLineToPoint(CGPoint(x: 15.55, y: 49.73))
        shape4Path.addCurveToPoint(CGPoint(x: 14.59, y: 43.36), controlPoint1: CGPoint(x: 14.94, y: 47.89), controlPoint2: CGPoint(x: 14.59, y: 45.71))
        shape4Path.addLineToPoint(CGPoint(x: 14.59, y: 43.36))
        shape4Path.closePath()
        shape4Path.miterLimit = 4;

        shape4Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape4Path.fill()


        //// Shape 5 Drawing
        let shape5Path = UIBezierPath()
        shape5Path.moveToPoint(CGPoint(x: 22.27, y: 11.91))
        shape5Path.addCurveToPoint(CGPoint(x: 20.81, y: 14.02), controlPoint1: CGPoint(x: 22.27, y: 13.08), controlPoint2: CGPoint(x: 21.62, y: 14.02))
        shape5Path.addLineToPoint(CGPoint(x: 20.81, y: 14.02))
        shape5Path.addCurveToPoint(CGPoint(x: 19.34, y: 11.91), controlPoint1: CGPoint(x: 20, y: 14.02), controlPoint2: CGPoint(x: 19.34, y: 13.08))
        shape5Path.addLineToPoint(CGPoint(x: 19.34, y: 11.64))
        shape5Path.addCurveToPoint(CGPoint(x: 20.81, y: 9.52), controlPoint1: CGPoint(x: 19.34, y: 10.47), controlPoint2: CGPoint(x: 20, y: 9.52))
        shape5Path.addLineToPoint(CGPoint(x: 20.81, y: 9.52))
        shape5Path.addCurveToPoint(CGPoint(x: 22.27, y: 11.64), controlPoint1: CGPoint(x: 21.62, y: 9.52), controlPoint2: CGPoint(x: 22.27, y: 10.47))
        shape5Path.addLineToPoint(CGPoint(x: 22.27, y: 11.91))
        shape5Path.addLineToPoint(CGPoint(x: 22.27, y: 11.91))
        shape5Path.closePath()
        shape5Path.miterLimit = 4;

        shape5Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape5Path.fill()


        //// Shape 6 Drawing
        let shape6Path = UIBezierPath(roundedRect: CGRect(x: 26.02, y: 48.03, width: 8.05, height: 4.05), cornerRadius: 2)
        fillColor.setFill()
        shape6Path.fill()


        //// Shape 7 Drawing
        let shape7Path = UIBezierPath(roundedRect: CGRect(x: 7.53, y: 48.03, width: 8.05, height: 4.05), cornerRadius: 2)
        fillColor.setFill()
        shape7Path.fill()


        //// Shape 8 Drawing
        let shape8Path = UIBezierPath()
        shape8Path.moveToPoint(CGPoint(x: 31.33, y: 29.41))
        shape8Path.addLineToPoint(CGPoint(x: 10.29, y: 29.41))
        shape8Path.addCurveToPoint(CGPoint(x: 10.29, y: 29.43), controlPoint1: CGPoint(x: 10.29, y: 29.42), controlPoint2: CGPoint(x: 10.29, y: 29.42))
        shape8Path.addCurveToPoint(CGPoint(x: 13.03, y: 34.17), controlPoint1: CGPoint(x: 10.84, y: 31.24), controlPoint2: CGPoint(x: 11.79, y: 32.86))
        shape8Path.addLineToPoint(CGPoint(x: 11.99, y: 36.66))
        shape8Path.addLineToPoint(CGPoint(x: 15.53, y: 38.13))
        shape8Path.addLineToPoint(CGPoint(x: 16.21, y: 36.5))
        shape8Path.addCurveToPoint(CGPoint(x: 20.82, y: 37.62), controlPoint1: CGPoint(x: 17.61, y: 37.2), controlPoint2: CGPoint(x: 19.17, y: 37.62))
        shape8Path.addCurveToPoint(CGPoint(x: 25.4, y: 36.51), controlPoint1: CGPoint(x: 22.46, y: 37.62), controlPoint2: CGPoint(x: 24, y: 37.2))
        shape8Path.addLineToPoint(CGPoint(x: 26.07, y: 38.13))
        shape8Path.addLineToPoint(CGPoint(x: 29.61, y: 36.66))
        shape8Path.addLineToPoint(CGPoint(x: 28.59, y: 34.18))
        shape8Path.addCurveToPoint(CGPoint(x: 31.33, y: 29.41), controlPoint1: CGPoint(x: 29.83, y: 32.85), controlPoint2: CGPoint(x: 30.78, y: 31.23))
        shape8Path.addLineToPoint(CGPoint(x: 31.33, y: 29.41))
        shape8Path.closePath()
        shape8Path.miterLimit = 4;

        shape8Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape8Path.fill()


        //// Shape 9 Drawing
        let shape9Path = UIBezierPath()
        shape9Path.moveToPoint(CGPoint(x: 10.1, y: 28.56))
        shape9Path.addCurveToPoint(CGPoint(x: 10.29, y: 29.41), controlPoint1: CGPoint(x: 10.16, y: 28.84), controlPoint2: CGPoint(x: 10.21, y: 29.13))
        shape9Path.addLineToPoint(CGPoint(x: 31.33, y: 29.41))
        shape9Path.addCurveToPoint(CGPoint(x: 31.55, y: 28.56), controlPoint1: CGPoint(x: 31.41, y: 29.13), controlPoint2: CGPoint(x: 31.48, y: 28.85))
        shape9Path.addLineToPoint(CGPoint(x: 10.1, y: 28.56))
        shape9Path.addLineToPoint(CGPoint(x: 10.1, y: 28.56))
        shape9Path.closePath()
        shape9Path.miterLimit = 4;

        shape9Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape9Path.fill()


        //// Shape 10 Drawing
        let shape10Path = UIBezierPath()
        shape10Path.moveToPoint(CGPoint(x: 10.1, y: 28.56))
        shape10Path.addLineToPoint(CGPoint(x: 31.55, y: 28.56))
        shape10Path.addCurveToPoint(CGPoint(x: 31.86, y: 25.8), controlPoint1: CGPoint(x: 31.74, y: 27.68), controlPoint2: CGPoint(x: 31.86, y: 26.75))
        shape10Path.addLineToPoint(CGPoint(x: 31.86, y: 25.26))
        shape10Path.addLineToPoint(CGPoint(x: 9.76, y: 25.26))
        shape10Path.addLineToPoint(CGPoint(x: 9.76, y: 25.8))
        shape10Path.addCurveToPoint(CGPoint(x: 10.1, y: 28.56), controlPoint1: CGPoint(x: 9.76, y: 26.76), controlPoint2: CGPoint(x: 9.9, y: 27.67))
        shape10Path.addLineToPoint(CGPoint(x: 10.1, y: 28.56))
        shape10Path.closePath()
        shape10Path.miterLimit = 4;

        shape10Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape10Path.fill()


        //// Shape 11 Drawing
        let shape11Path = UIBezierPath()
        shape11Path.moveToPoint(CGPoint(x: 40.28, y: 21.14))
        shape11Path.addCurveToPoint(CGPoint(x: 40.05, y: 21.71), controlPoint1: CGPoint(x: 40.37, y: 21.36), controlPoint2: CGPoint(x: 40.27, y: 21.62))
        shape11Path.addLineToPoint(CGPoint(x: 38.67, y: 22.31))
        shape11Path.addCurveToPoint(CGPoint(x: 38.1, y: 22.09), controlPoint1: CGPoint(x: 38.45, y: 22.41), controlPoint2: CGPoint(x: 38.19, y: 22.31))
        shape11Path.addLineToPoint(CGPoint(x: 38.1, y: 22.09))
        shape11Path.addCurveToPoint(CGPoint(x: 38.33, y: 21.51), controlPoint1: CGPoint(x: 38.01, y: 21.86), controlPoint2: CGPoint(x: 38.11, y: 21.61))
        shape11Path.addLineToPoint(CGPoint(x: 39.71, y: 20.91))
        shape11Path.addCurveToPoint(CGPoint(x: 40.28, y: 21.14), controlPoint1: CGPoint(x: 39.92, y: 20.83), controlPoint2: CGPoint(x: 40.18, y: 20.92))
        shape11Path.addLineToPoint(CGPoint(x: 40.28, y: 21.14))
        shape11Path.addLineToPoint(CGPoint(x: 40.28, y: 21.14))
        shape11Path.closePath()
        shape11Path.miterLimit = 4;

        shape11Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape11Path.fill()


        //// Shape 12 Drawing
        let shape12Path = UIBezierPath()
        shape12Path.moveToPoint(CGPoint(x: 1.6, y: 21.14))
        shape12Path.addCurveToPoint(CGPoint(x: 1.82, y: 21.71), controlPoint1: CGPoint(x: 1.49, y: 21.36), controlPoint2: CGPoint(x: 1.6, y: 21.62))
        shape12Path.addLineToPoint(CGPoint(x: 3.2, y: 22.31))
        shape12Path.addCurveToPoint(CGPoint(x: 3.77, y: 22.09), controlPoint1: CGPoint(x: 3.42, y: 22.41), controlPoint2: CGPoint(x: 3.67, y: 22.31))
        shape12Path.addLineToPoint(CGPoint(x: 3.77, y: 22.09))
        shape12Path.addCurveToPoint(CGPoint(x: 3.54, y: 21.51), controlPoint1: CGPoint(x: 3.87, y: 21.86), controlPoint2: CGPoint(x: 3.76, y: 21.61))
        shape12Path.addLineToPoint(CGPoint(x: 2.16, y: 20.91))
        shape12Path.addCurveToPoint(CGPoint(x: 1.6, y: 21.14), controlPoint1: CGPoint(x: 1.94, y: 20.83), controlPoint2: CGPoint(x: 1.69, y: 20.92))
        shape12Path.addLineToPoint(CGPoint(x: 1.6, y: 21.14))
        shape12Path.addLineToPoint(CGPoint(x: 1.6, y: 21.14))
        shape12Path.closePath()
        shape12Path.miterLimit = 4;

        shape12Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape12Path.fill()


        //// Rectangle-path Drawing
        let rectanglepathPath = UIBezierPath(rect: CGRect(x: 10.29, y: 30.11, width: 21.04, height: 2.09))
        fillColor8.setFill()
        rectanglepathPath.fill()


        //// Shape 13 Drawing
        let shape13Path = UIBezierPath()
        shape13Path.moveToPoint(CGPoint(x: 34.33, y: 18.06))
        shape13Path.addLineToPoint(CGPoint(x: 26.23, y: 13.39))
        shape13Path.addLineToPoint(CGPoint(x: 26.21, y: 13.41))
        shape13Path.addCurveToPoint(CGPoint(x: 24.1, y: 12.46), controlPoint1: CGPoint(x: 25.54, y: 13.02), controlPoint2: CGPoint(x: 24.83, y: 12.71))
        shape13Path.addLineToPoint(CGPoint(x: 24.01, y: 12.4))
        shape13Path.addLineToPoint(CGPoint(x: 24, y: 12.43))
        shape13Path.addCurveToPoint(CGPoint(x: 22.96, y: 12.11), controlPoint1: CGPoint(x: 23.65, y: 12.32), controlPoint2: CGPoint(x: 23.31, y: 12.18))
        shape13Path.addCurveToPoint(CGPoint(x: 20.81, y: 11.88), controlPoint1: CGPoint(x: 22.24, y: 11.96), controlPoint2: CGPoint(x: 21.52, y: 11.88))
        shape13Path.addCurveToPoint(CGPoint(x: 18.47, y: 12.15), controlPoint1: CGPoint(x: 20.04, y: 11.88), controlPoint2: CGPoint(x: 19.25, y: 11.97))
        shape13Path.addCurveToPoint(CGPoint(x: 15.47, y: 13.41), controlPoint1: CGPoint(x: 17.41, y: 12.39), controlPoint2: CGPoint(x: 16.42, y: 12.85))
        shape13Path.addLineToPoint(CGPoint(x: 15.46, y: 13.39))
        shape13Path.addLineToPoint(CGPoint(x: 7.37, y: 18.06))
        shape13Path.addLineToPoint(CGPoint(x: 9.41, y: 21.6))
        shape13Path.addLineToPoint(CGPoint(x: 10.13, y: 21.18))
        shape13Path.addCurveToPoint(CGPoint(x: 9.8, y: 22.77), controlPoint1: CGPoint(x: 9.99, y: 21.7), controlPoint2: CGPoint(x: 9.85, y: 22.22))
        shape13Path.addCurveToPoint(CGPoint(x: 9.76, y: 23.69), controlPoint1: CGPoint(x: 9.78, y: 23.07), controlPoint2: CGPoint(x: 9.76, y: 23.38))
        shape13Path.addLineToPoint(CGPoint(x: 9.76, y: 25.26))
        shape13Path.addLineToPoint(CGPoint(x: 9.76, y: 25.26))
        shape13Path.addLineToPoint(CGPoint(x: 9.76, y: 42.32))
        shape13Path.addLineToPoint(CGPoint(x: 31.86, y: 42.32))
        shape13Path.addLineToPoint(CGPoint(x: 31.86, y: 24.75))
        shape13Path.addLineToPoint(CGPoint(x: 31.86, y: 24.75))
        shape13Path.addLineToPoint(CGPoint(x: 31.86, y: 23.69))
        shape13Path.addCurveToPoint(CGPoint(x: 31.84, y: 23.18), controlPoint1: CGPoint(x: 31.86, y: 23.52), controlPoint2: CGPoint(x: 31.85, y: 23.35))
        shape13Path.addLineToPoint(CGPoint(x: 31.83, y: 23))
        shape13Path.addCurveToPoint(CGPoint(x: 31.51, y: 21.15), controlPoint1: CGPoint(x: 31.8, y: 22.36), controlPoint2: CGPoint(x: 31.66, y: 21.76))
        shape13Path.addLineToPoint(CGPoint(x: 32.28, y: 21.6))
        shape13Path.addLineToPoint(CGPoint(x: 32.45, y: 21.3))
        shape13Path.addLineToPoint(CGPoint(x: 34.22, y: 18.31))
        shape13Path.addLineToPoint(CGPoint(x: 34.19, y: 18.29))
        shape13Path.addLineToPoint(CGPoint(x: 34.33, y: 18.06))
        shape13Path.addLineToPoint(CGPoint(x: 34.33, y: 18.06))
        shape13Path.closePath()
        shape13Path.miterLimit = 4;

        shape13Path.usesEvenOddFillRule = true;

        fillColor2.setFill()
        shape13Path.fill()


        //// Shape 14 Drawing
        let shape14Path = UIBezierPath()
        shape14Path.moveToPoint(CGPoint(x: 26.66, y: 5.34))
        shape14Path.addCurveToPoint(CGPoint(x: 26.58, y: 5.36), controlPoint1: CGPoint(x: 26.64, y: 5.34), controlPoint2: CGPoint(x: 26.61, y: 5.36))
        shape14Path.addCurveToPoint(CGPoint(x: 20.81, y: 0.33), controlPoint1: CGPoint(x: 26.18, y: 2.52), controlPoint2: CGPoint(x: 23.76, y: 0.33))
        shape14Path.addCurveToPoint(CGPoint(x: 15.04, y: 5.36), controlPoint1: CGPoint(x: 17.86, y: 0.33), controlPoint2: CGPoint(x: 15.44, y: 2.52))
        shape14Path.addCurveToPoint(CGPoint(x: 14.96, y: 5.34), controlPoint1: CGPoint(x: 15.01, y: 5.36), controlPoint2: CGPoint(x: 14.98, y: 5.34))
        shape14Path.addCurveToPoint(CGPoint(x: 14.12, y: 6.18), controlPoint1: CGPoint(x: 14.49, y: 5.34), controlPoint2: CGPoint(x: 14.12, y: 5.71))
        shape14Path.addCurveToPoint(CGPoint(x: 14.96, y: 7.02), controlPoint1: CGPoint(x: 14.12, y: 6.64), controlPoint2: CGPoint(x: 14.49, y: 7.02))
        shape14Path.addCurveToPoint(CGPoint(x: 15.04, y: 7), controlPoint1: CGPoint(x: 14.98, y: 7.02), controlPoint2: CGPoint(x: 15.02, y: 7))
        shape14Path.addCurveToPoint(CGPoint(x: 20.81, y: 12.03), controlPoint1: CGPoint(x: 15.44, y: 9.84), controlPoint2: CGPoint(x: 17.86, y: 12.03))
        shape14Path.addCurveToPoint(CGPoint(x: 26.58, y: 7), controlPoint1: CGPoint(x: 23.76, y: 12.03), controlPoint2: CGPoint(x: 26.18, y: 9.84))
        shape14Path.addCurveToPoint(CGPoint(x: 26.66, y: 7.02), controlPoint1: CGPoint(x: 26.61, y: 7), controlPoint2: CGPoint(x: 26.64, y: 7.02))
        shape14Path.addCurveToPoint(CGPoint(x: 27.5, y: 6.18), controlPoint1: CGPoint(x: 27.13, y: 7.02), controlPoint2: CGPoint(x: 27.5, y: 6.64))
        shape14Path.addCurveToPoint(CGPoint(x: 26.66, y: 5.34), controlPoint1: CGPoint(x: 27.51, y: 5.71), controlPoint2: CGPoint(x: 27.13, y: 5.34))
        shape14Path.addLineToPoint(CGPoint(x: 26.66, y: 5.34))
        shape14Path.closePath()
        shape14Path.miterLimit = 4;

        shape14Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape14Path.fill()


        //// Shape 15 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 22.95, 5.25)
        CGContextRotateCTM(context, 9.25 * CGFloat(M_PI) / 180)

        let shape15Path = UIBezierPath(ovalInRect: CGRect(x: -0.5, y: -0.5, width: 1, height: 1))
        fillColor3.setFill()
        shape15Path.fill()

        CGContextRestoreGState(context)


        //// Oval 3 Drawing
        let oval3Path = UIBezierPath(ovalInRect: CGRect(x: 18.04, y: 4.8, width: 1, height: 1))
        fillColor3.setFill()
        oval3Path.fill()


        //// Shape 16 Drawing
        let shape16Path = UIBezierPath()
        shape16Path.moveToPoint(CGPoint(x: 22.27, y: 12.46))
        shape16Path.addCurveToPoint(CGPoint(x: 20.81, y: 13.92), controlPoint1: CGPoint(x: 22.27, y: 13.27), controlPoint2: CGPoint(x: 21.62, y: 13.92))
        shape16Path.addLineToPoint(CGPoint(x: 20.81, y: 13.92))
        shape16Path.addCurveToPoint(CGPoint(x: 19.34, y: 12.46), controlPoint1: CGPoint(x: 20, y: 13.92), controlPoint2: CGPoint(x: 19.34, y: 13.27))
        shape16Path.addLineToPoint(CGPoint(x: 19.34, y: 11.08))
        shape16Path.addCurveToPoint(CGPoint(x: 20.81, y: 9.63), controlPoint1: CGPoint(x: 19.34, y: 10.28), controlPoint2: CGPoint(x: 20, y: 9.63))
        shape16Path.addLineToPoint(CGPoint(x: 20.81, y: 9.63))
        shape16Path.addCurveToPoint(CGPoint(x: 22.27, y: 11.08), controlPoint1: CGPoint(x: 21.62, y: 9.63), controlPoint2: CGPoint(x: 22.27, y: 10.28))
        shape16Path.addLineToPoint(CGPoint(x: 22.27, y: 12.46))
        shape16Path.addLineToPoint(CGPoint(x: 22.27, y: 12.46))
        shape16Path.closePath()
        shape16Path.miterLimit = 4;

        shape16Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape16Path.fill()


        //// Shape 17 Drawing
        let shape17Path = UIBezierPath()
        shape17Path.moveToPoint(CGPoint(x: 21.97, y: 10.05))
        shape17Path.addCurveToPoint(CGPoint(x: 21.8, y: 9.98), controlPoint1: CGPoint(x: 21.91, y: 10.05), controlPoint2: CGPoint(x: 21.85, y: 10.03))
        shape17Path.addCurveToPoint(CGPoint(x: 20.76, y: 9.48), controlPoint1: CGPoint(x: 21.45, y: 9.63), controlPoint2: CGPoint(x: 21.1, y: 9.46))
        shape17Path.addCurveToPoint(CGPoint(x: 19.85, y: 9.96), controlPoint1: CGPoint(x: 20.23, y: 9.51), controlPoint2: CGPoint(x: 19.85, y: 9.95))
        shape17Path.addCurveToPoint(CGPoint(x: 19.51, y: 9.99), controlPoint1: CGPoint(x: 19.77, y: 10.06), controlPoint2: CGPoint(x: 19.61, y: 10.08))
        shape17Path.addCurveToPoint(CGPoint(x: 19.48, y: 9.65), controlPoint1: CGPoint(x: 19.4, y: 9.91), controlPoint2: CGPoint(x: 19.38, y: 9.76))
        shape17Path.addCurveToPoint(CGPoint(x: 20.73, y: 9), controlPoint1: CGPoint(x: 19.49, y: 9.63), controlPoint2: CGPoint(x: 19.98, y: 9.04))
        shape17Path.addCurveToPoint(CGPoint(x: 22.14, y: 9.63), controlPoint1: CGPoint(x: 21.23, y: 8.97), controlPoint2: CGPoint(x: 21.7, y: 9.18))
        shape17Path.addCurveToPoint(CGPoint(x: 22.14, y: 9.98), controlPoint1: CGPoint(x: 22.23, y: 9.73), controlPoint2: CGPoint(x: 22.23, y: 9.88))
        shape17Path.addCurveToPoint(CGPoint(x: 21.97, y: 10.05), controlPoint1: CGPoint(x: 22.09, y: 10.03), controlPoint2: CGPoint(x: 22.03, y: 10.05))
        shape17Path.addLineToPoint(CGPoint(x: 21.97, y: 10.05))
        shape17Path.closePath()
        shape17Path.miterLimit = 4;

        shape17Path.usesEvenOddFillRule = true;

        fillColor4.setFill()
        shape17Path.fill()
    }

    public class func drawGray1() {
        //// Color Declarations
        let fillColor = UIColor(red: 0.997, green: 0.849, blue: 0.775, alpha: 1.000)
        let fillColor3 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let fillColor4 = UIColor(red: 0.993, green: 0.655, blue: 0.569, alpha: 1.000)
        let fillColor9 = UIColor(red: 0.912, green: 0.912, blue: 0.912, alpha: 1.000)

        //// Page-1
        //// Group 옷장선택 3
        //// Group 5
        //// Shape Drawing
        let shapePath = UIBezierPath()
        shapePath.moveToPoint(CGPoint(x: 15.42, y: 11.61))
        shapePath.addCurveToPoint(CGPoint(x: 13.4, y: 11.29), controlPoint1: CGPoint(x: 15.06, y: 11), controlPoint2: CGPoint(x: 14.16, y: 10.85))
        shapePath.addLineToPoint(CGPoint(x: 2.42, y: 17.63))
        shapePath.addLineToPoint(CGPoint(x: 1.78, y: 17.35))
        shapePath.addCurveToPoint(CGPoint(x: 1.3, y: 17.54), controlPoint1: CGPoint(x: 1.6, y: 17.28), controlPoint2: CGPoint(x: 1.39, y: 17.36))
        shapePath.addCurveToPoint(CGPoint(x: 1.49, y: 18.02), controlPoint1: CGPoint(x: 1.23, y: 17.73), controlPoint2: CGPoint(x: 1.3, y: 17.95))
        shapePath.addLineToPoint(CGPoint(x: 1.64, y: 18.08))
        shapePath.addLineToPoint(CGPoint(x: 1.62, y: 18.09))
        shapePath.addCurveToPoint(CGPoint(x: 0.89, y: 20), controlPoint1: CGPoint(x: 0.86, y: 18.53), controlPoint2: CGPoint(x: 0.53, y: 19.39))
        shapePath.addCurveToPoint(CGPoint(x: 2.9, y: 20.32), controlPoint1: CGPoint(x: 1.24, y: 20.61), controlPoint2: CGPoint(x: 2.14, y: 20.75))
        shapePath.addLineToPoint(CGPoint(x: 14.69, y: 13.51))
        shapePath.addCurveToPoint(CGPoint(x: 15.42, y: 11.61), controlPoint1: CGPoint(x: 15.44, y: 13.07), controlPoint2: CGPoint(x: 15.77, y: 12.22))
        shapePath.addLineToPoint(CGPoint(x: 15.42, y: 11.61))
        shapePath.closePath()
        shapePath.miterLimit = 4;

        shapePath.usesEvenOddFillRule = true;

        fillColor.setFill()
        shapePath.fill()


        //// Shape 2 Drawing
        let shape2Path = UIBezierPath()
        shape2Path.moveToPoint(CGPoint(x: 33.44, y: 18.14))
        shape2Path.addLineToPoint(CGPoint(x: 33.71, y: 18.02))
        shape2Path.addCurveToPoint(CGPoint(x: 33.9, y: 17.56), controlPoint1: CGPoint(x: 33.89, y: 17.95), controlPoint2: CGPoint(x: 33.97, y: 17.74))
        shape2Path.addCurveToPoint(CGPoint(x: 33.44, y: 17.38), controlPoint1: CGPoint(x: 33.82, y: 17.39), controlPoint2: CGPoint(x: 33.61, y: 17.31))
        shape2Path.addLineToPoint(CGPoint(x: 32.7, y: 17.7))
        shape2Path.addLineToPoint(CGPoint(x: 21.59, y: 11.29))
        shape2Path.addCurveToPoint(CGPoint(x: 19.58, y: 11.61), controlPoint1: CGPoint(x: 20.84, y: 10.85), controlPoint2: CGPoint(x: 19.93, y: 11))
        shape2Path.addCurveToPoint(CGPoint(x: 20.31, y: 13.51), controlPoint1: CGPoint(x: 19.23, y: 12.22), controlPoint2: CGPoint(x: 19.55, y: 13.07))
        shape2Path.addLineToPoint(CGPoint(x: 32.1, y: 20.32))
        shape2Path.addCurveToPoint(CGPoint(x: 34.11, y: 20), controlPoint1: CGPoint(x: 32.86, y: 20.75), controlPoint2: CGPoint(x: 33.76, y: 20.61))
        shape2Path.addCurveToPoint(CGPoint(x: 33.44, y: 18.14), controlPoint1: CGPoint(x: 34.46, y: 19.41), controlPoint2: CGPoint(x: 34.15, y: 18.59))
        shape2Path.addLineToPoint(CGPoint(x: 33.44, y: 18.14))
        shape2Path.closePath()
        shape2Path.miterLimit = 4;

        shape2Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape2Path.fill()


        //// Shape 3 Drawing
        let shape3Path = UIBezierPath(roundedRect: CGRect(x: 8.25, y: 9.88, width: 18.3, height: 21.35), cornerRadius: 9.15)
        fillColor.setFill()
        shape3Path.fill()


        //// Shape 4 Drawing
        let shape4Path = UIBezierPath()
        shape4Path.moveToPoint(CGPoint(x: 26.86, y: 40.1))
        shape4Path.addLineToPoint(CGPoint(x: 24.45, y: 40.1))
        shape4Path.addCurveToPoint(CGPoint(x: 24.83, y: 36.19), controlPoint1: CGPoint(x: 24.67, y: 38.86), controlPoint2: CGPoint(x: 24.83, y: 37.57))
        shape4Path.addCurveToPoint(CGPoint(x: 17.43, y: 23.16), controlPoint1: CGPoint(x: 24.83, y: 28.88), controlPoint2: CGPoint(x: 21.57, y: 23.16))
        shape4Path.addCurveToPoint(CGPoint(x: 10.03, y: 36.19), controlPoint1: CGPoint(x: 13.28, y: 23.16), controlPoint2: CGPoint(x: 10.03, y: 28.88))
        shape4Path.addCurveToPoint(CGPoint(x: 10.4, y: 40.1), controlPoint1: CGPoint(x: 10.03, y: 37.57), controlPoint2: CGPoint(x: 10.18, y: 38.86))
        shape4Path.addLineToPoint(CGPoint(x: 8, y: 40.1))
        shape4Path.addCurveToPoint(CGPoint(x: 6.3, y: 41.8), controlPoint1: CGPoint(x: 7.06, y: 40.1), controlPoint2: CGPoint(x: 6.3, y: 40.87))
        shape4Path.addCurveToPoint(CGPoint(x: 8, y: 43.51), controlPoint1: CGPoint(x: 6.3, y: 42.75), controlPoint2: CGPoint(x: 7.06, y: 43.51))
        shape4Path.addLineToPoint(CGPoint(x: 11.33, y: 43.51))
        shape4Path.addCurveToPoint(CGPoint(x: 13.03, y: 41.8), controlPoint1: CGPoint(x: 12.27, y: 43.51), controlPoint2: CGPoint(x: 13.03, y: 42.75))
        shape4Path.addCurveToPoint(CGPoint(x: 12.98, y: 41.52), controlPoint1: CGPoint(x: 13.03, y: 41.7), controlPoint2: CGPoint(x: 12.99, y: 41.62))
        shape4Path.addLineToPoint(CGPoint(x: 13.02, y: 41.52))
        shape4Path.addCurveToPoint(CGPoint(x: 12.2, y: 36.19), controlPoint1: CGPoint(x: 12.51, y: 39.98), controlPoint2: CGPoint(x: 12.2, y: 38.16))
        shape4Path.addCurveToPoint(CGPoint(x: 17.43, y: 26.18), controlPoint1: CGPoint(x: 12.2, y: 30.66), controlPoint2: CGPoint(x: 14.54, y: 26.18))
        shape4Path.addCurveToPoint(CGPoint(x: 22.65, y: 36.19), controlPoint1: CGPoint(x: 20.31, y: 26.18), controlPoint2: CGPoint(x: 22.65, y: 30.66))
        shape4Path.addCurveToPoint(CGPoint(x: 21.83, y: 41.52), controlPoint1: CGPoint(x: 22.65, y: 38.16), controlPoint2: CGPoint(x: 22.34, y: 39.98))
        shape4Path.addLineToPoint(CGPoint(x: 21.88, y: 41.52))
        shape4Path.addCurveToPoint(CGPoint(x: 21.83, y: 41.8), controlPoint1: CGPoint(x: 21.87, y: 41.62), controlPoint2: CGPoint(x: 21.83, y: 41.71))
        shape4Path.addCurveToPoint(CGPoint(x: 23.54, y: 43.51), controlPoint1: CGPoint(x: 21.83, y: 42.75), controlPoint2: CGPoint(x: 22.59, y: 43.51))
        shape4Path.addLineToPoint(CGPoint(x: 26.86, y: 43.51))
        shape4Path.addCurveToPoint(CGPoint(x: 28.56, y: 41.8), controlPoint1: CGPoint(x: 27.8, y: 43.51), controlPoint2: CGPoint(x: 28.56, y: 42.75))
        shape4Path.addCurveToPoint(CGPoint(x: 26.86, y: 40.1), controlPoint1: CGPoint(x: 28.56, y: 40.86), controlPoint2: CGPoint(x: 27.8, y: 40.1))
        shape4Path.addLineToPoint(CGPoint(x: 26.86, y: 40.1))
        shape4Path.closePath()
        shape4Path.miterLimit = 4;

        shape4Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape4Path.fill()


        //// Shape 5 Drawing
        let shape5Path = UIBezierPath()
        shape5Path.moveToPoint(CGPoint(x: 28.68, y: 15.17))
        shape5Path.addLineToPoint(CGPoint(x: 23.15, y: 11.97))
        shape5Path.addCurveToPoint(CGPoint(x: 22.12, y: 11.16), controlPoint1: CGPoint(x: 22.81, y: 11.69), controlPoint2: CGPoint(x: 22.5, y: 11.38))
        shape5Path.addCurveToPoint(CGPoint(x: 20.19, y: 10.26), controlPoint1: CGPoint(x: 21.51, y: 10.77), controlPoint2: CGPoint(x: 20.86, y: 10.48))
        shape5Path.addLineToPoint(CGPoint(x: 20.11, y: 10.22))
        shape5Path.addLineToPoint(CGPoint(x: 20.1, y: 10.24))
        shape5Path.addCurveToPoint(CGPoint(x: 19.23, y: 9.97), controlPoint1: CGPoint(x: 19.81, y: 10.14), controlPoint2: CGPoint(x: 19.53, y: 10.03))
        shape5Path.addCurveToPoint(CGPoint(x: 17.42, y: 9.78), controlPoint1: CGPoint(x: 18.63, y: 9.84), controlPoint2: CGPoint(x: 18.02, y: 9.78))
        shape5Path.addCurveToPoint(CGPoint(x: 15.46, y: 10.01), controlPoint1: CGPoint(x: 16.78, y: 9.78), controlPoint2: CGPoint(x: 16.12, y: 9.85))
        shape5Path.addCurveToPoint(CGPoint(x: 12.19, y: 11.51), controlPoint1: CGPoint(x: 14.29, y: 10.27), controlPoint2: CGPoint(x: 13.18, y: 10.78))
        shape5Path.addCurveToPoint(CGPoint(x: 11.41, y: 12.29), controlPoint1: CGPoint(x: 11.89, y: 11.73), controlPoint2: CGPoint(x: 11.68, y: 12.04))
        shape5Path.addLineToPoint(CGPoint(x: 6.43, y: 15.17))
        shape5Path.addLineToPoint(CGPoint(x: 7.9, y: 17.69))
        shape5Path.addLineToPoint(CGPoint(x: 8.53, y: 17.33))
        shape5Path.addCurveToPoint(CGPoint(x: 8.19, y: 18.91), controlPoint1: CGPoint(x: 8.41, y: 17.85), controlPoint2: CGPoint(x: 8.23, y: 18.36))
        shape5Path.addCurveToPoint(CGPoint(x: 8.15, y: 19.68), controlPoint1: CGPoint(x: 8.17, y: 19.17), controlPoint2: CGPoint(x: 8.15, y: 19.42))
        shape5Path.addLineToPoint(CGPoint(x: 8.15, y: 21))
        shape5Path.addLineToPoint(CGPoint(x: 26.7, y: 21))
        shape5Path.addLineToPoint(CGPoint(x: 26.7, y: 19.68))
        shape5Path.addCurveToPoint(CGPoint(x: 26.68, y: 19.25), controlPoint1: CGPoint(x: 26.7, y: 19.54), controlPoint2: CGPoint(x: 26.69, y: 19.39))
        shape5Path.addLineToPoint(CGPoint(x: 26.67, y: 19.1))
        shape5Path.addCurveToPoint(CGPoint(x: 26.32, y: 17.18), controlPoint1: CGPoint(x: 26.63, y: 18.44), controlPoint2: CGPoint(x: 26.48, y: 17.81))
        shape5Path.addLineToPoint(CGPoint(x: 27.22, y: 17.69))
        shape5Path.addLineToPoint(CGPoint(x: 28.68, y: 15.17))
        shape5Path.addLineToPoint(CGPoint(x: 28.68, y: 15.17))
        shape5Path.closePath()
        shape5Path.miterLimit = 4;

        shape5Path.usesEvenOddFillRule = true;

        fillColor9.setFill()
        shape5Path.fill()


        //// Shape 6 Drawing
        let shape6Path = UIBezierPath()
        shape6Path.moveToPoint(CGPoint(x: 26.25, y: 24.48))
        shape6Path.addLineToPoint(CGPoint(x: 8.6, y: 24.48))
        shape6Path.addCurveToPoint(CGPoint(x: 8.6, y: 24.5), controlPoint1: CGPoint(x: 8.6, y: 24.49), controlPoint2: CGPoint(x: 8.6, y: 24.49))
        shape6Path.addCurveToPoint(CGPoint(x: 10.89, y: 28.47), controlPoint1: CGPoint(x: 9.06, y: 26.02), controlPoint2: CGPoint(x: 9.86, y: 27.37))
        shape6Path.addLineToPoint(CGPoint(x: 10.03, y: 30.57))
        shape6Path.addLineToPoint(CGPoint(x: 12.99, y: 31.8))
        shape6Path.addLineToPoint(CGPoint(x: 13.57, y: 30.43))
        shape6Path.addCurveToPoint(CGPoint(x: 17.43, y: 31.37), controlPoint1: CGPoint(x: 14.74, y: 31.02), controlPoint2: CGPoint(x: 16.05, y: 31.37))
        shape6Path.addCurveToPoint(CGPoint(x: 21.28, y: 30.44), controlPoint1: CGPoint(x: 18.8, y: 31.37), controlPoint2: CGPoint(x: 20.1, y: 31.02))
        shape6Path.addLineToPoint(CGPoint(x: 21.84, y: 31.8))
        shape6Path.addLineToPoint(CGPoint(x: 24.81, y: 30.57))
        shape6Path.addLineToPoint(CGPoint(x: 23.94, y: 28.48))
        shape6Path.addCurveToPoint(CGPoint(x: 26.25, y: 24.48), controlPoint1: CGPoint(x: 24.99, y: 27.37), controlPoint2: CGPoint(x: 25.79, y: 26.01))
        shape6Path.addLineToPoint(CGPoint(x: 26.25, y: 24.48))
        shape6Path.closePath()
        shape6Path.miterLimit = 4;

        shape6Path.usesEvenOddFillRule = true;

        fillColor9.setFill()
        shape6Path.fill()


        //// Shape 7 Drawing
        let shape7Path = UIBezierPath()
        shape7Path.moveToPoint(CGPoint(x: 8.15, y: 21))
        shape7Path.addLineToPoint(CGPoint(x: 8.15, y: 21.45))
        shape7Path.addCurveToPoint(CGPoint(x: 8.44, y: 23.76), controlPoint1: CGPoint(x: 8.15, y: 22.26), controlPoint2: CGPoint(x: 8.27, y: 23.02))
        shape7Path.addCurveToPoint(CGPoint(x: 8.6, y: 24.48), controlPoint1: CGPoint(x: 8.49, y: 24), controlPoint2: CGPoint(x: 8.53, y: 24.24))
        shape7Path.addLineToPoint(CGPoint(x: 26.25, y: 24.48))
        shape7Path.addCurveToPoint(CGPoint(x: 26.43, y: 23.76), controlPoint1: CGPoint(x: 26.32, y: 24.25), controlPoint2: CGPoint(x: 26.38, y: 24.01))
        shape7Path.addCurveToPoint(CGPoint(x: 26.7, y: 21.45), controlPoint1: CGPoint(x: 26.6, y: 23.02), controlPoint2: CGPoint(x: 26.7, y: 22.25))
        shape7Path.addLineToPoint(CGPoint(x: 26.7, y: 21))
        shape7Path.addLineToPoint(CGPoint(x: 8.15, y: 21))
        shape7Path.addLineToPoint(CGPoint(x: 8.15, y: 21))
        shape7Path.closePath()
        shape7Path.miterLimit = 4;

        shape7Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape7Path.fill()


        //// Shape 8 Drawing
        let shape8Path = UIBezierPath()
        shape8Path.moveToPoint(CGPoint(x: 18.15, y: 22.02))
        shape8Path.addCurveToPoint(CGPoint(x: 17.85, y: 22.02), controlPoint1: CGPoint(x: 18.07, y: 21.93), controlPoint2: CGPoint(x: 17.93, y: 21.93))
        shape8Path.addLineToPoint(CGPoint(x: 17.43, y: 22.44))
        shape8Path.addLineToPoint(CGPoint(x: 17, y: 22.02))
        shape8Path.addCurveToPoint(CGPoint(x: 16.7, y: 22.02), controlPoint1: CGPoint(x: 16.92, y: 21.93), controlPoint2: CGPoint(x: 16.78, y: 21.93))
        shape8Path.addCurveToPoint(CGPoint(x: 16.7, y: 22.32), controlPoint1: CGPoint(x: 16.62, y: 22.1), controlPoint2: CGPoint(x: 16.62, y: 22.23))
        shape8Path.addLineToPoint(CGPoint(x: 17.12, y: 22.74))
        shape8Path.addLineToPoint(CGPoint(x: 16.7, y: 23.17))
        shape8Path.addCurveToPoint(CGPoint(x: 16.7, y: 23.47), controlPoint1: CGPoint(x: 16.62, y: 23.25), controlPoint2: CGPoint(x: 16.62, y: 23.39))
        shape8Path.addCurveToPoint(CGPoint(x: 17, y: 23.47), controlPoint1: CGPoint(x: 16.78, y: 23.55), controlPoint2: CGPoint(x: 16.92, y: 23.55))
        shape8Path.addLineToPoint(CGPoint(x: 17.43, y: 23.04))
        shape8Path.addLineToPoint(CGPoint(x: 17.85, y: 23.47))
        shape8Path.addCurveToPoint(CGPoint(x: 18.15, y: 23.47), controlPoint1: CGPoint(x: 17.93, y: 23.55), controlPoint2: CGPoint(x: 18.07, y: 23.55))
        shape8Path.addCurveToPoint(CGPoint(x: 18.15, y: 23.17), controlPoint1: CGPoint(x: 18.23, y: 23.39), controlPoint2: CGPoint(x: 18.23, y: 23.25))
        shape8Path.addLineToPoint(CGPoint(x: 17.73, y: 22.74))
        shape8Path.addLineToPoint(CGPoint(x: 18.15, y: 22.32))
        shape8Path.addCurveToPoint(CGPoint(x: 18.15, y: 22.02), controlPoint1: CGPoint(x: 18.23, y: 22.23), controlPoint2: CGPoint(x: 18.23, y: 22.1))
        shape8Path.addLineToPoint(CGPoint(x: 18.15, y: 22.02))
        shape8Path.closePath()
        shape8Path.miterLimit = 4;

        shape8Path.usesEvenOddFillRule = true;

        fillColor4.setFill()
        shape8Path.fill()


        //// Shape 9 Drawing
        let shape9Path = UIBezierPath()
        shape9Path.moveToPoint(CGPoint(x: 22.34, y: 4.29))
        shape9Path.addCurveToPoint(CGPoint(x: 22.27, y: 4.3), controlPoint1: CGPoint(x: 22.31, y: 4.29), controlPoint2: CGPoint(x: 22.29, y: 4.3))
        shape9Path.addCurveToPoint(CGPoint(x: 17.42, y: 0.08), controlPoint1: CGPoint(x: 21.93, y: 1.92), controlPoint2: CGPoint(x: 19.9, y: 0.08))
        shape9Path.addCurveToPoint(CGPoint(x: 12.59, y: 4.3), controlPoint1: CGPoint(x: 14.95, y: 0.08), controlPoint2: CGPoint(x: 12.92, y: 1.92))
        shape9Path.addCurveToPoint(CGPoint(x: 12.52, y: 4.29), controlPoint1: CGPoint(x: 12.57, y: 4.3), controlPoint2: CGPoint(x: 12.54, y: 4.29))
        shape9Path.addCurveToPoint(CGPoint(x: 11.81, y: 5), controlPoint1: CGPoint(x: 12.12, y: 4.29), controlPoint2: CGPoint(x: 11.81, y: 4.6))
        shape9Path.addCurveToPoint(CGPoint(x: 12.52, y: 5.7), controlPoint1: CGPoint(x: 11.81, y: 5.38), controlPoint2: CGPoint(x: 12.12, y: 5.7))
        shape9Path.addCurveToPoint(CGPoint(x: 12.59, y: 5.68), controlPoint1: CGPoint(x: 12.54, y: 5.7), controlPoint2: CGPoint(x: 12.57, y: 5.68))
        shape9Path.addCurveToPoint(CGPoint(x: 16.2, y: 9.72), controlPoint1: CGPoint(x: 12.86, y: 7.65), controlPoint2: CGPoint(x: 14.31, y: 9.23))
        shape9Path.addLineToPoint(CGPoint(x: 16.2, y: 9.8))
        shape9Path.addLineToPoint(CGPoint(x: 16.2, y: 10.26))
        shape9Path.addCurveToPoint(CGPoint(x: 16.7, y: 11.23), controlPoint1: CGPoint(x: 16.2, y: 10.66), controlPoint2: CGPoint(x: 16.41, y: 11))
        shape9Path.addCurveToPoint(CGPoint(x: 17.42, y: 11.57), controlPoint1: CGPoint(x: 16.91, y: 11.44), controlPoint2: CGPoint(x: 17.15, y: 11.57))
        shape9Path.addCurveToPoint(CGPoint(x: 18.15, y: 11.23), controlPoint1: CGPoint(x: 17.7, y: 11.57), controlPoint2: CGPoint(x: 17.95, y: 11.44))
        shape9Path.addCurveToPoint(CGPoint(x: 18.66, y: 10.26), controlPoint1: CGPoint(x: 18.45, y: 11), controlPoint2: CGPoint(x: 18.66, y: 10.66))
        shape9Path.addLineToPoint(CGPoint(x: 18.66, y: 9.8))
        shape9Path.addLineToPoint(CGPoint(x: 18.66, y: 9.72))
        shape9Path.addCurveToPoint(CGPoint(x: 22.27, y: 5.68), controlPoint1: CGPoint(x: 20.54, y: 9.23), controlPoint2: CGPoint(x: 21.99, y: 7.65))
        shape9Path.addCurveToPoint(CGPoint(x: 22.34, y: 5.7), controlPoint1: CGPoint(x: 22.29, y: 5.68), controlPoint2: CGPoint(x: 22.31, y: 5.7))
        shape9Path.addCurveToPoint(CGPoint(x: 23.04, y: 5), controlPoint1: CGPoint(x: 22.72, y: 5.7), controlPoint2: CGPoint(x: 23.04, y: 5.38))
        shape9Path.addCurveToPoint(CGPoint(x: 22.34, y: 4.29), controlPoint1: CGPoint(x: 23.04, y: 4.6), controlPoint2: CGPoint(x: 22.72, y: 4.29))
        shape9Path.addLineToPoint(CGPoint(x: 22.34, y: 4.29))
        shape9Path.closePath()
        shape9Path.miterLimit = 4;

        shape9Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape9Path.fill()


        //// Shape 10 Drawing
        let shape10Path = UIBezierPath(ovalInRect: CGRect(x: 18.75, y: 3.7, width: 1, height: 1))
        fillColor3.setFill()
        shape10Path.fill()


        //// Shape 11 Drawing
        let shape11Path = UIBezierPath(ovalInRect: CGRect(x: 15, y: 3.7, width: 1, height: 1))
        fillColor3.setFill()
        shape11Path.fill()


        //// Shape 12 Drawing
        let shape12Path = UIBezierPath()
        shape12Path.moveToPoint(CGPoint(x: 18.39, y: 8.24))
        shape12Path.addCurveToPoint(CGPoint(x: 18.25, y: 8.18), controlPoint1: CGPoint(x: 18.34, y: 8.24), controlPoint2: CGPoint(x: 18.29, y: 8.22))
        shape12Path.addCurveToPoint(CGPoint(x: 17.37, y: 7.77), controlPoint1: CGPoint(x: 17.96, y: 7.89), controlPoint2: CGPoint(x: 17.66, y: 7.75))
        shape12Path.addCurveToPoint(CGPoint(x: 16.61, y: 8.16), controlPoint1: CGPoint(x: 16.93, y: 7.79), controlPoint2: CGPoint(x: 16.62, y: 8.16))
        shape12Path.addCurveToPoint(CGPoint(x: 16.33, y: 8.19), controlPoint1: CGPoint(x: 16.54, y: 8.25), controlPoint2: CGPoint(x: 16.41, y: 8.26))
        shape12Path.addCurveToPoint(CGPoint(x: 16.3, y: 7.91), controlPoint1: CGPoint(x: 16.24, y: 8.13), controlPoint2: CGPoint(x: 16.23, y: 7.99))
        shape12Path.addCurveToPoint(CGPoint(x: 17.35, y: 7.36), controlPoint1: CGPoint(x: 16.31, y: 7.89), controlPoint2: CGPoint(x: 16.72, y: 7.39))
        shape12Path.addCurveToPoint(CGPoint(x: 18.54, y: 7.89), controlPoint1: CGPoint(x: 17.77, y: 7.34), controlPoint2: CGPoint(x: 18.16, y: 7.51))
        shape12Path.addCurveToPoint(CGPoint(x: 18.54, y: 8.18), controlPoint1: CGPoint(x: 18.62, y: 7.97), controlPoint2: CGPoint(x: 18.62, y: 8.1))
        shape12Path.addCurveToPoint(CGPoint(x: 18.39, y: 8.24), controlPoint1: CGPoint(x: 18.5, y: 8.22), controlPoint2: CGPoint(x: 18.44, y: 8.24))
        shape12Path.addLineToPoint(CGPoint(x: 18.39, y: 8.24))
        shape12Path.closePath()
        shape12Path.miterLimit = 4;

        shape12Path.usesEvenOddFillRule = true;

        fillColor4.setFill()
        shape12Path.fill()
    }

    public class func drawGray2() {
        //// Color Declarations
        let fillColor = UIColor(red: 0.997, green: 0.849, blue: 0.775, alpha: 1.000)
        let fillColor3 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let fillColor4 = UIColor(red: 0.993, green: 0.655, blue: 0.569, alpha: 1.000)
        let fillColor9 = UIColor(red: 0.912, green: 0.912, blue: 0.912, alpha: 1.000)

        //// Page-1
        //// Group 옷장선택 3
        //// Group 5
        //// Group 6
        //// Shape Drawing
        let shapePath = UIBezierPath()
        shapePath.moveToPoint(CGPoint(x: 15.31, y: 11.65))
        shapePath.addCurveToPoint(CGPoint(x: 14.58, y: 13.55), controlPoint1: CGPoint(x: 15.66, y: 12.26), controlPoint2: CGPoint(x: 15.34, y: 13.12))
        shapePath.addLineToPoint(CGPoint(x: 2.79, y: 20.36))
        shapePath.addCurveToPoint(CGPoint(x: 0.78, y: 20.04), controlPoint1: CGPoint(x: 2.04, y: 20.79), controlPoint2: CGPoint(x: 1.14, y: 20.65))
        shapePath.addLineToPoint(CGPoint(x: 0.78, y: 20.04))
        shapePath.addCurveToPoint(CGPoint(x: 1.51, y: 18.13), controlPoint1: CGPoint(x: 0.43, y: 19.43), controlPoint2: CGPoint(x: 0.76, y: 18.58))
        shapePath.addLineToPoint(CGPoint(x: 13.3, y: 11.33))
        shapePath.addCurveToPoint(CGPoint(x: 15.31, y: 11.65), controlPoint1: CGPoint(x: 14.06, y: 10.89), controlPoint2: CGPoint(x: 14.96, y: 11.04))
        shapePath.addLineToPoint(CGPoint(x: 15.31, y: 11.65))
        shapePath.addLineToPoint(CGPoint(x: 15.31, y: 11.65))
        shapePath.closePath()
        shapePath.miterLimit = 4;

        shapePath.usesEvenOddFillRule = true;

        fillColor.setFill()
        shapePath.fill()


        //// Shape 2 Drawing
        let shape2Path = UIBezierPath()
        shape2Path.moveToPoint(CGPoint(x: 19.48, y: 11.65))
        shape2Path.addCurveToPoint(CGPoint(x: 20.21, y: 13.55), controlPoint1: CGPoint(x: 19.12, y: 12.26), controlPoint2: CGPoint(x: 19.45, y: 13.12))
        shape2Path.addLineToPoint(CGPoint(x: 32, y: 20.36))
        shape2Path.addCurveToPoint(CGPoint(x: 34.01, y: 20.04), controlPoint1: CGPoint(x: 32.76, y: 20.79), controlPoint2: CGPoint(x: 33.65, y: 20.65))
        shape2Path.addLineToPoint(CGPoint(x: 34.01, y: 20.04))
        shape2Path.addCurveToPoint(CGPoint(x: 33.28, y: 18.13), controlPoint1: CGPoint(x: 34.36, y: 19.43), controlPoint2: CGPoint(x: 34.03, y: 18.58))
        shape2Path.addLineToPoint(CGPoint(x: 21.49, y: 11.33))
        shape2Path.addCurveToPoint(CGPoint(x: 19.48, y: 11.65), controlPoint1: CGPoint(x: 20.73, y: 10.89), controlPoint2: CGPoint(x: 19.83, y: 11.04))
        shape2Path.addLineToPoint(CGPoint(x: 19.48, y: 11.65))
        shape2Path.addLineToPoint(CGPoint(x: 19.48, y: 11.65))
        shape2Path.closePath()
        shape2Path.miterLimit = 4;

        shape2Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape2Path.fill()


        //// Shape 3 Drawing
        let shape3Path = UIBezierPath()
        shape3Path.moveToPoint(CGPoint(x: 22.23, y: 4.33))
        shape3Path.addCurveToPoint(CGPoint(x: 22.16, y: 4.34), controlPoint1: CGPoint(x: 22.21, y: 4.33), controlPoint2: CGPoint(x: 22.19, y: 4.34))
        shape3Path.addCurveToPoint(CGPoint(x: 17.32, y: 0.12), controlPoint1: CGPoint(x: 21.82, y: 1.96), controlPoint2: CGPoint(x: 19.8, y: 0.12))
        shape3Path.addCurveToPoint(CGPoint(x: 12.48, y: 4.34), controlPoint1: CGPoint(x: 14.84, y: 0.12), controlPoint2: CGPoint(x: 12.82, y: 1.96))
        shape3Path.addCurveToPoint(CGPoint(x: 12.41, y: 4.33), controlPoint1: CGPoint(x: 12.46, y: 4.34), controlPoint2: CGPoint(x: 12.44, y: 4.33))
        shape3Path.addCurveToPoint(CGPoint(x: 11.7, y: 5.04), controlPoint1: CGPoint(x: 12.02, y: 4.33), controlPoint2: CGPoint(x: 11.7, y: 4.64))
        shape3Path.addCurveToPoint(CGPoint(x: 12.41, y: 5.74), controlPoint1: CGPoint(x: 11.7, y: 5.42), controlPoint2: CGPoint(x: 12.02, y: 5.74))
        shape3Path.addCurveToPoint(CGPoint(x: 12.48, y: 5.72), controlPoint1: CGPoint(x: 12.44, y: 5.74), controlPoint2: CGPoint(x: 12.46, y: 5.72))
        shape3Path.addCurveToPoint(CGPoint(x: 17.32, y: 9.94), controlPoint1: CGPoint(x: 12.82, y: 8.11), controlPoint2: CGPoint(x: 14.84, y: 9.94))
        shape3Path.addCurveToPoint(CGPoint(x: 22.16, y: 5.72), controlPoint1: CGPoint(x: 19.8, y: 9.94), controlPoint2: CGPoint(x: 21.82, y: 8.11))
        shape3Path.addCurveToPoint(CGPoint(x: 22.23, y: 5.74), controlPoint1: CGPoint(x: 22.18, y: 5.72), controlPoint2: CGPoint(x: 22.2, y: 5.74))
        shape3Path.addCurveToPoint(CGPoint(x: 22.94, y: 5.04), controlPoint1: CGPoint(x: 22.62, y: 5.74), controlPoint2: CGPoint(x: 22.94, y: 5.42))
        shape3Path.addCurveToPoint(CGPoint(x: 22.23, y: 4.33), controlPoint1: CGPoint(x: 22.94, y: 4.64), controlPoint2: CGPoint(x: 22.62, y: 4.33))
        shape3Path.addLineToPoint(CGPoint(x: 22.23, y: 4.33))
        shape3Path.closePath()
        shape3Path.miterLimit = 4;

        shape3Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape3Path.fill()


        //// Shape 4 Drawing
        let shape4Path = UIBezierPath(roundedRect: CGRect(x: 8.15, y: 9.93, width: 18.3, height: 21.35), cornerRadius: 9.15)
        fillColor.setFill()
        shape4Path.fill()


        //// Shape 5 Drawing
        let shape5Path = UIBezierPath()
        shape5Path.moveToPoint(CGPoint(x: 12.09, y: 36.23))
        shape5Path.addCurveToPoint(CGPoint(x: 17.32, y: 26.22), controlPoint1: CGPoint(x: 12.09, y: 30.7), controlPoint2: CGPoint(x: 14.44, y: 26.22))
        shape5Path.addCurveToPoint(CGPoint(x: 22.54, y: 36.23), controlPoint1: CGPoint(x: 20.21, y: 26.22), controlPoint2: CGPoint(x: 22.54, y: 30.7))
        shape5Path.addCurveToPoint(CGPoint(x: 21.73, y: 41.57), controlPoint1: CGPoint(x: 22.54, y: 38.19), controlPoint2: CGPoint(x: 22.24, y: 40.02))
        shape5Path.addLineToPoint(CGPoint(x: 24.09, y: 41.57))
        shape5Path.addCurveToPoint(CGPoint(x: 24.72, y: 36.23), controlPoint1: CGPoint(x: 24.49, y: 39.94), controlPoint2: CGPoint(x: 24.72, y: 38.14))
        shape5Path.addCurveToPoint(CGPoint(x: 17.32, y: 23.21), controlPoint1: CGPoint(x: 24.72, y: 28.92), controlPoint2: CGPoint(x: 21.47, y: 23.21))
        shape5Path.addCurveToPoint(CGPoint(x: 9.92, y: 36.23), controlPoint1: CGPoint(x: 13.17, y: 23.21), controlPoint2: CGPoint(x: 9.92, y: 28.92))
        shape5Path.addCurveToPoint(CGPoint(x: 10.55, y: 41.57), controlPoint1: CGPoint(x: 9.92, y: 38.14), controlPoint2: CGPoint(x: 10.15, y: 39.94))
        shape5Path.addLineToPoint(CGPoint(x: 12.9, y: 41.57))
        shape5Path.addCurveToPoint(CGPoint(x: 12.09, y: 36.23), controlPoint1: CGPoint(x: 12.39, y: 40.02), controlPoint2: CGPoint(x: 12.09, y: 38.19))
        shape5Path.addLineToPoint(CGPoint(x: 12.09, y: 36.23))
        shape5Path.closePath()
        shape5Path.miterLimit = 4;

        shape5Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape5Path.fill()


        //// Shape 6 Drawing
        let shape6Path = UIBezierPath()
        shape6Path.moveToPoint(CGPoint(x: 18.55, y: 9.84))
        shape6Path.addCurveToPoint(CGPoint(x: 17.32, y: 11.62), controlPoint1: CGPoint(x: 18.55, y: 10.82), controlPoint2: CGPoint(x: 18, y: 11.62))
        shape6Path.addLineToPoint(CGPoint(x: 17.32, y: 11.62))
        shape6Path.addCurveToPoint(CGPoint(x: 16.09, y: 9.84), controlPoint1: CGPoint(x: 16.64, y: 11.62), controlPoint2: CGPoint(x: 16.09, y: 10.82))
        shape6Path.addLineToPoint(CGPoint(x: 16.09, y: 9.61))
        shape6Path.addCurveToPoint(CGPoint(x: 17.32, y: 7.84), controlPoint1: CGPoint(x: 16.09, y: 8.63), controlPoint2: CGPoint(x: 16.64, y: 7.84))
        shape6Path.addLineToPoint(CGPoint(x: 17.32, y: 7.84))
        shape6Path.addCurveToPoint(CGPoint(x: 18.55, y: 9.61), controlPoint1: CGPoint(x: 18, y: 7.84), controlPoint2: CGPoint(x: 18.55, y: 8.63))
        shape6Path.addLineToPoint(CGPoint(x: 18.55, y: 9.84))
        shape6Path.addLineToPoint(CGPoint(x: 18.55, y: 9.84))
        shape6Path.closePath()
        shape6Path.miterLimit = 4;

        shape6Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape6Path.fill()


        //// Shape 7 Drawing
        let shape7Path = UIBezierPath()
        shape7Path.moveToPoint(CGPoint(x: 28.46, y: 41.84))
        shape7Path.addCurveToPoint(CGPoint(x: 26.75, y: 43.55), controlPoint1: CGPoint(x: 28.46, y: 42.79), controlPoint2: CGPoint(x: 27.7, y: 43.55))
        shape7Path.addLineToPoint(CGPoint(x: 23.43, y: 43.55))
        shape7Path.addCurveToPoint(CGPoint(x: 21.72, y: 41.84), controlPoint1: CGPoint(x: 22.48, y: 43.55), controlPoint2: CGPoint(x: 21.72, y: 42.79))
        shape7Path.addLineToPoint(CGPoint(x: 21.72, y: 41.84))
        shape7Path.addCurveToPoint(CGPoint(x: 23.43, y: 40.14), controlPoint1: CGPoint(x: 21.72, y: 40.91), controlPoint2: CGPoint(x: 22.48, y: 40.14))
        shape7Path.addLineToPoint(CGPoint(x: 26.75, y: 40.14))
        shape7Path.addCurveToPoint(CGPoint(x: 28.46, y: 41.84), controlPoint1: CGPoint(x: 27.7, y: 40.14), controlPoint2: CGPoint(x: 28.46, y: 40.9))
        shape7Path.addLineToPoint(CGPoint(x: 28.46, y: 41.84))
        shape7Path.addLineToPoint(CGPoint(x: 28.46, y: 41.84))
        shape7Path.closePath()
        shape7Path.miterLimit = 4;

        shape7Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape7Path.fill()


        //// Shape 8 Drawing
        let shape8Path = UIBezierPath()
        shape8Path.moveToPoint(CGPoint(x: 12.93, y: 41.84))
        shape8Path.addCurveToPoint(CGPoint(x: 11.22, y: 43.55), controlPoint1: CGPoint(x: 12.93, y: 42.79), controlPoint2: CGPoint(x: 12.16, y: 43.55))
        shape8Path.addLineToPoint(CGPoint(x: 7.89, y: 43.55))
        shape8Path.addCurveToPoint(CGPoint(x: 6.19, y: 41.84), controlPoint1: CGPoint(x: 6.95, y: 43.55), controlPoint2: CGPoint(x: 6.19, y: 42.79))
        shape8Path.addLineToPoint(CGPoint(x: 6.19, y: 41.84))
        shape8Path.addCurveToPoint(CGPoint(x: 7.89, y: 40.14), controlPoint1: CGPoint(x: 6.19, y: 40.91), controlPoint2: CGPoint(x: 6.95, y: 40.14))
        shape8Path.addLineToPoint(CGPoint(x: 11.22, y: 40.14))
        shape8Path.addCurveToPoint(CGPoint(x: 12.93, y: 41.84), controlPoint1: CGPoint(x: 12.16, y: 40.14), controlPoint2: CGPoint(x: 12.93, y: 40.9))
        shape8Path.addLineToPoint(CGPoint(x: 12.93, y: 41.84))
        shape8Path.addLineToPoint(CGPoint(x: 12.93, y: 41.84))
        shape8Path.closePath()
        shape8Path.miterLimit = 4;

        shape8Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape8Path.fill()


        //// Oval 2 Drawing
        let oval2Path = UIBezierPath(ovalInRect: CGRect(x: 18.75, y: 3.88, width: 1, height: 1))
        fillColor3.setFill()
        oval2Path.fill()


        //// Shape 9 Drawing
        let shape9Path = UIBezierPath()
        shape9Path.moveToPoint(CGPoint(x: 28.57, y: 15.21))
        shape9Path.addLineToPoint(CGPoint(x: 23.04, y: 12.02))
        shape9Path.addCurveToPoint(CGPoint(x: 22.02, y: 11.2), controlPoint1: CGPoint(x: 22.71, y: 11.73), controlPoint2: CGPoint(x: 22.39, y: 11.42))
        shape9Path.addCurveToPoint(CGPoint(x: 20.08, y: 10.3), controlPoint1: CGPoint(x: 21.4, y: 10.81), controlPoint2: CGPoint(x: 20.75, y: 10.52))
        shape9Path.addLineToPoint(CGPoint(x: 20.01, y: 10.26))
        shape9Path.addLineToPoint(CGPoint(x: 20, y: 10.28))
        shape9Path.addCurveToPoint(CGPoint(x: 19.12, y: 10.01), controlPoint1: CGPoint(x: 19.71, y: 10.18), controlPoint2: CGPoint(x: 19.42, y: 10.07))
        shape9Path.addCurveToPoint(CGPoint(x: 17.32, y: 9.82), controlPoint1: CGPoint(x: 18.53, y: 9.88), controlPoint2: CGPoint(x: 17.92, y: 9.82))
        shape9Path.addCurveToPoint(CGPoint(x: 15.36, y: 10.05), controlPoint1: CGPoint(x: 16.67, y: 9.82), controlPoint2: CGPoint(x: 16.01, y: 9.89))
        shape9Path.addCurveToPoint(CGPoint(x: 12.09, y: 11.55), controlPoint1: CGPoint(x: 14.18, y: 10.32), controlPoint2: CGPoint(x: 13.08, y: 10.82))
        shape9Path.addCurveToPoint(CGPoint(x: 11.3, y: 12.33), controlPoint1: CGPoint(x: 11.79, y: 11.77), controlPoint2: CGPoint(x: 11.57, y: 12.08))
        shape9Path.addLineToPoint(CGPoint(x: 6.33, y: 15.21))
        shape9Path.addLineToPoint(CGPoint(x: 7.79, y: 17.73))
        shape9Path.addLineToPoint(CGPoint(x: 8.42, y: 17.37))
        shape9Path.addCurveToPoint(CGPoint(x: 8.08, y: 18.95), controlPoint1: CGPoint(x: 8.3, y: 17.89), controlPoint2: CGPoint(x: 8.12, y: 18.4))
        shape9Path.addCurveToPoint(CGPoint(x: 8.05, y: 19.72), controlPoint1: CGPoint(x: 8.07, y: 19.21), controlPoint2: CGPoint(x: 8.05, y: 19.46))
        shape9Path.addLineToPoint(CGPoint(x: 8.05, y: 21.04))
        shape9Path.addLineToPoint(CGPoint(x: 26.59, y: 21.04))
        shape9Path.addLineToPoint(CGPoint(x: 26.59, y: 19.72))
        shape9Path.addCurveToPoint(CGPoint(x: 26.57, y: 19.29), controlPoint1: CGPoint(x: 26.59, y: 19.58), controlPoint2: CGPoint(x: 26.58, y: 19.44))
        shape9Path.addLineToPoint(CGPoint(x: 26.57, y: 19.14))
        shape9Path.addCurveToPoint(CGPoint(x: 26.21, y: 17.22), controlPoint1: CGPoint(x: 26.53, y: 18.49), controlPoint2: CGPoint(x: 26.37, y: 17.85))
        shape9Path.addLineToPoint(CGPoint(x: 27.11, y: 17.73))
        shape9Path.addLineToPoint(CGPoint(x: 28.57, y: 15.21))
        shape9Path.addLineToPoint(CGPoint(x: 28.57, y: 15.21))
        shape9Path.closePath()
        shape9Path.miterLimit = 4;

        shape9Path.usesEvenOddFillRule = true;

        fillColor9.setFill()
        shape9Path.fill()


        //// Oval 4 Drawing
        let oval4Path = UIBezierPath(ovalInRect: CGRect(x: 15, y: 3.87, width: 1, height: 1))
        fillColor3.setFill()
        oval4Path.fill()


        //// Shape 10 Drawing
        let shape10Path = UIBezierPath(roundedRect: CGRect(x: 16.07, y: 7.95, width: 2.45, height: 3.6), cornerRadius: 1.2)
        fillColor.setFill()
        shape10Path.fill()


        //// Shape 11 Drawing
        let shape11Path = UIBezierPath()
        shape11Path.moveToPoint(CGPoint(x: 26.14, y: 24.52))
        shape11Path.addLineToPoint(CGPoint(x: 8.49, y: 24.52))
        shape11Path.addCurveToPoint(CGPoint(x: 8.49, y: 24.54), controlPoint1: CGPoint(x: 8.49, y: 24.53), controlPoint2: CGPoint(x: 8.49, y: 24.53))
        shape11Path.addCurveToPoint(CGPoint(x: 10.79, y: 28.51), controlPoint1: CGPoint(x: 8.96, y: 26.06), controlPoint2: CGPoint(x: 9.75, y: 27.41))
        shape11Path.addLineToPoint(CGPoint(x: 9.92, y: 30.61))
        shape11Path.addLineToPoint(CGPoint(x: 12.89, y: 31.84))
        shape11Path.addLineToPoint(CGPoint(x: 13.46, y: 30.47))
        shape11Path.addCurveToPoint(CGPoint(x: 17.32, y: 31.41), controlPoint1: CGPoint(x: 14.63, y: 31.06), controlPoint2: CGPoint(x: 15.94, y: 31.41))
        shape11Path.addCurveToPoint(CGPoint(x: 21.17, y: 30.48), controlPoint1: CGPoint(x: 18.7, y: 31.41), controlPoint2: CGPoint(x: 20, y: 31.06))
        shape11Path.addLineToPoint(CGPoint(x: 21.73, y: 31.84))
        shape11Path.addLineToPoint(CGPoint(x: 24.71, y: 30.61))
        shape11Path.addLineToPoint(CGPoint(x: 23.84, y: 28.52))
        shape11Path.addCurveToPoint(CGPoint(x: 26.14, y: 24.52), controlPoint1: CGPoint(x: 24.88, y: 27.41), controlPoint2: CGPoint(x: 25.68, y: 26.05))
        shape11Path.addLineToPoint(CGPoint(x: 26.14, y: 24.52))
        shape11Path.closePath()
        shape11Path.miterLimit = 4;

        shape11Path.usesEvenOddFillRule = true;

        fillColor9.setFill()
        shape11Path.fill()


        //// Shape 12 Drawing
        let shape12Path = UIBezierPath()
        shape12Path.moveToPoint(CGPoint(x: 8.33, y: 23.81))
        shape12Path.addCurveToPoint(CGPoint(x: 8.49, y: 24.52), controlPoint1: CGPoint(x: 8.39, y: 24.04), controlPoint2: CGPoint(x: 8.42, y: 24.29))
        shape12Path.addLineToPoint(CGPoint(x: 26.14, y: 24.52))
        shape12Path.addCurveToPoint(CGPoint(x: 26.33, y: 23.81), controlPoint1: CGPoint(x: 26.22, y: 24.29), controlPoint2: CGPoint(x: 26.27, y: 24.05))
        shape12Path.addLineToPoint(CGPoint(x: 8.33, y: 23.81))
        shape12Path.addLineToPoint(CGPoint(x: 8.33, y: 23.81))
        shape12Path.closePath()
        shape12Path.miterLimit = 4;

        shape12Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape12Path.fill()


        //// Shape 13 Drawing
        let shape13Path = UIBezierPath()
        shape13Path.moveToPoint(CGPoint(x: 33.65, y: 17.58))
        shape13Path.addCurveToPoint(CGPoint(x: 33.46, y: 18.06), controlPoint1: CGPoint(x: 33.73, y: 17.77), controlPoint2: CGPoint(x: 33.64, y: 17.99))
        shape13Path.addLineToPoint(CGPoint(x: 32.3, y: 18.56))
        shape13Path.addCurveToPoint(CGPoint(x: 31.82, y: 18.38), controlPoint1: CGPoint(x: 32.12, y: 18.64), controlPoint2: CGPoint(x: 31.9, y: 18.56))
        shape13Path.addLineToPoint(CGPoint(x: 31.82, y: 18.38))
        shape13Path.addCurveToPoint(CGPoint(x: 32.01, y: 17.9), controlPoint1: CGPoint(x: 31.74, y: 18.19), controlPoint2: CGPoint(x: 31.83, y: 17.98))
        shape13Path.addLineToPoint(CGPoint(x: 33.17, y: 17.39))
        shape13Path.addCurveToPoint(CGPoint(x: 33.65, y: 17.58), controlPoint1: CGPoint(x: 33.35, y: 17.32), controlPoint2: CGPoint(x: 33.57, y: 17.4))
        shape13Path.addLineToPoint(CGPoint(x: 33.65, y: 17.58))
        shape13Path.addLineToPoint(CGPoint(x: 33.65, y: 17.58))
        shape13Path.closePath()
        shape13Path.miterLimit = 4;

        shape13Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape13Path.fill()


        //// Shape 14 Drawing
        let shape14Path = UIBezierPath()
        shape14Path.moveToPoint(CGPoint(x: 1.2, y: 17.58))
        shape14Path.addCurveToPoint(CGPoint(x: 1.39, y: 18.06), controlPoint1: CGPoint(x: 1.12, y: 17.77), controlPoint2: CGPoint(x: 1.2, y: 17.99))
        shape14Path.addLineToPoint(CGPoint(x: 2.54, y: 18.56))
        shape14Path.addCurveToPoint(CGPoint(x: 3.02, y: 18.38), controlPoint1: CGPoint(x: 2.73, y: 18.64), controlPoint2: CGPoint(x: 2.94, y: 18.56))
        shape14Path.addLineToPoint(CGPoint(x: 3.02, y: 18.38))
        shape14Path.addCurveToPoint(CGPoint(x: 2.83, y: 17.9), controlPoint1: CGPoint(x: 3.1, y: 18.19), controlPoint2: CGPoint(x: 3.02, y: 17.98))
        shape14Path.addLineToPoint(CGPoint(x: 1.67, y: 17.39))
        shape14Path.addCurveToPoint(CGPoint(x: 1.2, y: 17.58), controlPoint1: CGPoint(x: 1.49, y: 17.32), controlPoint2: CGPoint(x: 1.28, y: 17.4))
        shape14Path.addLineToPoint(CGPoint(x: 1.2, y: 17.58))
        shape14Path.addLineToPoint(CGPoint(x: 1.2, y: 17.58))
        shape14Path.closePath()
        shape14Path.miterLimit = 4;

        shape14Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape14Path.fill()


        //// Shape 15 Drawing
        let shape15Path = UIBezierPath()
        shape15Path.moveToPoint(CGPoint(x: 18.29, y: 8.28))
        shape15Path.addCurveToPoint(CGPoint(x: 18.14, y: 8.22), controlPoint1: CGPoint(x: 18.24, y: 8.28), controlPoint2: CGPoint(x: 18.18, y: 8.26))
        shape15Path.addCurveToPoint(CGPoint(x: 17.27, y: 7.8), controlPoint1: CGPoint(x: 17.86, y: 7.93), controlPoint2: CGPoint(x: 17.56, y: 7.79))
        shape15Path.addCurveToPoint(CGPoint(x: 16.51, y: 8.2), controlPoint1: CGPoint(x: 16.83, y: 7.82), controlPoint2: CGPoint(x: 16.51, y: 8.2))
        shape15Path.addCurveToPoint(CGPoint(x: 16.23, y: 8.23), controlPoint1: CGPoint(x: 16.44, y: 8.29), controlPoint2: CGPoint(x: 16.31, y: 8.3))
        shape15Path.addCurveToPoint(CGPoint(x: 16.19, y: 7.95), controlPoint1: CGPoint(x: 16.14, y: 8.16), controlPoint2: CGPoint(x: 16.12, y: 8.03))
        shape15Path.addCurveToPoint(CGPoint(x: 17.24, y: 7.39), controlPoint1: CGPoint(x: 16.21, y: 7.93), controlPoint2: CGPoint(x: 16.62, y: 7.43))
        shape15Path.addCurveToPoint(CGPoint(x: 18.43, y: 7.93), controlPoint1: CGPoint(x: 17.66, y: 7.37), controlPoint2: CGPoint(x: 18.06, y: 7.55))
        shape15Path.addCurveToPoint(CGPoint(x: 18.43, y: 8.22), controlPoint1: CGPoint(x: 18.52, y: 8.01), controlPoint2: CGPoint(x: 18.52, y: 8.14))
        shape15Path.addCurveToPoint(CGPoint(x: 18.29, y: 8.28), controlPoint1: CGPoint(x: 18.39, y: 8.26), controlPoint2: CGPoint(x: 18.34, y: 8.28))
        shape15Path.addLineToPoint(CGPoint(x: 18.29, y: 8.28))
        shape15Path.closePath()
        shape15Path.miterLimit = 4;

        shape15Path.usesEvenOddFillRule = true;

        fillColor4.setFill()
        shape15Path.fill()




        //// Shape 16 Drawing
        let shape16Path = UIBezierPath()
        shape16Path.moveToPoint(CGPoint(x: 26.59, y: 21.49))
        shape16Path.addLineToPoint(CGPoint(x: 26.59, y: 21.04))
        shape16Path.addLineToPoint(CGPoint(x: 8.05, y: 21.04))
        shape16Path.addLineToPoint(CGPoint(x: 8.05, y: 21.49))
        shape16Path.addCurveToPoint(CGPoint(x: 8.22, y: 23.21), controlPoint1: CGPoint(x: 8.05, y: 22.08), controlPoint2: CGPoint(x: 8.12, y: 22.65))
        shape16Path.addLineToPoint(CGPoint(x: 26.43, y: 23.21))
        shape16Path.addCurveToPoint(CGPoint(x: 26.59, y: 21.49), controlPoint1: CGPoint(x: 26.52, y: 22.65), controlPoint2: CGPoint(x: 26.59, y: 22.08))
        shape16Path.addLineToPoint(CGPoint(x: 26.59, y: 21.49))
        shape16Path.closePath()
        shape16Path.miterLimit = 4;

        shape16Path.usesEvenOddFillRule = true;

        fillColor9.setFill()
        shape16Path.fill()


        //// Shape 17 Drawing
        let shape17Path = UIBezierPath()
        shape17Path.moveToPoint(CGPoint(x: 8.22, y: 23.21))
        shape17Path.addCurveToPoint(CGPoint(x: 8.33, y: 23.81), controlPoint1: CGPoint(x: 8.26, y: 23.4), controlPoint2: CGPoint(x: 8.29, y: 23.61))
        shape17Path.addLineToPoint(CGPoint(x: 26.33, y: 23.81))
        shape17Path.addCurveToPoint(CGPoint(x: 26.43, y: 23.21), controlPoint1: CGPoint(x: 26.37, y: 23.61), controlPoint2: CGPoint(x: 26.4, y: 23.41))
        shape17Path.addLineToPoint(CGPoint(x: 8.22, y: 23.21))
        shape17Path.addLineToPoint(CGPoint(x: 8.22, y: 23.21))
        shape17Path.closePath()
        shape17Path.miterLimit = 4;

        shape17Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape17Path.fill()
    }

    public class func drawGray3() {
        //// Color Declarations
        let fillColor = UIColor(red: 0.997, green: 0.849, blue: 0.775, alpha: 1.000)
        let fillColor3 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let fillColor4 = UIColor(red: 0.993, green: 0.655, blue: 0.569, alpha: 1.000)
        let fillColor9 = UIColor(red: 0.912, green: 0.912, blue: 0.912, alpha: 1.000)
        let fillColor10 = UIColor(red: 0.638, green: 0.638, blue: 0.638, alpha: 1.000)

        //// Page-1
        //// Group 옷장선택 3
        //// Group 5
        //// Shape Drawing
        let shapePath = UIBezierPath()
        shapePath.moveToPoint(CGPoint(x: 15.09, y: 11.6))
        shapePath.addCurveToPoint(CGPoint(x: 14.36, y: 13.51), controlPoint1: CGPoint(x: 15.45, y: 12.21), controlPoint2: CGPoint(x: 15.11, y: 13.07))
        shapePath.addLineToPoint(CGPoint(x: 2.53, y: 20.34))
        shapePath.addCurveToPoint(CGPoint(x: 0.52, y: 20.02), controlPoint1: CGPoint(x: 1.77, y: 20.77), controlPoint2: CGPoint(x: 0.87, y: 20.63))
        shapePath.addLineToPoint(CGPoint(x: 0.52, y: 20.02))
        shapePath.addCurveToPoint(CGPoint(x: 1.25, y: 18.11), controlPoint1: CGPoint(x: 0.16, y: 19.41), controlPoint2: CGPoint(x: 0.49, y: 18.55))
        shapePath.addLineToPoint(CGPoint(x: 13.07, y: 11.28))
        shapePath.addCurveToPoint(CGPoint(x: 15.09, y: 11.6), controlPoint1: CGPoint(x: 13.83, y: 10.84), controlPoint2: CGPoint(x: 14.73, y: 10.99))
        shapePath.addLineToPoint(CGPoint(x: 15.09, y: 11.6))
        shapePath.addLineToPoint(CGPoint(x: 15.09, y: 11.6))
        shapePath.closePath()
        shapePath.miterLimit = 4;

        shapePath.usesEvenOddFillRule = true;

        fillColor.setFill()
        shapePath.fill()


        //// Shape 2 Drawing
        let shape2Path = UIBezierPath()
        shape2Path.moveToPoint(CGPoint(x: 19.27, y: 11.6))
        shape2Path.addCurveToPoint(CGPoint(x: 20, y: 13.51), controlPoint1: CGPoint(x: 18.91, y: 12.21), controlPoint2: CGPoint(x: 19.24, y: 13.07))
        shape2Path.addLineToPoint(CGPoint(x: 31.83, y: 20.34))
        shape2Path.addCurveToPoint(CGPoint(x: 33.85, y: 20.02), controlPoint1: CGPoint(x: 32.59, y: 20.77), controlPoint2: CGPoint(x: 33.49, y: 20.63))
        shape2Path.addLineToPoint(CGPoint(x: 33.85, y: 20.02))
        shape2Path.addCurveToPoint(CGPoint(x: 33.11, y: 18.11), controlPoint1: CGPoint(x: 34.2, y: 19.41), controlPoint2: CGPoint(x: 33.87, y: 18.55))
        shape2Path.addLineToPoint(CGPoint(x: 21.29, y: 11.28))
        shape2Path.addCurveToPoint(CGPoint(x: 19.27, y: 11.6), controlPoint1: CGPoint(x: 20.53, y: 10.84), controlPoint2: CGPoint(x: 19.62, y: 10.99))
        shape2Path.addLineToPoint(CGPoint(x: 19.27, y: 11.6))
        shape2Path.addLineToPoint(CGPoint(x: 19.27, y: 11.6))
        shape2Path.closePath()
        shape2Path.miterLimit = 4;

        shape2Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape2Path.fill()


        //// Shape 3 Drawing
        let shape3Path = UIBezierPath(roundedRect: CGRect(x: 7.93, y: 9.9, width: 18.35, height: 21.4), cornerRadius: 9.18)
        fillColor.setFill()
        shape3Path.fill()


        //// Shape 4 Drawing


        //// Shape 5 Drawing
        let shape5Path = UIBezierPath()
        shape5Path.moveToPoint(CGPoint(x: 11.86, y: 36.26))
        shape5Path.addCurveToPoint(CGPoint(x: 17.11, y: 26.22), controlPoint1: CGPoint(x: 11.86, y: 30.71), controlPoint2: CGPoint(x: 14.21, y: 26.22))
        shape5Path.addCurveToPoint(CGPoint(x: 22.35, y: 36.26), controlPoint1: CGPoint(x: 20, y: 26.22), controlPoint2: CGPoint(x: 22.35, y: 30.71))
        shape5Path.addCurveToPoint(CGPoint(x: 21.53, y: 41.61), controlPoint1: CGPoint(x: 22.35, y: 38.23), controlPoint2: CGPoint(x: 22.04, y: 40.07))
        shape5Path.addLineToPoint(CGPoint(x: 23.89, y: 41.61))
        shape5Path.addCurveToPoint(CGPoint(x: 24.53, y: 36.26), controlPoint1: CGPoint(x: 24.3, y: 39.99), controlPoint2: CGPoint(x: 24.53, y: 38.18))
        shape5Path.addCurveToPoint(CGPoint(x: 17.11, y: 23.2), controlPoint1: CGPoint(x: 24.53, y: 28.93), controlPoint2: CGPoint(x: 21.27, y: 23.2))
        shape5Path.addCurveToPoint(CGPoint(x: 9.68, y: 36.26), controlPoint1: CGPoint(x: 12.94, y: 23.2), controlPoint2: CGPoint(x: 9.68, y: 28.93))
        shape5Path.addCurveToPoint(CGPoint(x: 10.31, y: 41.61), controlPoint1: CGPoint(x: 9.68, y: 38.18), controlPoint2: CGPoint(x: 9.91, y: 39.99))
        shape5Path.addLineToPoint(CGPoint(x: 12.68, y: 41.61))
        shape5Path.addCurveToPoint(CGPoint(x: 11.86, y: 36.26), controlPoint1: CGPoint(x: 12.16, y: 40.06), controlPoint2: CGPoint(x: 11.86, y: 38.23))
        shape5Path.addLineToPoint(CGPoint(x: 11.86, y: 36.26))
        shape5Path.closePath()
        shape5Path.miterLimit = 4;

        shape5Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape5Path.fill()


        //// Shape 6 Drawing
        let shape6Path = UIBezierPath()
        shape6Path.moveToPoint(CGPoint(x: 18.34, y: 9.79))
        shape6Path.addCurveToPoint(CGPoint(x: 17.11, y: 11.57), controlPoint1: CGPoint(x: 18.34, y: 10.77), controlPoint2: CGPoint(x: 17.78, y: 11.57))
        shape6Path.addLineToPoint(CGPoint(x: 17.11, y: 11.57))
        shape6Path.addCurveToPoint(CGPoint(x: 15.87, y: 9.79), controlPoint1: CGPoint(x: 16.42, y: 11.57), controlPoint2: CGPoint(x: 15.87, y: 10.77))
        shape6Path.addLineToPoint(CGPoint(x: 15.87, y: 9.56))
        shape6Path.addCurveToPoint(CGPoint(x: 17.11, y: 7.78), controlPoint1: CGPoint(x: 15.87, y: 8.58), controlPoint2: CGPoint(x: 16.42, y: 7.78))
        shape6Path.addLineToPoint(CGPoint(x: 17.11, y: 7.78))
        shape6Path.addCurveToPoint(CGPoint(x: 18.34, y: 9.56), controlPoint1: CGPoint(x: 17.78, y: 7.78), controlPoint2: CGPoint(x: 18.34, y: 8.58))
        shape6Path.addLineToPoint(CGPoint(x: 18.34, y: 9.79))
        shape6Path.addLineToPoint(CGPoint(x: 18.34, y: 9.79))
        shape6Path.closePath()
        shape6Path.miterLimit = 4;

        shape6Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape6Path.fill()


        //// Shape 7 Drawing
        let shape7Path = UIBezierPath()
        shape7Path.moveToPoint(CGPoint(x: 28.27, y: 41.9))
        shape7Path.addCurveToPoint(CGPoint(x: 26.57, y: 43.6), controlPoint1: CGPoint(x: 28.27, y: 42.84), controlPoint2: CGPoint(x: 27.52, y: 43.6))
        shape7Path.addLineToPoint(CGPoint(x: 23.23, y: 43.6))
        shape7Path.addCurveToPoint(CGPoint(x: 21.52, y: 41.9), controlPoint1: CGPoint(x: 22.28, y: 43.6), controlPoint2: CGPoint(x: 21.52, y: 42.84))
        shape7Path.addLineToPoint(CGPoint(x: 21.52, y: 41.9))
        shape7Path.addCurveToPoint(CGPoint(x: 23.23, y: 40.19), controlPoint1: CGPoint(x: 21.52, y: 40.95), controlPoint2: CGPoint(x: 22.28, y: 40.19))
        shape7Path.addLineToPoint(CGPoint(x: 26.57, y: 40.19))
        shape7Path.addCurveToPoint(CGPoint(x: 28.27, y: 41.9), controlPoint1: CGPoint(x: 27.52, y: 40.19), controlPoint2: CGPoint(x: 28.27, y: 40.95))
        shape7Path.addLineToPoint(CGPoint(x: 28.27, y: 41.9))
        shape7Path.addLineToPoint(CGPoint(x: 28.27, y: 41.9))
        shape7Path.closePath()
        shape7Path.miterLimit = 4;

        shape7Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape7Path.fill()


        //// Shape 8 Drawing
        let shape8Path = UIBezierPath()
        shape8Path.moveToPoint(CGPoint(x: 12.7, y: 41.9))
        shape8Path.addCurveToPoint(CGPoint(x: 10.99, y: 43.6), controlPoint1: CGPoint(x: 12.7, y: 42.84), controlPoint2: CGPoint(x: 11.93, y: 43.6))
        shape8Path.addLineToPoint(CGPoint(x: 7.65, y: 43.6))
        shape8Path.addCurveToPoint(CGPoint(x: 5.94, y: 41.9), controlPoint1: CGPoint(x: 6.71, y: 43.6), controlPoint2: CGPoint(x: 5.94, y: 42.84))
        shape8Path.addLineToPoint(CGPoint(x: 5.94, y: 41.9))
        shape8Path.addCurveToPoint(CGPoint(x: 7.65, y: 40.19), controlPoint1: CGPoint(x: 5.94, y: 40.95), controlPoint2: CGPoint(x: 6.7, y: 40.19))
        shape8Path.addLineToPoint(CGPoint(x: 10.99, y: 40.19))
        shape8Path.addCurveToPoint(CGPoint(x: 12.7, y: 41.9), controlPoint1: CGPoint(x: 11.93, y: 40.19), controlPoint2: CGPoint(x: 12.7, y: 40.95))
        shape8Path.addLineToPoint(CGPoint(x: 12.7, y: 41.9))
        shape8Path.addLineToPoint(CGPoint(x: 12.7, y: 41.9))
        shape8Path.closePath()
        shape8Path.miterLimit = 4;

        shape8Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape8Path.fill()


        //// Shape 9 Drawing
        let shape9Path = UIBezierPath()
        shape9Path.moveToPoint(CGPoint(x: 25.96, y: 24.52))
        shape9Path.addLineToPoint(CGPoint(x: 8.25, y: 24.52))
        shape9Path.addCurveToPoint(CGPoint(x: 8.25, y: 24.53), controlPoint1: CGPoint(x: 8.25, y: 24.52), controlPoint2: CGPoint(x: 8.25, y: 24.52))
        shape9Path.addCurveToPoint(CGPoint(x: 10.55, y: 28.52), controlPoint1: CGPoint(x: 8.71, y: 26.05), controlPoint2: CGPoint(x: 9.52, y: 27.42))
        shape9Path.addLineToPoint(CGPoint(x: 9.68, y: 30.62))
        shape9Path.addLineToPoint(CGPoint(x: 12.66, y: 31.86))
        shape9Path.addLineToPoint(CGPoint(x: 13.23, y: 30.48))
        shape9Path.addCurveToPoint(CGPoint(x: 17.11, y: 31.42), controlPoint1: CGPoint(x: 14.41, y: 31.07), controlPoint2: CGPoint(x: 15.71, y: 31.42))
        shape9Path.addCurveToPoint(CGPoint(x: 20.96, y: 30.49), controlPoint1: CGPoint(x: 18.49, y: 31.42), controlPoint2: CGPoint(x: 19.79, y: 31.07))
        shape9Path.addLineToPoint(CGPoint(x: 21.54, y: 31.86))
        shape9Path.addLineToPoint(CGPoint(x: 24.52, y: 30.62))
        shape9Path.addLineToPoint(CGPoint(x: 23.64, y: 28.53))
        shape9Path.addCurveToPoint(CGPoint(x: 25.96, y: 24.52), controlPoint1: CGPoint(x: 24.69, y: 27.41), controlPoint2: CGPoint(x: 25.5, y: 26.05))
        shape9Path.addLineToPoint(CGPoint(x: 25.96, y: 24.52))
        shape9Path.closePath()
        shape9Path.miterLimit = 4;

        shape9Path.usesEvenOddFillRule = true;

        fillColor9.setFill()
        shape9Path.fill()


        //// Shape 10 Drawing
        let shape10Path = UIBezierPath()
        shape10Path.moveToPoint(CGPoint(x: 8.09, y: 23.8))
        shape10Path.addCurveToPoint(CGPoint(x: 8.25, y: 24.52), controlPoint1: CGPoint(x: 8.14, y: 24.04), controlPoint2: CGPoint(x: 8.18, y: 24.28))
        shape10Path.addLineToPoint(CGPoint(x: 25.96, y: 24.52))
        shape10Path.addCurveToPoint(CGPoint(x: 26.14, y: 23.8), controlPoint1: CGPoint(x: 26.03, y: 24.28), controlPoint2: CGPoint(x: 26.09, y: 24.04))
        shape10Path.addLineToPoint(CGPoint(x: 8.09, y: 23.8))
        shape10Path.addLineToPoint(CGPoint(x: 8.09, y: 23.8))
        shape10Path.closePath()
        shape10Path.miterLimit = 4;

        shape10Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape10Path.fill()


        //// Shape 11 Drawing
        let shape11Path = UIBezierPath()
        shape11Path.moveToPoint(CGPoint(x: 33.48, y: 17.56))
        shape11Path.addCurveToPoint(CGPoint(x: 33.3, y: 18.04), controlPoint1: CGPoint(x: 33.57, y: 17.74), controlPoint2: CGPoint(x: 33.48, y: 17.96))
        shape11Path.addLineToPoint(CGPoint(x: 32.13, y: 18.54))
        shape11Path.addCurveToPoint(CGPoint(x: 31.66, y: 18.35), controlPoint1: CGPoint(x: 31.95, y: 18.62), controlPoint2: CGPoint(x: 31.74, y: 18.54))
        shape11Path.addLineToPoint(CGPoint(x: 31.66, y: 18.35))
        shape11Path.addCurveToPoint(CGPoint(x: 31.85, y: 17.87), controlPoint1: CGPoint(x: 31.58, y: 18.17), controlPoint2: CGPoint(x: 31.66, y: 17.95))
        shape11Path.addLineToPoint(CGPoint(x: 33.01, y: 17.37))
        shape11Path.addCurveToPoint(CGPoint(x: 33.48, y: 17.56), controlPoint1: CGPoint(x: 33.19, y: 17.29), controlPoint2: CGPoint(x: 33.41, y: 17.37))
        shape11Path.addLineToPoint(CGPoint(x: 33.48, y: 17.56))
        shape11Path.addLineToPoint(CGPoint(x: 33.48, y: 17.56))
        shape11Path.closePath()
        shape11Path.miterLimit = 4;

        shape11Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape11Path.fill()


        //// Shape 12 Drawing
        let shape12Path = UIBezierPath()
        shape12Path.moveToPoint(CGPoint(x: 0.93, y: 17.56))
        shape12Path.addCurveToPoint(CGPoint(x: 1.12, y: 18.04), controlPoint1: CGPoint(x: 0.85, y: 17.74), controlPoint2: CGPoint(x: 0.93, y: 17.96))
        shape12Path.addLineToPoint(CGPoint(x: 2.28, y: 18.54))
        shape12Path.addCurveToPoint(CGPoint(x: 2.76, y: 18.35), controlPoint1: CGPoint(x: 2.47, y: 18.62), controlPoint2: CGPoint(x: 2.68, y: 18.54))
        shape12Path.addLineToPoint(CGPoint(x: 2.76, y: 18.35))
        shape12Path.addCurveToPoint(CGPoint(x: 2.57, y: 17.87), controlPoint1: CGPoint(x: 2.84, y: 18.17), controlPoint2: CGPoint(x: 2.75, y: 17.95))
        shape12Path.addLineToPoint(CGPoint(x: 1.41, y: 17.37))
        shape12Path.addCurveToPoint(CGPoint(x: 0.93, y: 17.56), controlPoint1: CGPoint(x: 1.23, y: 17.29), controlPoint2: CGPoint(x: 1.01, y: 17.37))
        shape12Path.addLineToPoint(CGPoint(x: 0.93, y: 17.56))
        shape12Path.addLineToPoint(CGPoint(x: 0.93, y: 17.56))
        shape12Path.closePath()
        shape12Path.miterLimit = 4;

        shape12Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape12Path.fill()


        //// Shape 13 Drawing
        let shape13Path = UIBezierPath()
        shape13Path.moveToPoint(CGPoint(x: 25.23, y: 26.22))
        shape13Path.addLineToPoint(CGPoint(x: 8.93, y: 26.22))
        shape13Path.addLineToPoint(CGPoint(x: 8.25, y: 24.46))
        shape13Path.addLineToPoint(CGPoint(x: 25.96, y: 24.46))
        shape13Path.addLineToPoint(CGPoint(x: 25.23, y: 26.22))
        shape13Path.closePath()
        shape13Path.miterLimit = 4;

        shape13Path.usesEvenOddFillRule = true;

        fillColor10.setFill()
        shape13Path.fill()


        //// Shape 14 Drawing
        let shape14Path = UIBezierPath()
        shape14Path.moveToPoint(CGPoint(x: 28.45, y: 14.96))
        shape14Path.addLineToPoint(CGPoint(x: 21.64, y: 11.03))
        shape14Path.addLineToPoint(CGPoint(x: 21.62, y: 11.05))
        shape14Path.addCurveToPoint(CGPoint(x: 19.84, y: 10.25), controlPoint1: CGPoint(x: 21.05, y: 10.72), controlPoint2: CGPoint(x: 20.45, y: 10.46))
        shape14Path.addLineToPoint(CGPoint(x: 19.77, y: 10.2))
        shape14Path.addLineToPoint(CGPoint(x: 19.76, y: 10.22))
        shape14Path.addCurveToPoint(CGPoint(x: 18.88, y: 9.96), controlPoint1: CGPoint(x: 19.47, y: 10.13), controlPoint2: CGPoint(x: 19.18, y: 10.02))
        shape14Path.addCurveToPoint(CGPoint(x: 17.07, y: 9.76), controlPoint1: CGPoint(x: 18.28, y: 9.83), controlPoint2: CGPoint(x: 17.67, y: 9.76))
        shape14Path.addCurveToPoint(CGPoint(x: 15.11, y: 9.99), controlPoint1: CGPoint(x: 16.42, y: 9.76), controlPoint2: CGPoint(x: 15.76, y: 9.84))
        shape14Path.addCurveToPoint(CGPoint(x: 12.58, y: 11.05), controlPoint1: CGPoint(x: 14.21, y: 10.19), controlPoint2: CGPoint(x: 13.38, y: 10.58))
        shape14Path.addLineToPoint(CGPoint(x: 12.57, y: 11.03))
        shape14Path.addLineToPoint(CGPoint(x: 5.76, y: 14.96))
        shape14Path.addLineToPoint(CGPoint(x: 7.48, y: 17.94))
        shape14Path.addLineToPoint(CGPoint(x: 8.08, y: 17.59))
        shape14Path.addCurveToPoint(CGPoint(x: 7.81, y: 18.93), controlPoint1: CGPoint(x: 7.97, y: 18.03), controlPoint2: CGPoint(x: 7.84, y: 18.46))
        shape14Path.addCurveToPoint(CGPoint(x: 7.77, y: 19.7), controlPoint1: CGPoint(x: 7.79, y: 19.18), controlPoint2: CGPoint(x: 7.77, y: 19.44))
        shape14Path.addLineToPoint(CGPoint(x: 7.77, y: 19.86))
        shape14Path.addLineToPoint(CGPoint(x: 7.77, y: 19.86))
        shape14Path.addLineToPoint(CGPoint(x: 7.77, y: 25.33))
        shape14Path.addLineToPoint(CGPoint(x: 26.41, y: 25.33))
        shape14Path.addLineToPoint(CGPoint(x: 26.41, y: 19.86))
        shape14Path.addLineToPoint(CGPoint(x: 26.37, y: 19.86))
        shape14Path.addLineToPoint(CGPoint(x: 26.37, y: 19.7))
        shape14Path.addCurveToPoint(CGPoint(x: 26.36, y: 19.27), controlPoint1: CGPoint(x: 26.37, y: 19.56), controlPoint2: CGPoint(x: 26.37, y: 19.41))
        shape14Path.addLineToPoint(CGPoint(x: 26.35, y: 19.12))
        shape14Path.addCurveToPoint(CGPoint(x: 26.08, y: 17.57), controlPoint1: CGPoint(x: 26.32, y: 18.59), controlPoint2: CGPoint(x: 26.2, y: 18.07))
        shape14Path.addLineToPoint(CGPoint(x: 26.73, y: 17.94))
        shape14Path.addLineToPoint(CGPoint(x: 26.87, y: 17.69))
        shape14Path.addLineToPoint(CGPoint(x: 28.37, y: 15.17))
        shape14Path.addLineToPoint(CGPoint(x: 28.34, y: 15.15))
        shape14Path.addLineToPoint(CGPoint(x: 28.45, y: 14.96))
        shape14Path.addLineToPoint(CGPoint(x: 28.45, y: 14.96))
        shape14Path.closePath()
        shape14Path.miterLimit = 4;

        shape14Path.usesEvenOddFillRule = true;

        fillColor9.setFill()
        shape14Path.fill()


        //// Shape 15 Drawing
        let shape15Path = UIBezierPath()
        shape15Path.moveToPoint(CGPoint(x: 22.03, y: 4.25))
        shape15Path.addCurveToPoint(CGPoint(x: 21.96, y: 4.27), controlPoint1: CGPoint(x: 22.01, y: 4.25), controlPoint2: CGPoint(x: 21.98, y: 4.27))
        shape15Path.addCurveToPoint(CGPoint(x: 17.11, y: 0.04), controlPoint1: CGPoint(x: 21.62, y: 1.88), controlPoint2: CGPoint(x: 19.59, y: 0.04))
        shape15Path.addCurveToPoint(CGPoint(x: 12.25, y: 4.27), controlPoint1: CGPoint(x: 14.62, y: 0.04), controlPoint2: CGPoint(x: 12.58, y: 1.88))
        shape15Path.addCurveToPoint(CGPoint(x: 12.18, y: 4.25), controlPoint1: CGPoint(x: 12.22, y: 4.27), controlPoint2: CGPoint(x: 12.2, y: 4.25))
        shape15Path.addCurveToPoint(CGPoint(x: 11.47, y: 4.97), controlPoint1: CGPoint(x: 11.79, y: 4.25), controlPoint2: CGPoint(x: 11.47, y: 4.57))
        shape15Path.addCurveToPoint(CGPoint(x: 12.18, y: 5.67), controlPoint1: CGPoint(x: 11.47, y: 5.35), controlPoint2: CGPoint(x: 11.79, y: 5.67))
        shape15Path.addCurveToPoint(CGPoint(x: 12.25, y: 5.66), controlPoint1: CGPoint(x: 12.2, y: 5.67), controlPoint2: CGPoint(x: 12.22, y: 5.66))
        shape15Path.addCurveToPoint(CGPoint(x: 17.11, y: 9.89), controlPoint1: CGPoint(x: 12.58, y: 8.05), controlPoint2: CGPoint(x: 14.62, y: 9.89))
        shape15Path.addCurveToPoint(CGPoint(x: 21.96, y: 5.66), controlPoint1: CGPoint(x: 19.59, y: 9.89), controlPoint2: CGPoint(x: 21.62, y: 8.05))
        shape15Path.addCurveToPoint(CGPoint(x: 22.03, y: 5.67), controlPoint1: CGPoint(x: 21.98, y: 5.66), controlPoint2: CGPoint(x: 22.01, y: 5.67))
        shape15Path.addCurveToPoint(CGPoint(x: 22.73, y: 4.97), controlPoint1: CGPoint(x: 22.42, y: 5.67), controlPoint2: CGPoint(x: 22.73, y: 5.35))
        shape15Path.addCurveToPoint(CGPoint(x: 22.03, y: 4.25), controlPoint1: CGPoint(x: 22.73, y: 4.57), controlPoint2: CGPoint(x: 22.42, y: 4.25))
        shape15Path.addLineToPoint(CGPoint(x: 22.03, y: 4.25))
        shape15Path.closePath()
        shape15Path.miterLimit = 4;

        shape15Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape15Path.fill()


        //// Shape 16 Drawing
        let shape16Path = UIBezierPath(ovalInRect: CGRect(x: 18.4, y: 3.7, width: 1, height: 1))
        fillColor3.setFill()
        shape16Path.fill()


        //// Shape 17 Drawing
        let shape17Path = UIBezierPath(ovalInRect: CGRect(x: 14.65, y: 3.7, width: 1, height: 1))
        fillColor3.setFill()
        shape17Path.fill()


        //// Shape 18 Drawing
        let shape18Path = UIBezierPath(roundedRect: CGRect(x: 15.88, y: 7.85, width: 2.45, height: 3.6), cornerRadius: 1.2)
        fillColor.setFill()
        shape18Path.fill()


        //// Shape 19 Drawing
        let shape19Path = UIBezierPath()
        shape19Path.moveToPoint(CGPoint(x: 16.13, y: 7.34))
        shape19Path.addCurveToPoint(CGPoint(x: 16.28, y: 7.4), controlPoint1: CGPoint(x: 16.18, y: 7.34), controlPoint2: CGPoint(x: 16.24, y: 7.35))
        shape19Path.addCurveToPoint(CGPoint(x: 17.16, y: 7.81), controlPoint1: CGPoint(x: 16.57, y: 7.69), controlPoint2: CGPoint(x: 16.86, y: 7.83))
        shape19Path.addCurveToPoint(CGPoint(x: 17.92, y: 7.41), controlPoint1: CGPoint(x: 17.6, y: 7.79), controlPoint2: CGPoint(x: 17.91, y: 7.41))
        shape19Path.addCurveToPoint(CGPoint(x: 18.21, y: 7.38), controlPoint1: CGPoint(x: 17.99, y: 7.32), controlPoint2: CGPoint(x: 18.12, y: 7.31))
        shape19Path.addCurveToPoint(CGPoint(x: 18.24, y: 7.67), controlPoint1: CGPoint(x: 18.29, y: 7.45), controlPoint2: CGPoint(x: 18.31, y: 7.58))
        shape19Path.addCurveToPoint(CGPoint(x: 17.18, y: 8.22), controlPoint1: CGPoint(x: 18.22, y: 7.69), controlPoint2: CGPoint(x: 17.81, y: 8.19))
        shape19Path.addCurveToPoint(CGPoint(x: 15.98, y: 7.69), controlPoint1: CGPoint(x: 16.76, y: 8.24), controlPoint2: CGPoint(x: 16.37, y: 8.06))
        shape19Path.addCurveToPoint(CGPoint(x: 15.98, y: 7.4), controlPoint1: CGPoint(x: 15.91, y: 7.6), controlPoint2: CGPoint(x: 15.91, y: 7.48))
        shape19Path.addCurveToPoint(CGPoint(x: 16.13, y: 7.34), controlPoint1: CGPoint(x: 16.03, y: 7.35), controlPoint2: CGPoint(x: 16.08, y: 7.34))
        shape19Path.addLineToPoint(CGPoint(x: 16.13, y: 7.34))
        shape19Path.closePath()
        shape19Path.miterLimit = 4;

        shape19Path.usesEvenOddFillRule = true;

        fillColor4.setFill()
        shape19Path.fill()
    }

    public class func drawGray4() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let fillColor = UIColor(red: 0.997, green: 0.849, blue: 0.775, alpha: 1.000)
        let fillColor3 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let fillColor4 = UIColor(red: 0.993, green: 0.655, blue: 0.569, alpha: 1.000)
        let fillColor6 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let fillColor7 = UIColor(red: 0.638, green: 0.638, blue: 0.638, alpha: 0.800)
        let fillColor9 = UIColor(red: 0.912, green: 0.912, blue: 0.912, alpha: 1.000)

        //// Page-1
        //// Group 옷장선택 3
        //// Group 5
        //// Shape Drawing
        let shapePath = UIBezierPath()
        shapePath.moveToPoint(CGPoint(x: 15.47, y: 11.65))
        shapePath.addCurveToPoint(CGPoint(x: 14.74, y: 13.55), controlPoint1: CGPoint(x: 15.82, y: 12.26), controlPoint2: CGPoint(x: 15.49, y: 13.12))
        shapePath.addLineToPoint(CGPoint(x: 2.95, y: 20.36))
        shapePath.addCurveToPoint(CGPoint(x: 0.94, y: 20.04), controlPoint1: CGPoint(x: 2.19, y: 20.79), controlPoint2: CGPoint(x: 1.3, y: 20.65))
        shapePath.addLineToPoint(CGPoint(x: 0.94, y: 20.04))
        shapePath.addCurveToPoint(CGPoint(x: 1.67, y: 18.14), controlPoint1: CGPoint(x: 0.58, y: 19.43), controlPoint2: CGPoint(x: 0.92, y: 18.58))
        shapePath.addLineToPoint(CGPoint(x: 13.46, y: 11.33))
        shapePath.addCurveToPoint(CGPoint(x: 15.47, y: 11.65), controlPoint1: CGPoint(x: 14.21, y: 10.89), controlPoint2: CGPoint(x: 15.11, y: 11.04))
        shapePath.addLineToPoint(CGPoint(x: 15.47, y: 11.65))
        shapePath.addLineToPoint(CGPoint(x: 15.47, y: 11.65))
        shapePath.closePath()
        shapePath.miterLimit = 4;

        shapePath.usesEvenOddFillRule = true;

        fillColor.setFill()
        shapePath.fill()


        //// Shape 2 Drawing
        let shape2Path = UIBezierPath()
        shape2Path.moveToPoint(CGPoint(x: 19.64, y: 11.65))
        shape2Path.addCurveToPoint(CGPoint(x: 20.37, y: 13.55), controlPoint1: CGPoint(x: 19.28, y: 12.26), controlPoint2: CGPoint(x: 19.61, y: 13.12))
        shape2Path.addLineToPoint(CGPoint(x: 32.15, y: 20.36))
        shape2Path.addCurveToPoint(CGPoint(x: 34.16, y: 20.04), controlPoint1: CGPoint(x: 32.91, y: 20.79), controlPoint2: CGPoint(x: 33.81, y: 20.65))
        shape2Path.addLineToPoint(CGPoint(x: 34.16, y: 20.04))
        shape2Path.addCurveToPoint(CGPoint(x: 33.43, y: 18.14), controlPoint1: CGPoint(x: 34.52, y: 19.43), controlPoint2: CGPoint(x: 34.19, y: 18.58))
        shape2Path.addLineToPoint(CGPoint(x: 21.65, y: 11.33))
        shape2Path.addCurveToPoint(CGPoint(x: 19.64, y: 11.65), controlPoint1: CGPoint(x: 20.89, y: 10.89), controlPoint2: CGPoint(x: 19.99, y: 11.04))
        shape2Path.addLineToPoint(CGPoint(x: 19.64, y: 11.65))
        shape2Path.addLineToPoint(CGPoint(x: 19.64, y: 11.65))
        shape2Path.closePath()
        shape2Path.miterLimit = 4;

        shape2Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape2Path.fill()


        //// Shape 3 Drawing
        let shape3Path = UIBezierPath()
        shape3Path.moveToPoint(CGPoint(x: 22.39, y: 4.33))
        shape3Path.addCurveToPoint(CGPoint(x: 22.32, y: 4.34), controlPoint1: CGPoint(x: 22.36, y: 4.33), controlPoint2: CGPoint(x: 22.34, y: 4.34))
        shape3Path.addCurveToPoint(CGPoint(x: 17.48, y: 0.12), controlPoint1: CGPoint(x: 21.98, y: 1.96), controlPoint2: CGPoint(x: 19.96, y: 0.12))
        shape3Path.addCurveToPoint(CGPoint(x: 12.63, y: 4.34), controlPoint1: CGPoint(x: 15, y: 0.12), controlPoint2: CGPoint(x: 12.97, y: 1.96))
        shape3Path.addCurveToPoint(CGPoint(x: 12.57, y: 4.33), controlPoint1: CGPoint(x: 12.61, y: 4.34), controlPoint2: CGPoint(x: 12.59, y: 4.33))
        shape3Path.addCurveToPoint(CGPoint(x: 11.86, y: 5.04), controlPoint1: CGPoint(x: 12.17, y: 4.33), controlPoint2: CGPoint(x: 11.86, y: 4.64))
        shape3Path.addCurveToPoint(CGPoint(x: 12.57, y: 5.74), controlPoint1: CGPoint(x: 11.86, y: 5.42), controlPoint2: CGPoint(x: 12.18, y: 5.74))
        shape3Path.addCurveToPoint(CGPoint(x: 12.63, y: 5.72), controlPoint1: CGPoint(x: 12.59, y: 5.74), controlPoint2: CGPoint(x: 12.61, y: 5.72))
        shape3Path.addCurveToPoint(CGPoint(x: 17.48, y: 9.94), controlPoint1: CGPoint(x: 12.97, y: 8.11), controlPoint2: CGPoint(x: 15, y: 9.94))
        shape3Path.addCurveToPoint(CGPoint(x: 22.32, y: 5.72), controlPoint1: CGPoint(x: 19.96, y: 9.94), controlPoint2: CGPoint(x: 21.98, y: 8.11))
        shape3Path.addCurveToPoint(CGPoint(x: 22.39, y: 5.74), controlPoint1: CGPoint(x: 22.34, y: 5.72), controlPoint2: CGPoint(x: 22.36, y: 5.74))
        shape3Path.addCurveToPoint(CGPoint(x: 23.09, y: 5.04), controlPoint1: CGPoint(x: 22.77, y: 5.74), controlPoint2: CGPoint(x: 23.09, y: 5.42))
        shape3Path.addCurveToPoint(CGPoint(x: 22.39, y: 4.33), controlPoint1: CGPoint(x: 23.09, y: 4.64), controlPoint2: CGPoint(x: 22.77, y: 4.33))
        shape3Path.addLineToPoint(CGPoint(x: 22.39, y: 4.33))
        shape3Path.closePath()
        shape3Path.miterLimit = 4;

        shape3Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape3Path.fill()


        //// Shape 4 Drawing
        let shape4Path = UIBezierPath(roundedRect: CGRect(x: 8.35, y: 9.93, width: 18.3, height: 21.35), cornerRadius: 9.15)
        fillColor.setFill()
        shape4Path.fill()


        //// Shape 5 Drawing
        let shape5Path = UIBezierPath()
        shape5Path.moveToPoint(CGPoint(x: 28.7, y: 15.21))
        shape5Path.addLineToPoint(CGPoint(x: 28.67, y: 15.19))
        shape5Path.addLineToPoint(CGPoint(x: 28.78, y: 15))
        shape5Path.addLineToPoint(CGPoint(x: 21.99, y: 11.08))
        shape5Path.addLineToPoint(CGPoint(x: 21.98, y: 11.1))
        shape5Path.addCurveToPoint(CGPoint(x: 20.21, y: 10.3), controlPoint1: CGPoint(x: 21.41, y: 10.77), controlPoint2: CGPoint(x: 20.81, y: 10.51))
        shape5Path.addLineToPoint(CGPoint(x: 20.13, y: 10.26))
        shape5Path.addLineToPoint(CGPoint(x: 20.12, y: 10.28))
        shape5Path.addCurveToPoint(CGPoint(x: 19.25, y: 10.01), controlPoint1: CGPoint(x: 19.83, y: 10.18), controlPoint2: CGPoint(x: 19.54, y: 10.07))
        shape5Path.addCurveToPoint(CGPoint(x: 17.44, y: 9.82), controlPoint1: CGPoint(x: 18.64, y: 9.88), controlPoint2: CGPoint(x: 18.04, y: 9.82))
        shape5Path.addCurveToPoint(CGPoint(x: 15.48, y: 10.05), controlPoint1: CGPoint(x: 16.8, y: 9.82), controlPoint2: CGPoint(x: 16.13, y: 9.89))
        shape5Path.addCurveToPoint(CGPoint(x: 12.97, y: 11.1), controlPoint1: CGPoint(x: 14.59, y: 10.25), controlPoint2: CGPoint(x: 13.76, y: 10.63))
        shape5Path.addLineToPoint(CGPoint(x: 12.96, y: 11.08))
        shape5Path.addLineToPoint(CGPoint(x: 6.16, y: 15))
        shape5Path.addLineToPoint(CGPoint(x: 7.88, y: 17.97))
        shape5Path.addLineToPoint(CGPoint(x: 8.48, y: 17.62))
        shape5Path.addCurveToPoint(CGPoint(x: 8.21, y: 18.95), controlPoint1: CGPoint(x: 8.37, y: 18.06), controlPoint2: CGPoint(x: 8.24, y: 18.49))
        shape5Path.addCurveToPoint(CGPoint(x: 8.17, y: 19.72), controlPoint1: CGPoint(x: 8.19, y: 19.21), controlPoint2: CGPoint(x: 8.17, y: 19.46))
        shape5Path.addLineToPoint(CGPoint(x: 8.17, y: 21.04))
        shape5Path.addLineToPoint(CGPoint(x: 26.71, y: 21.04))
        shape5Path.addLineToPoint(CGPoint(x: 26.71, y: 19.72))
        shape5Path.addCurveToPoint(CGPoint(x: 26.7, y: 19.29), controlPoint1: CGPoint(x: 26.71, y: 19.58), controlPoint2: CGPoint(x: 26.7, y: 19.43))
        shape5Path.addLineToPoint(CGPoint(x: 26.69, y: 19.14))
        shape5Path.addCurveToPoint(CGPoint(x: 26.42, y: 17.6), controlPoint1: CGPoint(x: 26.66, y: 18.61), controlPoint2: CGPoint(x: 26.54, y: 18.1))
        shape5Path.addLineToPoint(CGPoint(x: 27.07, y: 17.97))
        shape5Path.addLineToPoint(CGPoint(x: 27.21, y: 17.72))
        shape5Path.miterLimit = 4;

        shape5Path.usesEvenOddFillRule = true;

        fillColor9.setFill()
        shape5Path.fill()


        //// Shape 6 Drawing
        let shape6Path = UIBezierPath()
        shape6Path.moveToPoint(CGPoint(x: 12.25, y: 36.23))
        shape6Path.addCurveToPoint(CGPoint(x: 17.48, y: 26.22), controlPoint1: CGPoint(x: 12.25, y: 30.7), controlPoint2: CGPoint(x: 14.59, y: 26.22))
        shape6Path.addCurveToPoint(CGPoint(x: 22.7, y: 36.23), controlPoint1: CGPoint(x: 20.36, y: 26.22), controlPoint2: CGPoint(x: 22.7, y: 30.7))
        shape6Path.addCurveToPoint(CGPoint(x: 21.89, y: 41.57), controlPoint1: CGPoint(x: 22.7, y: 38.19), controlPoint2: CGPoint(x: 22.4, y: 40.02))
        shape6Path.addLineToPoint(CGPoint(x: 24.24, y: 41.57))
        shape6Path.addCurveToPoint(CGPoint(x: 24.88, y: 36.23), controlPoint1: CGPoint(x: 24.65, y: 39.94), controlPoint2: CGPoint(x: 24.88, y: 38.14))
        shape6Path.addCurveToPoint(CGPoint(x: 17.48, y: 23.21), controlPoint1: CGPoint(x: 24.88, y: 28.92), controlPoint2: CGPoint(x: 21.63, y: 23.21))
        shape6Path.addCurveToPoint(CGPoint(x: 10.07, y: 36.23), controlPoint1: CGPoint(x: 13.33, y: 23.21), controlPoint2: CGPoint(x: 10.07, y: 28.92))
        shape6Path.addCurveToPoint(CGPoint(x: 10.71, y: 41.57), controlPoint1: CGPoint(x: 10.07, y: 38.14), controlPoint2: CGPoint(x: 10.3, y: 39.94))
        shape6Path.addLineToPoint(CGPoint(x: 13.06, y: 41.57))
        shape6Path.addCurveToPoint(CGPoint(x: 12.25, y: 36.23), controlPoint1: CGPoint(x: 12.55, y: 40.02), controlPoint2: CGPoint(x: 12.25, y: 38.19))
        shape6Path.addLineToPoint(CGPoint(x: 12.25, y: 36.23))
        shape6Path.closePath()
        shape6Path.miterLimit = 4;

        shape6Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape6Path.fill()


        //// Shape 7 Drawing
        let shape7Path = UIBezierPath()
        shape7Path.moveToPoint(CGPoint(x: 18.71, y: 9.84))
        shape7Path.addCurveToPoint(CGPoint(x: 17.48, y: 11.62), controlPoint1: CGPoint(x: 18.71, y: 10.82), controlPoint2: CGPoint(x: 18.16, y: 11.62))
        shape7Path.addLineToPoint(CGPoint(x: 17.48, y: 11.62))
        shape7Path.addCurveToPoint(CGPoint(x: 16.25, y: 9.84), controlPoint1: CGPoint(x: 16.8, y: 11.62), controlPoint2: CGPoint(x: 16.25, y: 10.82))
        shape7Path.addLineToPoint(CGPoint(x: 16.25, y: 9.61))
        shape7Path.addCurveToPoint(CGPoint(x: 17.48, y: 7.84), controlPoint1: CGPoint(x: 16.25, y: 8.63), controlPoint2: CGPoint(x: 16.8, y: 7.84))
        shape7Path.addLineToPoint(CGPoint(x: 17.48, y: 7.84))
        shape7Path.addCurveToPoint(CGPoint(x: 18.71, y: 9.61), controlPoint1: CGPoint(x: 18.16, y: 7.84), controlPoint2: CGPoint(x: 18.71, y: 8.63))
        shape7Path.addLineToPoint(CGPoint(x: 18.71, y: 9.84))
        shape7Path.addLineToPoint(CGPoint(x: 18.71, y: 9.84))
        shape7Path.closePath()
        shape7Path.miterLimit = 4;

        shape7Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape7Path.fill()


        //// Shape 8 Drawing
        let shape8Path = UIBezierPath()
        shape8Path.moveToPoint(CGPoint(x: 28.61, y: 41.84))
        shape8Path.addCurveToPoint(CGPoint(x: 26.91, y: 43.55), controlPoint1: CGPoint(x: 28.61, y: 42.79), controlPoint2: CGPoint(x: 27.85, y: 43.55))
        shape8Path.addLineToPoint(CGPoint(x: 23.58, y: 43.55))
        shape8Path.addCurveToPoint(CGPoint(x: 21.88, y: 41.84), controlPoint1: CGPoint(x: 22.64, y: 43.55), controlPoint2: CGPoint(x: 21.88, y: 42.79))
        shape8Path.addLineToPoint(CGPoint(x: 21.88, y: 41.84))
        shape8Path.addCurveToPoint(CGPoint(x: 23.58, y: 40.14), controlPoint1: CGPoint(x: 21.88, y: 40.91), controlPoint2: CGPoint(x: 22.65, y: 40.14))
        shape8Path.addLineToPoint(CGPoint(x: 26.91, y: 40.14))
        shape8Path.addCurveToPoint(CGPoint(x: 28.61, y: 41.84), controlPoint1: CGPoint(x: 27.85, y: 40.14), controlPoint2: CGPoint(x: 28.61, y: 40.91))
        shape8Path.addLineToPoint(CGPoint(x: 28.61, y: 41.84))
        shape8Path.addLineToPoint(CGPoint(x: 28.61, y: 41.84))
        shape8Path.closePath()
        shape8Path.miterLimit = 4;

        shape8Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape8Path.fill()


        //// Shape 9 Drawing
        let shape9Path = UIBezierPath()
        shape9Path.moveToPoint(CGPoint(x: 13.08, y: 41.84))
        shape9Path.addCurveToPoint(CGPoint(x: 11.38, y: 43.55), controlPoint1: CGPoint(x: 13.08, y: 42.79), controlPoint2: CGPoint(x: 12.32, y: 43.55))
        shape9Path.addLineToPoint(CGPoint(x: 8.05, y: 43.55))
        shape9Path.addCurveToPoint(CGPoint(x: 6.35, y: 41.84), controlPoint1: CGPoint(x: 7.11, y: 43.55), controlPoint2: CGPoint(x: 6.35, y: 42.79))
        shape9Path.addLineToPoint(CGPoint(x: 6.35, y: 41.84))
        shape9Path.addCurveToPoint(CGPoint(x: 8.05, y: 40.14), controlPoint1: CGPoint(x: 6.35, y: 40.91), controlPoint2: CGPoint(x: 7.11, y: 40.14))
        shape9Path.addLineToPoint(CGPoint(x: 11.38, y: 40.14))
        shape9Path.addCurveToPoint(CGPoint(x: 13.08, y: 41.84), controlPoint1: CGPoint(x: 12.32, y: 40.14), controlPoint2: CGPoint(x: 13.08, y: 40.91))
        shape9Path.addLineToPoint(CGPoint(x: 13.08, y: 41.84))
        shape9Path.addLineToPoint(CGPoint(x: 13.08, y: 41.84))
        shape9Path.closePath()
        shape9Path.miterLimit = 4;

        shape9Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape9Path.fill()


        //// Oval 2 Drawing
        let oval2Path = UIBezierPath(ovalInRect: CGRect(x: 18.91, y: 3.87, width: 1, height: 1))
        fillColor3.setFill()
        oval2Path.fill()


        //// Oval 4 Drawing
        let oval4Path = UIBezierPath(ovalInRect: CGRect(x: 15.15, y: 3.87, width: 1, height: 1))
        fillColor3.setFill()
        oval4Path.fill()


        //// Shape 10 Drawing
        let shape10Path = UIBezierPath(roundedRect: CGRect(x: 16.27, y: 7.95, width: 2.45, height: 3.6), cornerRadius: 1.2)
        fillColor.setFill()
        shape10Path.fill()


        //// Shape 11 Drawing
        let shape11Path = UIBezierPath()
        shape11Path.moveToPoint(CGPoint(x: 26.3, y: 24.52))
        shape11Path.addLineToPoint(CGPoint(x: 8.65, y: 24.52))
        shape11Path.addCurveToPoint(CGPoint(x: 8.65, y: 24.54), controlPoint1: CGPoint(x: 8.65, y: 24.53), controlPoint2: CGPoint(x: 8.65, y: 24.53))
        shape11Path.addCurveToPoint(CGPoint(x: 10.95, y: 28.51), controlPoint1: CGPoint(x: 9.11, y: 26.06), controlPoint2: CGPoint(x: 9.91, y: 27.41))
        shape11Path.addLineToPoint(CGPoint(x: 10.07, y: 30.61))
        shape11Path.addLineToPoint(CGPoint(x: 13.05, y: 31.84))
        shape11Path.addLineToPoint(CGPoint(x: 13.62, y: 30.47))
        shape11Path.addCurveToPoint(CGPoint(x: 17.48, y: 31.41), controlPoint1: CGPoint(x: 14.8, y: 31.06), controlPoint2: CGPoint(x: 16.1, y: 31.41))
        shape11Path.addCurveToPoint(CGPoint(x: 21.32, y: 30.48), controlPoint1: CGPoint(x: 18.85, y: 31.41), controlPoint2: CGPoint(x: 20.15, y: 31.06))
        shape11Path.addLineToPoint(CGPoint(x: 21.89, y: 31.84))
        shape11Path.addLineToPoint(CGPoint(x: 24.86, y: 30.61))
        shape11Path.addLineToPoint(CGPoint(x: 24, y: 28.52))
        shape11Path.addCurveToPoint(CGPoint(x: 26.3, y: 24.52), controlPoint1: CGPoint(x: 25.04, y: 27.41), controlPoint2: CGPoint(x: 25.84, y: 26.05))
        shape11Path.addLineToPoint(CGPoint(x: 26.3, y: 24.52))
        shape11Path.closePath()
        shape11Path.miterLimit = 4;

        shape11Path.usesEvenOddFillRule = true;

        fillColor9.setFill()
        shape11Path.fill()


        //// Shape 12 Drawing
        let shape12Path = UIBezierPath()
        shape12Path.moveToPoint(CGPoint(x: 8.49, y: 23.81))
        shape12Path.addCurveToPoint(CGPoint(x: 8.65, y: 24.52), controlPoint1: CGPoint(x: 8.54, y: 24.04), controlPoint2: CGPoint(x: 8.58, y: 24.29))
        shape12Path.addLineToPoint(CGPoint(x: 26.3, y: 24.52))
        shape12Path.addCurveToPoint(CGPoint(x: 26.48, y: 23.81), controlPoint1: CGPoint(x: 26.37, y: 24.29), controlPoint2: CGPoint(x: 26.43, y: 24.05))
        shape12Path.addLineToPoint(CGPoint(x: 8.49, y: 23.81))
        shape12Path.addLineToPoint(CGPoint(x: 8.49, y: 23.81))
        shape12Path.closePath()
        shape12Path.miterLimit = 4;

        shape12Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape12Path.fill()


        //// Shape 13 Drawing
        let shape13Path = UIBezierPath()
        shape13Path.moveToPoint(CGPoint(x: 8.49, y: 23.81))
        shape13Path.addLineToPoint(CGPoint(x: 26.48, y: 23.81))
        shape13Path.addCurveToPoint(CGPoint(x: 26.75, y: 21.49), controlPoint1: CGPoint(x: 26.65, y: 23.07), controlPoint2: CGPoint(x: 26.75, y: 22.29))
        shape13Path.addLineToPoint(CGPoint(x: 26.75, y: 21.04))
        shape13Path.addLineToPoint(CGPoint(x: 8.21, y: 21.04))
        shape13Path.addLineToPoint(CGPoint(x: 8.21, y: 21.49))
        shape13Path.addCurveToPoint(CGPoint(x: 8.49, y: 23.81), controlPoint1: CGPoint(x: 8.21, y: 22.3), controlPoint2: CGPoint(x: 8.32, y: 23.06))
        shape13Path.addLineToPoint(CGPoint(x: 8.49, y: 23.81))
        shape13Path.closePath()
        shape13Path.miterLimit = 4;

        shape13Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape13Path.fill()


        //// Shape 14 Drawing
        let shape14Path = UIBezierPath()
        shape14Path.moveToPoint(CGPoint(x: 33.81, y: 17.58))
        shape14Path.addCurveToPoint(CGPoint(x: 33.61, y: 18.06), controlPoint1: CGPoint(x: 33.88, y: 17.77), controlPoint2: CGPoint(x: 33.8, y: 17.99))
        shape14Path.addLineToPoint(CGPoint(x: 32.46, y: 18.57))
        shape14Path.addCurveToPoint(CGPoint(x: 31.98, y: 18.38), controlPoint1: CGPoint(x: 32.27, y: 18.64), controlPoint2: CGPoint(x: 32.06, y: 18.57))
        shape14Path.addLineToPoint(CGPoint(x: 31.98, y: 18.38))
        shape14Path.addCurveToPoint(CGPoint(x: 32.17, y: 17.9), controlPoint1: CGPoint(x: 31.9, y: 18.19), controlPoint2: CGPoint(x: 31.99, y: 17.98))
        shape14Path.addLineToPoint(CGPoint(x: 33.33, y: 17.39))
        shape14Path.addCurveToPoint(CGPoint(x: 33.81, y: 17.58), controlPoint1: CGPoint(x: 33.51, y: 17.32), controlPoint2: CGPoint(x: 33.73, y: 17.4))
        shape14Path.addLineToPoint(CGPoint(x: 33.81, y: 17.58))
        shape14Path.addLineToPoint(CGPoint(x: 33.81, y: 17.58))
        shape14Path.closePath()
        shape14Path.miterLimit = 4;

        shape14Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape14Path.fill()


        //// Shape 15 Drawing
        let shape15Path = UIBezierPath()
        shape15Path.moveToPoint(CGPoint(x: 1.35, y: 17.58))
        shape15Path.addCurveToPoint(CGPoint(x: 1.54, y: 18.06), controlPoint1: CGPoint(x: 1.27, y: 17.77), controlPoint2: CGPoint(x: 1.36, y: 17.99))
        shape15Path.addLineToPoint(CGPoint(x: 2.7, y: 18.57))
        shape15Path.addCurveToPoint(CGPoint(x: 3.18, y: 18.38), controlPoint1: CGPoint(x: 2.88, y: 18.64), controlPoint2: CGPoint(x: 3.09, y: 18.57))
        shape15Path.addLineToPoint(CGPoint(x: 3.18, y: 18.38))
        shape15Path.addCurveToPoint(CGPoint(x: 2.99, y: 17.9), controlPoint1: CGPoint(x: 3.26, y: 18.19), controlPoint2: CGPoint(x: 3.17, y: 17.98))
        shape15Path.addLineToPoint(CGPoint(x: 1.83, y: 17.39))
        shape15Path.addCurveToPoint(CGPoint(x: 1.35, y: 17.58), controlPoint1: CGPoint(x: 1.65, y: 17.32), controlPoint2: CGPoint(x: 1.43, y: 17.4))
        shape15Path.addLineToPoint(CGPoint(x: 1.35, y: 17.58))
        shape15Path.addLineToPoint(CGPoint(x: 1.35, y: 17.58))
        shape15Path.closePath()
        shape15Path.miterLimit = 4;

        shape15Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape15Path.fill()


        //// Shape 16 Drawing
        let shape16Path = UIBezierPath()
        shape16Path.moveToPoint(CGPoint(x: 18.45, y: 8.28))
        shape16Path.addCurveToPoint(CGPoint(x: 18.3, y: 8.22), controlPoint1: CGPoint(x: 18.4, y: 8.28), controlPoint2: CGPoint(x: 18.34, y: 8.26))
        shape16Path.addCurveToPoint(CGPoint(x: 17.43, y: 7.8), controlPoint1: CGPoint(x: 18.01, y: 7.93), controlPoint2: CGPoint(x: 17.72, y: 7.79))
        shape16Path.addCurveToPoint(CGPoint(x: 16.67, y: 8.2), controlPoint1: CGPoint(x: 16.99, y: 7.82), controlPoint2: CGPoint(x: 16.67, y: 8.2))
        shape16Path.addCurveToPoint(CGPoint(x: 16.39, y: 8.23), controlPoint1: CGPoint(x: 16.6, y: 8.29), controlPoint2: CGPoint(x: 16.47, y: 8.3))
        shape16Path.addCurveToPoint(CGPoint(x: 16.36, y: 7.95), controlPoint1: CGPoint(x: 16.3, y: 8.16), controlPoint2: CGPoint(x: 16.28, y: 8.03))
        shape16Path.addCurveToPoint(CGPoint(x: 17.41, y: 7.39), controlPoint1: CGPoint(x: 16.37, y: 7.92), controlPoint2: CGPoint(x: 16.78, y: 7.43))
        shape16Path.addCurveToPoint(CGPoint(x: 18.59, y: 7.93), controlPoint1: CGPoint(x: 17.82, y: 7.37), controlPoint2: CGPoint(x: 18.22, y: 7.55))
        shape16Path.addCurveToPoint(CGPoint(x: 18.59, y: 8.22), controlPoint1: CGPoint(x: 18.67, y: 8.01), controlPoint2: CGPoint(x: 18.67, y: 8.13))
        shape16Path.addCurveToPoint(CGPoint(x: 18.45, y: 8.28), controlPoint1: CGPoint(x: 18.55, y: 8.26), controlPoint2: CGPoint(x: 18.5, y: 8.28))
        shape16Path.addLineToPoint(CGPoint(x: 18.45, y: 8.28))
        shape16Path.closePath()
        shape16Path.miterLimit = 4;

        shape16Path.usesEvenOddFillRule = true;

        fillColor4.setFill()
        shape16Path.fill()


        //// Shape 17 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 10.6, 14.55)
        CGContextRotateCTM(context, -30.05 * CGFloat(M_PI) / 180)

        let shape17Path = UIBezierPath(rect: CGRect(x: -3.93, y: -1.73, width: 7.85, height: 3.45))
        fillColor9.setFill()
        shape17Path.fill()

        CGContextRestoreGState(context)


        //// Shape 18 Drawing
        let shape18Path = UIBezierPath()
        shape18Path.moveToPoint(CGPoint(x: 24.02, y: 28.59))
        shape18Path.addLineToPoint(CGPoint(x: 10.95, y: 28.59))
        shape18Path.addLineToPoint(CGPoint(x: 10.21, y: 27.6))
        shape18Path.addLineToPoint(CGPoint(x: 24.74, y: 27.6))
        shape18Path.addLineToPoint(CGPoint(x: 24.02, y: 28.59))
        shape18Path.closePath()
        shape18Path.miterLimit = 4;

        shape18Path.usesEvenOddFillRule = true;

        fillColor7.setFill()
        shape18Path.fill()


        //// Rectangle-path Drawing
        let rectanglepathPath = UIBezierPath(rect: CGRect(x: 8.2, y: 19.39, width: 18.55, height: 9.67))
        fillColor9.setFill()
        rectanglepathPath.fill()


        //// Shape 19 Drawing
        let shape19Path = UIBezierPath()
        shape19Path.moveToPoint(CGPoint(x: 24.47, y: 29.74))
        shape19Path.addLineToPoint(CGPoint(x: 10.43, y: 29.74))
        shape19Path.addLineToPoint(CGPoint(x: 10.72, y: 29.06))
        shape19Path.addLineToPoint(CGPoint(x: 24.15, y: 29.06))
        shape19Path.addLineToPoint(CGPoint(x: 24.47, y: 29.74))
        shape19Path.closePath()
        shape19Path.miterLimit = 4;

        shape19Path.usesEvenOddFillRule = true;

        fillColor7.setFill()
        shape19Path.fill()
    }

    public class func drawGray5() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let fillColor = UIColor(red: 0.997, green: 0.849, blue: 0.775, alpha: 1.000)
        let fillColor3 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let fillColor4 = UIColor(red: 0.993, green: 0.655, blue: 0.569, alpha: 1.000)
        let fillColor6 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let fillColor8 = UIColor(red: 0.831, green: 0.835, blue: 0.835, alpha: 0.300)
        let fillColor9 = UIColor(red: 0.912, green: 0.912, blue: 0.912, alpha: 1.000)

        //// Page-1
        //// Group 옷장선택 3
        //// Group 5
        //// Shape Drawing
        let shapePath = UIBezierPath()
        shapePath.moveToPoint(CGPoint(x: 14.82, y: 11.65))
        shapePath.addCurveToPoint(CGPoint(x: 14.09, y: 13.55), controlPoint1: CGPoint(x: 15.17, y: 12.26), controlPoint2: CGPoint(x: 14.84, y: 13.12))
        shapePath.addLineToPoint(CGPoint(x: 2.3, y: 20.36))
        shapePath.addCurveToPoint(CGPoint(x: 0.29, y: 20.04), controlPoint1: CGPoint(x: 1.54, y: 20.8), controlPoint2: CGPoint(x: 0.64, y: 20.65))
        shapePath.addLineToPoint(CGPoint(x: 0.29, y: 20.04))
        shapePath.addCurveToPoint(CGPoint(x: 1.02, y: 18.14), controlPoint1: CGPoint(x: -0.06, y: 19.43), controlPoint2: CGPoint(x: 0.26, y: 18.58))
        shapePath.addLineToPoint(CGPoint(x: 12.8, y: 11.34))
        shapePath.addCurveToPoint(CGPoint(x: 14.82, y: 11.65), controlPoint1: CGPoint(x: 13.56, y: 10.9), controlPoint2: CGPoint(x: 14.46, y: 11.04))
        shapePath.addLineToPoint(CGPoint(x: 14.82, y: 11.65))
        shapePath.addLineToPoint(CGPoint(x: 14.82, y: 11.65))
        shapePath.closePath()
        shapePath.miterLimit = 4;

        shapePath.usesEvenOddFillRule = true;

        fillColor.setFill()
        shapePath.fill()


        //// Shape 2 Drawing
        let shape2Path = UIBezierPath()
        shape2Path.moveToPoint(CGPoint(x: 18.98, y: 11.65))
        shape2Path.addCurveToPoint(CGPoint(x: 19.71, y: 13.55), controlPoint1: CGPoint(x: 18.63, y: 12.26), controlPoint2: CGPoint(x: 18.96, y: 13.12))
        shape2Path.addLineToPoint(CGPoint(x: 31.5, y: 20.36))
        shape2Path.addCurveToPoint(CGPoint(x: 33.51, y: 20.04), controlPoint1: CGPoint(x: 32.26, y: 20.8), controlPoint2: CGPoint(x: 33.16, y: 20.65))
        shape2Path.addLineToPoint(CGPoint(x: 33.51, y: 20.04))
        shape2Path.addCurveToPoint(CGPoint(x: 32.78, y: 18.14), controlPoint1: CGPoint(x: 33.87, y: 19.43), controlPoint2: CGPoint(x: 33.54, y: 18.58))
        shape2Path.addLineToPoint(CGPoint(x: 21, y: 11.34))
        shape2Path.addCurveToPoint(CGPoint(x: 18.98, y: 11.65), controlPoint1: CGPoint(x: 20.24, y: 10.9), controlPoint2: CGPoint(x: 19.34, y: 11.04))
        shape2Path.addLineToPoint(CGPoint(x: 18.98, y: 11.65))
        shape2Path.addLineToPoint(CGPoint(x: 18.98, y: 11.65))
        shape2Path.closePath()
        shape2Path.miterLimit = 4;

        shape2Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape2Path.fill()


        //// Shape 3 Drawing
        let shape3Path = UIBezierPath()
        shape3Path.moveToPoint(CGPoint(x: 21.74, y: 4.33))
        shape3Path.addCurveToPoint(CGPoint(x: 21.67, y: 4.35), controlPoint1: CGPoint(x: 21.71, y: 4.33), controlPoint2: CGPoint(x: 21.69, y: 4.34))
        shape3Path.addCurveToPoint(CGPoint(x: 16.83, y: 0.13), controlPoint1: CGPoint(x: 21.32, y: 1.96), controlPoint2: CGPoint(x: 19.3, y: 0.13))
        shape3Path.addCurveToPoint(CGPoint(x: 11.98, y: 4.35), controlPoint1: CGPoint(x: 14.35, y: 0.13), controlPoint2: CGPoint(x: 12.32, y: 1.96))
        shape3Path.addCurveToPoint(CGPoint(x: 11.92, y: 4.33), controlPoint1: CGPoint(x: 11.96, y: 4.34), controlPoint2: CGPoint(x: 11.94, y: 4.33))
        shape3Path.addCurveToPoint(CGPoint(x: 11.21, y: 5.04), controlPoint1: CGPoint(x: 11.52, y: 4.33), controlPoint2: CGPoint(x: 11.21, y: 4.64))
        shape3Path.addCurveToPoint(CGPoint(x: 11.92, y: 5.74), controlPoint1: CGPoint(x: 11.21, y: 5.42), controlPoint2: CGPoint(x: 11.52, y: 5.74))
        shape3Path.addCurveToPoint(CGPoint(x: 11.98, y: 5.72), controlPoint1: CGPoint(x: 11.94, y: 5.74), controlPoint2: CGPoint(x: 11.96, y: 5.72))
        shape3Path.addCurveToPoint(CGPoint(x: 16.83, y: 9.94), controlPoint1: CGPoint(x: 12.32, y: 8.11), controlPoint2: CGPoint(x: 14.35, y: 9.94))
        shape3Path.addCurveToPoint(CGPoint(x: 21.67, y: 5.72), controlPoint1: CGPoint(x: 19.3, y: 9.94), controlPoint2: CGPoint(x: 21.33, y: 8.11))
        shape3Path.addCurveToPoint(CGPoint(x: 21.74, y: 5.74), controlPoint1: CGPoint(x: 21.69, y: 5.72), controlPoint2: CGPoint(x: 21.71, y: 5.74))
        shape3Path.addCurveToPoint(CGPoint(x: 22.44, y: 5.04), controlPoint1: CGPoint(x: 22.13, y: 5.74), controlPoint2: CGPoint(x: 22.44, y: 5.42))
        shape3Path.addCurveToPoint(CGPoint(x: 21.74, y: 4.33), controlPoint1: CGPoint(x: 22.44, y: 4.65), controlPoint2: CGPoint(x: 22.13, y: 4.33))
        shape3Path.addLineToPoint(CGPoint(x: 21.74, y: 4.33))
        shape3Path.closePath()
        shape3Path.miterLimit = 4;

        shape3Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape3Path.fill()


        //// Shape 4 Drawing
        let shape4Path = UIBezierPath(roundedRect: CGRect(x: 7.7, y: 9.93, width: 18.3, height: 21.35), cornerRadius: 9.15)
        fillColor.setFill()
        shape4Path.fill()


        //// Shape 5 Drawing
        let shape5Path = UIBezierPath()
        shape5Path.moveToPoint(CGPoint(x: 11.6, y: 36.23))
        shape5Path.addCurveToPoint(CGPoint(x: 16.83, y: 26.22), controlPoint1: CGPoint(x: 11.6, y: 30.7), controlPoint2: CGPoint(x: 13.94, y: 26.22))
        shape5Path.addCurveToPoint(CGPoint(x: 22.05, y: 36.23), controlPoint1: CGPoint(x: 19.71, y: 26.22), controlPoint2: CGPoint(x: 22.05, y: 30.7))
        shape5Path.addCurveToPoint(CGPoint(x: 21.24, y: 41.57), controlPoint1: CGPoint(x: 22.05, y: 38.2), controlPoint2: CGPoint(x: 21.75, y: 40.02))
        shape5Path.addLineToPoint(CGPoint(x: 23.59, y: 41.57))
        shape5Path.addCurveToPoint(CGPoint(x: 24.23, y: 36.23), controlPoint1: CGPoint(x: 24, y: 39.95), controlPoint2: CGPoint(x: 24.23, y: 38.14))
        shape5Path.addCurveToPoint(CGPoint(x: 16.83, y: 23.21), controlPoint1: CGPoint(x: 24.23, y: 28.92), controlPoint2: CGPoint(x: 20.98, y: 23.21))
        shape5Path.addCurveToPoint(CGPoint(x: 9.43, y: 36.23), controlPoint1: CGPoint(x: 12.68, y: 23.21), controlPoint2: CGPoint(x: 9.43, y: 28.92))
        shape5Path.addCurveToPoint(CGPoint(x: 10.06, y: 41.57), controlPoint1: CGPoint(x: 9.43, y: 38.14), controlPoint2: CGPoint(x: 9.66, y: 39.95))
        shape5Path.addLineToPoint(CGPoint(x: 12.42, y: 41.57))
        shape5Path.addCurveToPoint(CGPoint(x: 11.6, y: 36.23), controlPoint1: CGPoint(x: 11.9, y: 40.02), controlPoint2: CGPoint(x: 11.6, y: 38.19))
        shape5Path.addLineToPoint(CGPoint(x: 11.6, y: 36.23))
        shape5Path.closePath()
        shape5Path.miterLimit = 4;

        shape5Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape5Path.fill()


        //// Shape 6 Drawing
        let shape6Path = UIBezierPath()
        shape6Path.moveToPoint(CGPoint(x: 28.08, y: 15.21))
        shape6Path.addLineToPoint(CGPoint(x: 28.05, y: 15.19))
        shape6Path.addLineToPoint(CGPoint(x: 28.16, y: 15))
        shape6Path.addLineToPoint(CGPoint(x: 21.37, y: 11.08))
        shape6Path.addLineToPoint(CGPoint(x: 21.36, y: 11.1))
        shape6Path.addCurveToPoint(CGPoint(x: 19.59, y: 10.31), controlPoint1: CGPoint(x: 20.79, y: 10.77), controlPoint2: CGPoint(x: 20.2, y: 10.51))
        shape6Path.addLineToPoint(CGPoint(x: 19.51, y: 10.26))
        shape6Path.addLineToPoint(CGPoint(x: 19.5, y: 10.28))
        shape6Path.addCurveToPoint(CGPoint(x: 18.63, y: 10.01), controlPoint1: CGPoint(x: 19.21, y: 10.19), controlPoint2: CGPoint(x: 18.92, y: 10.07))
        shape6Path.addCurveToPoint(CGPoint(x: 16.82, y: 9.82), controlPoint1: CGPoint(x: 18.03, y: 9.88), controlPoint2: CGPoint(x: 17.42, y: 9.82))
        shape6Path.addCurveToPoint(CGPoint(x: 14.86, y: 10.05), controlPoint1: CGPoint(x: 16.18, y: 9.82), controlPoint2: CGPoint(x: 15.51, y: 9.89))
        shape6Path.addCurveToPoint(CGPoint(x: 12.35, y: 11.1), controlPoint1: CGPoint(x: 13.97, y: 10.25), controlPoint2: CGPoint(x: 13.14, y: 10.63))
        shape6Path.addLineToPoint(CGPoint(x: 12.34, y: 11.08))
        shape6Path.addLineToPoint(CGPoint(x: 5.55, y: 15))
        shape6Path.addLineToPoint(CGPoint(x: 7.26, y: 17.97))
        shape6Path.addLineToPoint(CGPoint(x: 7.86, y: 17.62))
        shape6Path.addCurveToPoint(CGPoint(x: 7.59, y: 18.95), controlPoint1: CGPoint(x: 7.75, y: 18.06), controlPoint2: CGPoint(x: 7.63, y: 18.49))
        shape6Path.addCurveToPoint(CGPoint(x: 7.55, y: 19.72), controlPoint1: CGPoint(x: 7.57, y: 19.21), controlPoint2: CGPoint(x: 7.55, y: 19.47))
        shape6Path.addLineToPoint(CGPoint(x: 7.55, y: 21.04))
        shape6Path.addLineToPoint(CGPoint(x: 26.09, y: 21.04))
        shape6Path.addLineToPoint(CGPoint(x: 26.09, y: 19.72))
        shape6Path.addCurveToPoint(CGPoint(x: 26.08, y: 19.3), controlPoint1: CGPoint(x: 26.09, y: 19.58), controlPoint2: CGPoint(x: 26.09, y: 19.44))
        shape6Path.addLineToPoint(CGPoint(x: 26.07, y: 19.14))
        shape6Path.addCurveToPoint(CGPoint(x: 25.8, y: 17.6), controlPoint1: CGPoint(x: 26.04, y: 18.61), controlPoint2: CGPoint(x: 25.92, y: 18.1))
        shape6Path.addLineToPoint(CGPoint(x: 26.45, y: 17.97))
        shape6Path.addLineToPoint(CGPoint(x: 26.59, y: 17.72))
        shape6Path.miterLimit = 4;

        shape6Path.usesEvenOddFillRule = true;

        fillColor9.setFill()
        shape6Path.fill()


        //// Shape 7 Drawing
        let shape7Path = UIBezierPath()
        shape7Path.moveToPoint(CGPoint(x: 18.05, y: 9.85))
        shape7Path.addCurveToPoint(CGPoint(x: 16.83, y: 11.62), controlPoint1: CGPoint(x: 18.05, y: 10.82), controlPoint2: CGPoint(x: 17.5, y: 11.62))
        shape7Path.addLineToPoint(CGPoint(x: 16.83, y: 11.62))
        shape7Path.addCurveToPoint(CGPoint(x: 15.6, y: 9.85), controlPoint1: CGPoint(x: 16.14, y: 11.62), controlPoint2: CGPoint(x: 15.6, y: 10.82))
        shape7Path.addLineToPoint(CGPoint(x: 15.6, y: 9.62))
        shape7Path.addCurveToPoint(CGPoint(x: 16.83, y: 7.84), controlPoint1: CGPoint(x: 15.6, y: 8.64), controlPoint2: CGPoint(x: 16.15, y: 7.84))
        shape7Path.addLineToPoint(CGPoint(x: 16.83, y: 7.84))
        shape7Path.addCurveToPoint(CGPoint(x: 18.05, y: 9.62), controlPoint1: CGPoint(x: 17.5, y: 7.84), controlPoint2: CGPoint(x: 18.05, y: 8.64))
        shape7Path.addLineToPoint(CGPoint(x: 18.05, y: 9.85))
        shape7Path.addLineToPoint(CGPoint(x: 18.05, y: 9.85))
        shape7Path.closePath()
        shape7Path.miterLimit = 4;

        shape7Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape7Path.fill()


        //// Shape 8 Drawing
        let shape8Path = UIBezierPath()
        shape8Path.moveToPoint(CGPoint(x: 27.96, y: 41.85))
        shape8Path.addCurveToPoint(CGPoint(x: 26.26, y: 43.55), controlPoint1: CGPoint(x: 27.96, y: 42.79), controlPoint2: CGPoint(x: 27.2, y: 43.55))
        shape8Path.addLineToPoint(CGPoint(x: 22.93, y: 43.55))
        shape8Path.addCurveToPoint(CGPoint(x: 21.23, y: 41.85), controlPoint1: CGPoint(x: 21.99, y: 43.55), controlPoint2: CGPoint(x: 21.23, y: 42.79))
        shape8Path.addLineToPoint(CGPoint(x: 21.23, y: 41.85))
        shape8Path.addCurveToPoint(CGPoint(x: 22.93, y: 40.14), controlPoint1: CGPoint(x: 21.23, y: 40.91), controlPoint2: CGPoint(x: 21.99, y: 40.14))
        shape8Path.addLineToPoint(CGPoint(x: 26.26, y: 40.14))
        shape8Path.addCurveToPoint(CGPoint(x: 27.96, y: 41.85), controlPoint1: CGPoint(x: 27.2, y: 40.14), controlPoint2: CGPoint(x: 27.96, y: 40.91))
        shape8Path.addLineToPoint(CGPoint(x: 27.96, y: 41.85))
        shape8Path.addLineToPoint(CGPoint(x: 27.96, y: 41.85))
        shape8Path.closePath()
        shape8Path.miterLimit = 4;

        shape8Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape8Path.fill()


        //// Shape 9 Drawing
        let shape9Path = UIBezierPath(roundedRect: CGRect(x: 5.68, y: 40.15, width: 6.75, height: 3.4), cornerRadius: 1.7)
        fillColor.setFill()
        shape9Path.fill()


        //// Shape 10 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 18.65, 4.25)
        CGContextRotateCTM(context, 7.85 * CGFloat(M_PI) / 180)

        let shape10Path = UIBezierPath(ovalInRect: CGRect(x: -0.5, y: -0.5, width: 1, height: 1))
        fillColor3.setFill()
        shape10Path.fill()

        CGContextRestoreGState(context)


        //// Oval 3 Drawing
        let oval3Path = UIBezierPath(ovalInRect: CGRect(x: 14.5, y: 3.88, width: 1, height: 1))
        fillColor3.setFill()
        oval3Path.fill()


        //// Shape 11 Drawing
        let shape11Path = UIBezierPath(roundedRect: CGRect(x: 15.58, y: 7.95, width: 2.45, height: 3.6), cornerRadius: 1.2)
        fillColor.setFill()
        shape11Path.fill()


        //// Shape 12 Drawing
        let shape12Path = UIBezierPath()
        shape12Path.moveToPoint(CGPoint(x: 25.65, y: 24.52))
        shape12Path.addLineToPoint(CGPoint(x: 8, y: 24.52))
        shape12Path.addCurveToPoint(CGPoint(x: 8, y: 24.54), controlPoint1: CGPoint(x: 8, y: 24.53), controlPoint2: CGPoint(x: 8, y: 24.53))
        shape12Path.addCurveToPoint(CGPoint(x: 10.3, y: 28.51), controlPoint1: CGPoint(x: 8.46, y: 26.06), controlPoint2: CGPoint(x: 9.26, y: 27.41))
        shape12Path.addLineToPoint(CGPoint(x: 9.43, y: 30.61))
        shape12Path.addLineToPoint(CGPoint(x: 12.39, y: 31.84))
        shape12Path.addLineToPoint(CGPoint(x: 12.97, y: 30.47))
        shape12Path.addCurveToPoint(CGPoint(x: 16.83, y: 31.41), controlPoint1: CGPoint(x: 14.14, y: 31.06), controlPoint2: CGPoint(x: 15.45, y: 31.41))
        shape12Path.addCurveToPoint(CGPoint(x: 20.68, y: 30.48), controlPoint1: CGPoint(x: 18.2, y: 31.41), controlPoint2: CGPoint(x: 19.5, y: 31.06))
        shape12Path.addLineToPoint(CGPoint(x: 21.24, y: 31.84))
        shape12Path.addLineToPoint(CGPoint(x: 24.21, y: 30.61))
        shape12Path.addLineToPoint(CGPoint(x: 23.35, y: 28.52))
        shape12Path.addCurveToPoint(CGPoint(x: 25.65, y: 24.52), controlPoint1: CGPoint(x: 24.39, y: 27.41), controlPoint2: CGPoint(x: 25.19, y: 26.05))
        shape12Path.addLineToPoint(CGPoint(x: 25.65, y: 24.52))
        shape12Path.closePath()
        shape12Path.miterLimit = 4;

        shape12Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape12Path.fill()


        //// Shape 13 Drawing
        let shape13Path = UIBezierPath()
        shape13Path.moveToPoint(CGPoint(x: 7.84, y: 23.81))
        shape13Path.addCurveToPoint(CGPoint(x: 8, y: 24.53), controlPoint1: CGPoint(x: 7.89, y: 24.05), controlPoint2: CGPoint(x: 7.93, y: 24.29))
        shape13Path.addLineToPoint(CGPoint(x: 25.65, y: 24.53))
        shape13Path.addCurveToPoint(CGPoint(x: 25.83, y: 23.81), controlPoint1: CGPoint(x: 25.72, y: 24.29), controlPoint2: CGPoint(x: 25.78, y: 24.05))
        shape13Path.addLineToPoint(CGPoint(x: 7.84, y: 23.81))
        shape13Path.addLineToPoint(CGPoint(x: 7.84, y: 23.81))
        shape13Path.closePath()
        shape13Path.miterLimit = 4;

        shape13Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape13Path.fill()


        //// Shape 14 Drawing
        let shape14Path = UIBezierPath()
        shape14Path.moveToPoint(CGPoint(x: 7.84, y: 23.81))
        shape14Path.addLineToPoint(CGPoint(x: 25.83, y: 23.81))
        shape14Path.addCurveToPoint(CGPoint(x: 26.1, y: 21.5), controlPoint1: CGPoint(x: 26, y: 23.07), controlPoint2: CGPoint(x: 26.1, y: 22.3))
        shape14Path.addLineToPoint(CGPoint(x: 26.1, y: 21.05))
        shape14Path.addLineToPoint(CGPoint(x: 7.56, y: 21.05))
        shape14Path.addLineToPoint(CGPoint(x: 7.56, y: 21.5))
        shape14Path.addCurveToPoint(CGPoint(x: 7.84, y: 23.81), controlPoint1: CGPoint(x: 7.56, y: 22.3), controlPoint2: CGPoint(x: 7.67, y: 23.06))
        shape14Path.addLineToPoint(CGPoint(x: 7.84, y: 23.81))
        shape14Path.closePath()
        shape14Path.miterLimit = 4;

        shape14Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape14Path.fill()


        //// Shape 15 Drawing
        let shape15Path = UIBezierPath()
        shape15Path.moveToPoint(CGPoint(x: 33.16, y: 17.59))
        shape15Path.addCurveToPoint(CGPoint(x: 32.97, y: 18.07), controlPoint1: CGPoint(x: 33.23, y: 17.77), controlPoint2: CGPoint(x: 33.15, y: 17.99))
        shape15Path.addLineToPoint(CGPoint(x: 31.81, y: 18.57))
        shape15Path.addCurveToPoint(CGPoint(x: 31.33, y: 18.38), controlPoint1: CGPoint(x: 31.62, y: 18.65), controlPoint2: CGPoint(x: 31.41, y: 18.57))
        shape15Path.addLineToPoint(CGPoint(x: 31.33, y: 18.38))
        shape15Path.addCurveToPoint(CGPoint(x: 31.52, y: 17.9), controlPoint1: CGPoint(x: 31.25, y: 18.19), controlPoint2: CGPoint(x: 31.33, y: 17.98))
        shape15Path.addLineToPoint(CGPoint(x: 32.68, y: 17.4))
        shape15Path.addCurveToPoint(CGPoint(x: 33.16, y: 17.59), controlPoint1: CGPoint(x: 32.86, y: 17.32), controlPoint2: CGPoint(x: 33.08, y: 17.4))
        shape15Path.addLineToPoint(CGPoint(x: 33.16, y: 17.59))
        shape15Path.addLineToPoint(CGPoint(x: 33.16, y: 17.59))
        shape15Path.closePath()
        shape15Path.miterLimit = 4;

        shape15Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape15Path.fill()


        //// Shape 16 Drawing
        let shape16Path = UIBezierPath()
        shape16Path.moveToPoint(CGPoint(x: 0.71, y: 17.59))
        shape16Path.addCurveToPoint(CGPoint(x: 0.89, y: 18.07), controlPoint1: CGPoint(x: 0.62, y: 17.77), controlPoint2: CGPoint(x: 0.71, y: 17.99))
        shape16Path.addLineToPoint(CGPoint(x: 2.05, y: 18.57))
        shape16Path.addCurveToPoint(CGPoint(x: 2.53, y: 18.38), controlPoint1: CGPoint(x: 2.23, y: 18.65), controlPoint2: CGPoint(x: 2.45, y: 18.57))
        shape16Path.addLineToPoint(CGPoint(x: 2.53, y: 18.38))
        shape16Path.addCurveToPoint(CGPoint(x: 2.34, y: 17.9), controlPoint1: CGPoint(x: 2.61, y: 18.19), controlPoint2: CGPoint(x: 2.52, y: 17.98))
        shape16Path.addLineToPoint(CGPoint(x: 1.18, y: 17.4))
        shape16Path.addCurveToPoint(CGPoint(x: 0.71, y: 17.59), controlPoint1: CGPoint(x: 1, y: 17.32), controlPoint2: CGPoint(x: 0.78, y: 17.4))
        shape16Path.addLineToPoint(CGPoint(x: 0.71, y: 17.59))
        shape16Path.addLineToPoint(CGPoint(x: 0.71, y: 17.59))
        shape16Path.closePath()
        shape16Path.miterLimit = 4;

        shape16Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape16Path.fill()


        //// Shape 17 Drawing
        let shape17Path = UIBezierPath()
        shape17Path.moveToPoint(CGPoint(x: 17.8, y: 8.28))
        shape17Path.addCurveToPoint(CGPoint(x: 17.66, y: 8.22), controlPoint1: CGPoint(x: 17.75, y: 8.28), controlPoint2: CGPoint(x: 17.69, y: 8.27))
        shape17Path.addCurveToPoint(CGPoint(x: 16.78, y: 7.8), controlPoint1: CGPoint(x: 17.36, y: 7.93), controlPoint2: CGPoint(x: 17.07, y: 7.79))
        shape17Path.addCurveToPoint(CGPoint(x: 16.02, y: 8.2), controlPoint1: CGPoint(x: 16.33, y: 7.83), controlPoint2: CGPoint(x: 16.02, y: 8.2))
        shape17Path.addCurveToPoint(CGPoint(x: 15.73, y: 8.23), controlPoint1: CGPoint(x: 15.95, y: 8.29), controlPoint2: CGPoint(x: 15.82, y: 8.3))
        shape17Path.addCurveToPoint(CGPoint(x: 15.71, y: 7.95), controlPoint1: CGPoint(x: 15.64, y: 8.16), controlPoint2: CGPoint(x: 15.63, y: 8.04))
        shape17Path.addCurveToPoint(CGPoint(x: 16.75, y: 7.4), controlPoint1: CGPoint(x: 15.72, y: 7.93), controlPoint2: CGPoint(x: 16.13, y: 7.43))
        shape17Path.addCurveToPoint(CGPoint(x: 17.94, y: 7.93), controlPoint1: CGPoint(x: 17.17, y: 7.38), controlPoint2: CGPoint(x: 17.57, y: 7.55))
        shape17Path.addCurveToPoint(CGPoint(x: 17.94, y: 8.22), controlPoint1: CGPoint(x: 18.02, y: 8.01), controlPoint2: CGPoint(x: 18.02, y: 8.14))
        shape17Path.addCurveToPoint(CGPoint(x: 17.8, y: 8.28), controlPoint1: CGPoint(x: 17.9, y: 8.27), controlPoint2: CGPoint(x: 17.85, y: 8.28))
        shape17Path.addLineToPoint(CGPoint(x: 17.8, y: 8.28))
        shape17Path.closePath()
        shape17Path.miterLimit = 4;

        shape17Path.usesEvenOddFillRule = true;

        fillColor4.setFill()
        shape17Path.fill()


        //// Rectangle-path Drawing
        let rectanglepathPath = UIBezierPath(rect: CGRect(x: 8, y: 25.11, width: 17.65, height: 1.75))
        fillColor8.setFill()
        rectanglepathPath.fill()


        //// Rectangle-path 2 Drawing
        let rectanglepath2Path = UIBezierPath(rect: CGRect(x: 7.56, y: 20.61, width: 18.54, height: 14.74))
        fillColor9.setFill()
        rectanglepath2Path.fill()
    }

    public class func drawBlue1() {
        //// Color Declarations
        let fillColor = UIColor(red: 0.997, green: 0.849, blue: 0.775, alpha: 1.000)
        let fillColor2 = UIColor(red: 0.411, green: 0.686, blue: 0.839, alpha: 1.000)
        let fillColor3 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let fillColor4 = UIColor(red: 0.993, green: 0.655, blue: 0.569, alpha: 1.000)

        //// Page-1
        //// Group 옷장선택 3
        //// Group 5
        //// Shape Drawing
        let shapePath = UIBezierPath()
        shapePath.moveToPoint(CGPoint(x: 18.02, y: 14.07))
        shapePath.addCurveToPoint(CGPoint(x: 15.62, y: 13.69), controlPoint1: CGPoint(x: 17.59, y: 13.33), controlPoint2: CGPoint(x: 16.52, y: 13.16))
        shapePath.addLineToPoint(CGPoint(x: 2.52, y: 21.24))
        shapePath.addLineToPoint(CGPoint(x: 1.76, y: 20.91))
        shapePath.addCurveToPoint(CGPoint(x: 1.19, y: 21.14), controlPoint1: CGPoint(x: 1.54, y: 20.82), controlPoint2: CGPoint(x: 1.29, y: 20.92))
        shapePath.addCurveToPoint(CGPoint(x: 1.42, y: 21.71), controlPoint1: CGPoint(x: 1.1, y: 21.36), controlPoint2: CGPoint(x: 1.19, y: 21.62))
        shapePath.addLineToPoint(CGPoint(x: 1.59, y: 21.78))
        shapePath.addLineToPoint(CGPoint(x: 1.57, y: 21.8))
        shapePath.addCurveToPoint(CGPoint(x: 0.69, y: 24.07), controlPoint1: CGPoint(x: 0.67, y: 22.32), controlPoint2: CGPoint(x: 0.27, y: 23.34))
        shapePath.addCurveToPoint(CGPoint(x: 3.09, y: 24.45), controlPoint1: CGPoint(x: 1.12, y: 24.8), controlPoint2: CGPoint(x: 2.19, y: 24.96))
        shapePath.addLineToPoint(CGPoint(x: 17.15, y: 16.33))
        shapePath.addCurveToPoint(CGPoint(x: 18.02, y: 14.07), controlPoint1: CGPoint(x: 18.05, y: 15.81), controlPoint2: CGPoint(x: 18.44, y: 14.79))
        shapePath.addLineToPoint(CGPoint(x: 18.02, y: 14.07))
        shapePath.closePath()
        shapePath.miterLimit = 4;

        shapePath.usesEvenOddFillRule = true;

        fillColor.setFill()
        shapePath.fill()


        //// Shape 2 Drawing
        let shape2Path = UIBezierPath()
        shape2Path.moveToPoint(CGPoint(x: 39.51, y: 21.85))
        shape2Path.addLineToPoint(CGPoint(x: 39.83, y: 21.7))
        shape2Path.addCurveToPoint(CGPoint(x: 40.05, y: 21.16), controlPoint1: CGPoint(x: 40.04, y: 21.62), controlPoint2: CGPoint(x: 40.14, y: 21.37))
        shape2Path.addCurveToPoint(CGPoint(x: 39.51, y: 20.95), controlPoint1: CGPoint(x: 39.96, y: 20.95), controlPoint2: CGPoint(x: 39.71, y: 20.86))
        shape2Path.addLineToPoint(CGPoint(x: 38.62, y: 21.33))
        shape2Path.addLineToPoint(CGPoint(x: 25.38, y: 13.69))
        shape2Path.addCurveToPoint(CGPoint(x: 22.98, y: 14.07), controlPoint1: CGPoint(x: 24.48, y: 13.16), controlPoint2: CGPoint(x: 23.4, y: 13.33))
        shape2Path.addCurveToPoint(CGPoint(x: 23.85, y: 16.33), controlPoint1: CGPoint(x: 22.56, y: 14.79), controlPoint2: CGPoint(x: 22.95, y: 15.81))
        shape2Path.addLineToPoint(CGPoint(x: 37.91, y: 24.45))
        shape2Path.addCurveToPoint(CGPoint(x: 40.3, y: 24.06), controlPoint1: CGPoint(x: 38.81, y: 24.96), controlPoint2: CGPoint(x: 39.88, y: 24.8))
        shape2Path.addCurveToPoint(CGPoint(x: 39.51, y: 21.85), controlPoint1: CGPoint(x: 40.71, y: 23.36), controlPoint2: CGPoint(x: 40.35, y: 22.38))
        shape2Path.addLineToPoint(CGPoint(x: 39.51, y: 21.85))
        shape2Path.closePath()
        shape2Path.miterLimit = 4;

        shape2Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape2Path.fill()


        //// Shape 3 Drawing
        let shape3Path = UIBezierPath()
        shape3Path.moveToPoint(CGPoint(x: 31.31, y: 23.69))
        shape3Path.addCurveToPoint(CGPoint(x: 20.41, y: 12.03), controlPoint1: CGPoint(x: 31.31, y: 17.25), controlPoint2: CGPoint(x: 26.43, y: 12.03))
        shape3Path.addCurveToPoint(CGPoint(x: 9.51, y: 23.69), controlPoint1: CGPoint(x: 14.39, y: 12.03), controlPoint2: CGPoint(x: 9.51, y: 17.25))
        shape3Path.addLineToPoint(CGPoint(x: 9.51, y: 25.8))
        shape3Path.addCurveToPoint(CGPoint(x: 20.41, y: 37.46), controlPoint1: CGPoint(x: 9.51, y: 32.24), controlPoint2: CGPoint(x: 14.39, y: 37.46))
        shape3Path.addCurveToPoint(CGPoint(x: 31.31, y: 25.8), controlPoint1: CGPoint(x: 26.43, y: 37.46), controlPoint2: CGPoint(x: 31.31, y: 32.24))
        shape3Path.addLineToPoint(CGPoint(x: 31.31, y: 25.8))
        shape3Path.addLineToPoint(CGPoint(x: 31.31, y: 23.69))
        shape3Path.addLineToPoint(CGPoint(x: 31.31, y: 23.69))
        shape3Path.closePath()
        shape3Path.miterLimit = 4;

        shape3Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape3Path.fill()


        //// Shape 4 Drawing
        let shape4Path = UIBezierPath()
        shape4Path.moveToPoint(CGPoint(x: 31.66, y: 48.03))
        shape4Path.addLineToPoint(CGPoint(x: 28.79, y: 48.03))
        shape4Path.addCurveToPoint(CGPoint(x: 29.23, y: 43.36), controlPoint1: CGPoint(x: 29.05, y: 46.55), controlPoint2: CGPoint(x: 29.23, y: 45.01))
        shape4Path.addCurveToPoint(CGPoint(x: 20.41, y: 27.84), controlPoint1: CGPoint(x: 29.23, y: 34.65), controlPoint2: CGPoint(x: 25.36, y: 27.84))
        shape4Path.addCurveToPoint(CGPoint(x: 11.59, y: 43.36), controlPoint1: CGPoint(x: 15.46, y: 27.84), controlPoint2: CGPoint(x: 11.59, y: 34.65))
        shape4Path.addCurveToPoint(CGPoint(x: 12.04, y: 48.03), controlPoint1: CGPoint(x: 11.59, y: 45.01), controlPoint2: CGPoint(x: 11.78, y: 46.55))
        shape4Path.addLineToPoint(CGPoint(x: 9.18, y: 48.03))
        shape4Path.addCurveToPoint(CGPoint(x: 7.15, y: 50.06), controlPoint1: CGPoint(x: 8.05, y: 48.03), controlPoint2: CGPoint(x: 7.15, y: 48.94))
        shape4Path.addCurveToPoint(CGPoint(x: 9.18, y: 52.09), controlPoint1: CGPoint(x: 7.15, y: 51.18), controlPoint2: CGPoint(x: 8.05, y: 52.09))
        shape4Path.addLineToPoint(CGPoint(x: 13.14, y: 52.09))
        shape4Path.addCurveToPoint(CGPoint(x: 15.17, y: 50.06), controlPoint1: CGPoint(x: 14.26, y: 52.09), controlPoint2: CGPoint(x: 15.17, y: 51.18))
        shape4Path.addCurveToPoint(CGPoint(x: 15.11, y: 49.72), controlPoint1: CGPoint(x: 15.17, y: 49.94), controlPoint2: CGPoint(x: 15.12, y: 49.84))
        shape4Path.addLineToPoint(CGPoint(x: 15.16, y: 49.72))
        shape4Path.addCurveToPoint(CGPoint(x: 14.19, y: 43.36), controlPoint1: CGPoint(x: 14.55, y: 47.88), controlPoint2: CGPoint(x: 14.19, y: 45.71))
        shape4Path.addCurveToPoint(CGPoint(x: 20.41, y: 31.43), controlPoint1: CGPoint(x: 14.19, y: 36.77), controlPoint2: CGPoint(x: 16.98, y: 31.43))
        shape4Path.addCurveToPoint(CGPoint(x: 26.64, y: 43.36), controlPoint1: CGPoint(x: 23.85, y: 31.43), controlPoint2: CGPoint(x: 26.64, y: 36.77))
        shape4Path.addCurveToPoint(CGPoint(x: 25.66, y: 49.72), controlPoint1: CGPoint(x: 26.64, y: 45.71), controlPoint2: CGPoint(x: 26.27, y: 47.88))
        shape4Path.addLineToPoint(CGPoint(x: 25.73, y: 49.72))
        shape4Path.addCurveToPoint(CGPoint(x: 25.66, y: 50.06), controlPoint1: CGPoint(x: 25.71, y: 49.84), controlPoint2: CGPoint(x: 25.66, y: 49.94))
        shape4Path.addCurveToPoint(CGPoint(x: 27.7, y: 52.09), controlPoint1: CGPoint(x: 25.66, y: 51.18), controlPoint2: CGPoint(x: 26.57, y: 52.09))
        shape4Path.addLineToPoint(CGPoint(x: 31.66, y: 52.09))
        shape4Path.addCurveToPoint(CGPoint(x: 33.69, y: 50.06), controlPoint1: CGPoint(x: 32.78, y: 52.09), controlPoint2: CGPoint(x: 33.69, y: 51.18))
        shape4Path.addCurveToPoint(CGPoint(x: 31.66, y: 48.03), controlPoint1: CGPoint(x: 33.69, y: 48.94), controlPoint2: CGPoint(x: 32.77, y: 48.03))
        shape4Path.addLineToPoint(CGPoint(x: 31.66, y: 48.03))
        shape4Path.closePath()
        shape4Path.miterLimit = 4;

        shape4Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape4Path.fill()


        //// Shape 5 Drawing
        let shape5Path = UIBezierPath()
        shape5Path.moveToPoint(CGPoint(x: 33.83, y: 18.31))
        shape5Path.addLineToPoint(CGPoint(x: 27.23, y: 14.5))
        shape5Path.addCurveToPoint(CGPoint(x: 26.01, y: 13.52), controlPoint1: CGPoint(x: 26.83, y: 14.16), controlPoint2: CGPoint(x: 26.46, y: 13.79))
        shape5Path.addCurveToPoint(CGPoint(x: 23.7, y: 12.46), controlPoint1: CGPoint(x: 25.27, y: 13.06), controlPoint2: CGPoint(x: 24.5, y: 12.72))
        shape5Path.addLineToPoint(CGPoint(x: 23.61, y: 12.4))
        shape5Path.addLineToPoint(CGPoint(x: 23.59, y: 12.43))
        shape5Path.addCurveToPoint(CGPoint(x: 22.55, y: 12.11), controlPoint1: CGPoint(x: 23.25, y: 12.32), controlPoint2: CGPoint(x: 22.91, y: 12.18))
        shape5Path.addCurveToPoint(CGPoint(x: 20.41, y: 11.88), controlPoint1: CGPoint(x: 21.84, y: 11.96), controlPoint2: CGPoint(x: 21.12, y: 11.88))
        shape5Path.addCurveToPoint(CGPoint(x: 18.07, y: 12.15), controlPoint1: CGPoint(x: 19.64, y: 11.88), controlPoint2: CGPoint(x: 18.85, y: 11.97))
        shape5Path.addCurveToPoint(CGPoint(x: 14.17, y: 13.95), controlPoint1: CGPoint(x: 16.67, y: 12.47), controlPoint2: CGPoint(x: 15.35, y: 13.07))
        shape5Path.addCurveToPoint(CGPoint(x: 13.23, y: 14.88), controlPoint1: CGPoint(x: 13.82, y: 14.2), controlPoint2: CGPoint(x: 13.56, y: 14.58))
        shape5Path.addLineToPoint(CGPoint(x: 7.31, y: 18.31))
        shape5Path.addLineToPoint(CGPoint(x: 9.05, y: 21.32))
        shape5Path.addLineToPoint(CGPoint(x: 9.81, y: 20.88))
        shape5Path.addCurveToPoint(CGPoint(x: 9.4, y: 22.77), controlPoint1: CGPoint(x: 9.66, y: 21.51), controlPoint2: CGPoint(x: 9.45, y: 22.11))
        shape5Path.addCurveToPoint(CGPoint(x: 9.36, y: 23.69), controlPoint1: CGPoint(x: 9.38, y: 23.07), controlPoint2: CGPoint(x: 9.36, y: 23.38))
        shape5Path.addLineToPoint(CGPoint(x: 9.36, y: 25.26))
        shape5Path.addLineToPoint(CGPoint(x: 31.46, y: 25.26))
        shape5Path.addLineToPoint(CGPoint(x: 31.46, y: 23.69))
        shape5Path.addCurveToPoint(CGPoint(x: 31.44, y: 23.18), controlPoint1: CGPoint(x: 31.46, y: 23.52), controlPoint2: CGPoint(x: 31.45, y: 23.34))
        shape5Path.addLineToPoint(CGPoint(x: 31.43, y: 22.99))
        shape5Path.addCurveToPoint(CGPoint(x: 31.01, y: 20.7), controlPoint1: CGPoint(x: 31.38, y: 22.21), controlPoint2: CGPoint(x: 31.2, y: 21.45))
        shape5Path.addLineToPoint(CGPoint(x: 32.08, y: 21.32))
        shape5Path.addLineToPoint(CGPoint(x: 33.83, y: 18.31))
        shape5Path.addLineToPoint(CGPoint(x: 33.83, y: 18.31))
        shape5Path.closePath()
        shape5Path.miterLimit = 4;

        shape5Path.usesEvenOddFillRule = true;

        fillColor2.setFill()
        shape5Path.fill()


        //// Shape 6 Drawing
        let shape6Path = UIBezierPath()
        shape6Path.moveToPoint(CGPoint(x: 30.93, y: 29.41))
        shape6Path.addLineToPoint(CGPoint(x: 9.89, y: 29.41))
        shape6Path.addCurveToPoint(CGPoint(x: 9.89, y: 29.43), controlPoint1: CGPoint(x: 9.89, y: 29.42), controlPoint2: CGPoint(x: 9.89, y: 29.42))
        shape6Path.addCurveToPoint(CGPoint(x: 12.62, y: 34.16), controlPoint1: CGPoint(x: 10.44, y: 31.24), controlPoint2: CGPoint(x: 11.39, y: 32.86))
        shape6Path.addLineToPoint(CGPoint(x: 11.59, y: 36.66))
        shape6Path.addLineToPoint(CGPoint(x: 15.13, y: 38.13))
        shape6Path.addLineToPoint(CGPoint(x: 15.81, y: 36.5))
        shape6Path.addCurveToPoint(CGPoint(x: 20.41, y: 37.61), controlPoint1: CGPoint(x: 17.21, y: 37.2), controlPoint2: CGPoint(x: 18.77, y: 37.61))
        shape6Path.addCurveToPoint(CGPoint(x: 25, y: 36.51), controlPoint1: CGPoint(x: 22.05, y: 37.61), controlPoint2: CGPoint(x: 23.6, y: 37.2))
        shape6Path.addLineToPoint(CGPoint(x: 25.67, y: 38.13))
        shape6Path.addLineToPoint(CGPoint(x: 29.22, y: 36.66))
        shape6Path.addLineToPoint(CGPoint(x: 28.18, y: 34.18))
        shape6Path.addCurveToPoint(CGPoint(x: 30.93, y: 29.41), controlPoint1: CGPoint(x: 29.43, y: 32.85), controlPoint2: CGPoint(x: 30.38, y: 31.23))
        shape6Path.addLineToPoint(CGPoint(x: 30.93, y: 29.41))
        shape6Path.closePath()
        shape6Path.miterLimit = 4;

        shape6Path.usesEvenOddFillRule = true;

        fillColor2.setFill()
        shape6Path.fill()


        //// Shape 7 Drawing
        let shape7Path = UIBezierPath()
        shape7Path.moveToPoint(CGPoint(x: 9.36, y: 25.26))
        shape7Path.addLineToPoint(CGPoint(x: 9.36, y: 25.8))
        shape7Path.addCurveToPoint(CGPoint(x: 9.7, y: 28.56), controlPoint1: CGPoint(x: 9.36, y: 26.76), controlPoint2: CGPoint(x: 9.5, y: 27.67))
        shape7Path.addCurveToPoint(CGPoint(x: 9.89, y: 29.41), controlPoint1: CGPoint(x: 9.76, y: 28.84), controlPoint2: CGPoint(x: 9.8, y: 29.13))
        shape7Path.addLineToPoint(CGPoint(x: 30.93, y: 29.41))
        shape7Path.addCurveToPoint(CGPoint(x: 31.15, y: 28.56), controlPoint1: CGPoint(x: 31.01, y: 29.13), controlPoint2: CGPoint(x: 31.08, y: 28.84))
        shape7Path.addCurveToPoint(CGPoint(x: 31.46, y: 25.8), controlPoint1: CGPoint(x: 31.35, y: 27.67), controlPoint2: CGPoint(x: 31.46, y: 26.75))
        shape7Path.addLineToPoint(CGPoint(x: 31.46, y: 25.26))
        shape7Path.addLineToPoint(CGPoint(x: 9.36, y: 25.26))
        shape7Path.addLineToPoint(CGPoint(x: 9.36, y: 25.26))
        shape7Path.closePath()
        shape7Path.miterLimit = 4;

        shape7Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape7Path.fill()


        //// Shape 8 Drawing
        let shape8Path = UIBezierPath()
        shape8Path.moveToPoint(CGPoint(x: 21.28, y: 26.47))
        shape8Path.addCurveToPoint(CGPoint(x: 20.92, y: 26.47), controlPoint1: CGPoint(x: 21.18, y: 26.37), controlPoint2: CGPoint(x: 21.01, y: 26.37))
        shape8Path.addLineToPoint(CGPoint(x: 20.41, y: 26.97))
        shape8Path.addLineToPoint(CGPoint(x: 19.91, y: 26.47))
        shape8Path.addCurveToPoint(CGPoint(x: 19.55, y: 26.47), controlPoint1: CGPoint(x: 19.81, y: 26.37), controlPoint2: CGPoint(x: 19.64, y: 26.37))
        shape8Path.addCurveToPoint(CGPoint(x: 19.55, y: 26.83), controlPoint1: CGPoint(x: 19.45, y: 26.56), controlPoint2: CGPoint(x: 19.45, y: 26.73))
        shape8Path.addLineToPoint(CGPoint(x: 20.05, y: 27.34))
        shape8Path.addLineToPoint(CGPoint(x: 19.55, y: 27.84))
        shape8Path.addCurveToPoint(CGPoint(x: 19.55, y: 28.2), controlPoint1: CGPoint(x: 19.45, y: 27.94), controlPoint2: CGPoint(x: 19.45, y: 28.1))
        shape8Path.addCurveToPoint(CGPoint(x: 19.91, y: 28.2), controlPoint1: CGPoint(x: 19.64, y: 28.3), controlPoint2: CGPoint(x: 19.81, y: 28.3))
        shape8Path.addLineToPoint(CGPoint(x: 20.41, y: 27.69))
        shape8Path.addLineToPoint(CGPoint(x: 20.92, y: 28.2))
        shape8Path.addCurveToPoint(CGPoint(x: 21.28, y: 28.2), controlPoint1: CGPoint(x: 21.01, y: 28.3), controlPoint2: CGPoint(x: 21.18, y: 28.3))
        shape8Path.addCurveToPoint(CGPoint(x: 21.28, y: 27.84), controlPoint1: CGPoint(x: 21.37, y: 28.1), controlPoint2: CGPoint(x: 21.37, y: 27.94))
        shape8Path.addLineToPoint(CGPoint(x: 20.77, y: 27.34))
        shape8Path.addLineToPoint(CGPoint(x: 21.28, y: 26.83))
        shape8Path.addCurveToPoint(CGPoint(x: 21.28, y: 26.47), controlPoint1: CGPoint(x: 21.37, y: 26.73), controlPoint2: CGPoint(x: 21.37, y: 26.56))
        shape8Path.addLineToPoint(CGPoint(x: 21.28, y: 26.47))
        shape8Path.closePath()
        shape8Path.miterLimit = 4;

        shape8Path.usesEvenOddFillRule = true;

        fillColor4.setFill()
        shape8Path.fill()


        //// Shape 9 Drawing
        let shape9Path = UIBezierPath()
        shape9Path.moveToPoint(CGPoint(x: 26.27, y: 5.33))
        shape9Path.addCurveToPoint(CGPoint(x: 26.18, y: 5.35), controlPoint1: CGPoint(x: 26.24, y: 5.33), controlPoint2: CGPoint(x: 26.21, y: 5.35))
        shape9Path.addCurveToPoint(CGPoint(x: 20.41, y: 0.32), controlPoint1: CGPoint(x: 25.78, y: 2.51), controlPoint2: CGPoint(x: 23.36, y: 0.32))
        shape9Path.addCurveToPoint(CGPoint(x: 14.64, y: 5.35), controlPoint1: CGPoint(x: 17.46, y: 0.32), controlPoint2: CGPoint(x: 15.04, y: 2.51))
        shape9Path.addCurveToPoint(CGPoint(x: 14.56, y: 5.33), controlPoint1: CGPoint(x: 14.62, y: 5.35), controlPoint2: CGPoint(x: 14.58, y: 5.33))
        shape9Path.addCurveToPoint(CGPoint(x: 13.72, y: 6.18), controlPoint1: CGPoint(x: 14.09, y: 5.33), controlPoint2: CGPoint(x: 13.72, y: 5.71))
        shape9Path.addCurveToPoint(CGPoint(x: 14.56, y: 7.02), controlPoint1: CGPoint(x: 13.72, y: 6.64), controlPoint2: CGPoint(x: 14.09, y: 7.02))
        shape9Path.addCurveToPoint(CGPoint(x: 14.64, y: 7), controlPoint1: CGPoint(x: 14.59, y: 7.02), controlPoint2: CGPoint(x: 14.62, y: 7))
        shape9Path.addCurveToPoint(CGPoint(x: 18.95, y: 11.82), controlPoint1: CGPoint(x: 14.97, y: 9.35), controlPoint2: CGPoint(x: 16.7, y: 11.23))
        shape9Path.addLineToPoint(CGPoint(x: 18.95, y: 11.91))
        shape9Path.addLineToPoint(CGPoint(x: 18.95, y: 12.45))
        shape9Path.addCurveToPoint(CGPoint(x: 19.55, y: 13.61), controlPoint1: CGPoint(x: 18.95, y: 12.94), controlPoint2: CGPoint(x: 19.2, y: 13.34))
        shape9Path.addCurveToPoint(CGPoint(x: 20.41, y: 14.02), controlPoint1: CGPoint(x: 19.79, y: 13.86), controlPoint2: CGPoint(x: 20.09, y: 14.02))
        shape9Path.addCurveToPoint(CGPoint(x: 21.28, y: 13.61), controlPoint1: CGPoint(x: 20.74, y: 14.02), controlPoint2: CGPoint(x: 21.03, y: 13.86))
        shape9Path.addCurveToPoint(CGPoint(x: 21.88, y: 12.45), controlPoint1: CGPoint(x: 21.63, y: 13.34), controlPoint2: CGPoint(x: 21.88, y: 12.94))
        shape9Path.addLineToPoint(CGPoint(x: 21.88, y: 11.91))
        shape9Path.addLineToPoint(CGPoint(x: 21.88, y: 11.82))
        shape9Path.addCurveToPoint(CGPoint(x: 26.18, y: 7), controlPoint1: CGPoint(x: 24.13, y: 11.23), controlPoint2: CGPoint(x: 25.85, y: 9.35))
        shape9Path.addCurveToPoint(CGPoint(x: 26.27, y: 7.02), controlPoint1: CGPoint(x: 26.21, y: 7), controlPoint2: CGPoint(x: 26.24, y: 7.02))
        shape9Path.addCurveToPoint(CGPoint(x: 27.11, y: 6.18), controlPoint1: CGPoint(x: 26.73, y: 7.02), controlPoint2: CGPoint(x: 27.11, y: 6.64))
        shape9Path.addCurveToPoint(CGPoint(x: 26.27, y: 5.33), controlPoint1: CGPoint(x: 27.1, y: 5.71), controlPoint2: CGPoint(x: 26.73, y: 5.33))
        shape9Path.addLineToPoint(CGPoint(x: 26.27, y: 5.33))
        shape9Path.closePath()
        shape9Path.miterLimit = 4;

        shape9Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape9Path.fill()


        //// Shape 10 Drawing
        let shape10Path = UIBezierPath(ovalInRect: CGRect(x: 22.05, y: 4.75, width: 1, height: 1))
        fillColor3.setFill()
        shape10Path.fill()


        //// Shape 11 Drawing
        let shape11Path = UIBezierPath(ovalInRect: CGRect(x: 17.6, y: 4.75, width: 1, height: 1))
        fillColor3.setFill()
        shape11Path.fill()


        //// Shape 12 Drawing
        let shape12Path = UIBezierPath()
        shape12Path.moveToPoint(CGPoint(x: 21.57, y: 10.05))
        shape12Path.addCurveToPoint(CGPoint(x: 21.39, y: 9.98), controlPoint1: CGPoint(x: 21.5, y: 10.05), controlPoint2: CGPoint(x: 21.44, y: 10.03))
        shape12Path.addCurveToPoint(CGPoint(x: 20.35, y: 9.48), controlPoint1: CGPoint(x: 21.04, y: 9.63), controlPoint2: CGPoint(x: 20.7, y: 9.47))
        shape12Path.addCurveToPoint(CGPoint(x: 19.44, y: 9.96), controlPoint1: CGPoint(x: 19.82, y: 9.51), controlPoint2: CGPoint(x: 19.45, y: 9.96))
        shape12Path.addCurveToPoint(CGPoint(x: 19.1, y: 10), controlPoint1: CGPoint(x: 19.36, y: 10.06), controlPoint2: CGPoint(x: 19.21, y: 10.08))
        shape12Path.addCurveToPoint(CGPoint(x: 19.07, y: 9.66), controlPoint1: CGPoint(x: 19, y: 9.91), controlPoint2: CGPoint(x: 18.98, y: 9.76))
        shape12Path.addCurveToPoint(CGPoint(x: 20.32, y: 9), controlPoint1: CGPoint(x: 19.09, y: 9.63), controlPoint2: CGPoint(x: 19.57, y: 9.04))
        shape12Path.addCurveToPoint(CGPoint(x: 21.74, y: 9.64), controlPoint1: CGPoint(x: 20.82, y: 8.97), controlPoint2: CGPoint(x: 21.29, y: 9.18))
        shape12Path.addCurveToPoint(CGPoint(x: 21.74, y: 9.98), controlPoint1: CGPoint(x: 21.83, y: 9.73), controlPoint2: CGPoint(x: 21.83, y: 9.89))
        shape12Path.addCurveToPoint(CGPoint(x: 21.57, y: 10.05), controlPoint1: CGPoint(x: 21.69, y: 10.03), controlPoint2: CGPoint(x: 21.62, y: 10.05))
        shape12Path.addLineToPoint(CGPoint(x: 21.57, y: 10.05))
        shape12Path.closePath()
        shape12Path.miterLimit = 4;

        shape12Path.usesEvenOddFillRule = true;

        fillColor4.setFill()
        shape12Path.fill()
    }

    public class func drawBasicFemale() {
        //// Color Declarations
        let fillColor = UIColor(red: 0.997, green: 0.849, blue: 0.775, alpha: 1.000)
        let fillColor6 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let strokeColor = UIColor(red: 0.103, green: 0.073, blue: 0.066, alpha: 1.000)
        let fillColor11 = UIColor(red: 0.103, green: 0.073, blue: 0.066, alpha: 1.000)
        let fillColor12 = UIColor(red: 0.997, green: 0.856, blue: 0.697, alpha: 1.000)
        let strokeColor2 = UIColor(red: 0.551, green: 0.551, blue: 0.555, alpha: 1.000)

        //// Page-1
        //// Group 캐릭터베이직 3
        //// Group 5
        //// Group 6
        //// Shape Drawing
        let shapePath = UIBezierPath()
        shapePath.moveToPoint(CGPoint(x: 25.81, y: 362.8))
        shapePath.addCurveToPoint(CGPoint(x: 43.57, y: 393.89), controlPoint1: CGPoint(x: 25.81, y: 376.04), controlPoint2: CGPoint(x: 32.94, y: 387.61))
        shapePath.addCurveToPoint(CGPoint(x: 61.9, y: 398.89), controlPoint1: CGPoint(x: 48.94, y: 397.06), controlPoint2: CGPoint(x: 55.21, y: 398.89))
        shapePath.addLineToPoint(CGPoint(x: 72.95, y: 398.89))
        shapePath.addCurveToPoint(CGPoint(x: 91.47, y: 381.15), controlPoint1: CGPoint(x: 74.54, y: 389.3), controlPoint2: CGPoint(x: 82.04, y: 381.62))
        shapePath.addLineToPoint(CGPoint(x: 92.55, y: 381.15))
        shapePath.addCurveToPoint(CGPoint(x: 111.06, y: 398.89), controlPoint1: CGPoint(x: 101.98, y: 381.63), controlPoint2: CGPoint(x: 109.47, y: 389.3))
        shapePath.addLineToPoint(CGPoint(x: 121.94, y: 398.89))
        shapePath.addCurveToPoint(CGPoint(x: 140.04, y: 394.02), controlPoint1: CGPoint(x: 128.54, y: 398.89), controlPoint2: CGPoint(x: 134.72, y: 397.11))
        shapePath.addCurveToPoint(CGPoint(x: 158.03, y: 362.8), controlPoint1: CGPoint(x: 150.8, y: 387.78), controlPoint2: CGPoint(x: 158.03, y: 376.14))
        shapePath.addLineToPoint(CGPoint(x: 25.81, y: 362.8))
        shapePath.addLineToPoint(CGPoint(x: 25.81, y: 362.8))
        shapePath.closePath()
        shapePath.miterLimit = 4;

        shapePath.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shapePath.fill()


        //// Shape 2 Drawing
        let shape2Path = UIBezierPath()
        shape2Path.moveToPoint(CGPoint(x: 25.81, y: 362.8))
        shape2Path.addCurveToPoint(CGPoint(x: 43.57, y: 393.89), controlPoint1: CGPoint(x: 25.81, y: 376.04), controlPoint2: CGPoint(x: 32.94, y: 387.61))
        shape2Path.addCurveToPoint(CGPoint(x: 61.9, y: 398.89), controlPoint1: CGPoint(x: 48.94, y: 397.06), controlPoint2: CGPoint(x: 55.21, y: 398.89))
        shape2Path.addLineToPoint(CGPoint(x: 72.95, y: 398.89))
        shape2Path.addCurveToPoint(CGPoint(x: 91.47, y: 381.15), controlPoint1: CGPoint(x: 74.54, y: 389.3), controlPoint2: CGPoint(x: 82.04, y: 381.62))
        shape2Path.addLineToPoint(CGPoint(x: 92.55, y: 381.15))
        shape2Path.addCurveToPoint(CGPoint(x: 111.06, y: 398.89), controlPoint1: CGPoint(x: 101.98, y: 381.63), controlPoint2: CGPoint(x: 109.47, y: 389.3))
        shape2Path.addLineToPoint(CGPoint(x: 121.94, y: 398.89))
        shape2Path.addCurveToPoint(CGPoint(x: 140.04, y: 394.02), controlPoint1: CGPoint(x: 128.54, y: 398.89), controlPoint2: CGPoint(x: 134.72, y: 397.11))
        shape2Path.addCurveToPoint(CGPoint(x: 158.03, y: 362.8), controlPoint1: CGPoint(x: 150.8, y: 387.78), controlPoint2: CGPoint(x: 158.03, y: 376.14))
        shape2Path.addLineToPoint(CGPoint(x: 25.81, y: 362.8))
        shape2Path.addLineToPoint(CGPoint(x: 25.81, y: 362.8))
        shape2Path.closePath()
        shape2Path.miterLimit = 4;

        shape2Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape2Path.lineWidth = 5.09
        shape2Path.stroke()


        //// Rectangle-path Drawing
        let rectanglepathPath = UIBezierPath(rect: CGRect(x: 25.81, y: 350.62, width: 132.22, height: 12.02))
        fillColor6.setFill()
        rectanglepathPath.fill()


        //// Rectangle-path 2 Drawing
        let rectanglepath2Path = UIBezierPath(rect: CGRect(x: 25.81, y: 350.62, width: 132.22, height: 12.02))
        strokeColor.setStroke()
        rectanglepath2Path.lineWidth = 5.09
        rectanglepath2Path.stroke()


        //// Shape 3 Drawing
        let shape3Path = UIBezierPath()
        shape3Path.moveToPoint(CGPoint(x: 118.53, y: 568.74))
        shape3Path.addLineToPoint(CGPoint(x: 113.51, y: 408.69))
        shape3Path.addLineToPoint(CGPoint(x: 141.16, y: 408.69))
        shape3Path.addLineToPoint(CGPoint(x: 134.78, y: 568.74))
        shape3Path.addLineToPoint(CGPoint(x: 118.53, y: 568.74))
        shape3Path.closePath()
        shape3Path.miterLimit = 4;

        shape3Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape3Path.fill()


        //// Shape 4 Drawing
        let shape4Path = UIBezierPath()
        shape4Path.moveToPoint(CGPoint(x: 118.53, y: 568.74))
        shape4Path.addLineToPoint(CGPoint(x: 113.51, y: 408.69))
        shape4Path.addLineToPoint(CGPoint(x: 141.16, y: 408.69))
        shape4Path.addLineToPoint(CGPoint(x: 134.78, y: 568.74))
        shape4Path.addLineToPoint(CGPoint(x: 118.53, y: 568.74))
        shape4Path.closePath()
        shape4Path.miterLimit = 4;

        shape4Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape4Path.lineWidth = 5.09
        shape4Path.stroke()


        //// Shape 5 Drawing
        let shape5Path = UIBezierPath()
        shape5Path.moveToPoint(CGPoint(x: 127.32, y: 544.69))
        shape5Path.addCurveToPoint(CGPoint(x: 103.25, y: 568.75), controlPoint1: CGPoint(x: 114.03, y: 544.69), controlPoint2: CGPoint(x: 103.25, y: 555.46))
        shape5Path.addLineToPoint(CGPoint(x: 151.38, y: 568.75))
        shape5Path.addCurveToPoint(CGPoint(x: 127.32, y: 544.69), controlPoint1: CGPoint(x: 151.38, y: 555.46), controlPoint2: CGPoint(x: 140.61, y: 544.69))
        shape5Path.closePath()
        shape5Path.miterLimit = 4;

        shape5Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape5Path.fill()


        //// Shape 6 Drawing
        let shape6Path = UIBezierPath()
        shape6Path.moveToPoint(CGPoint(x: 127.32, y: 544.69))
        shape6Path.addCurveToPoint(CGPoint(x: 103.25, y: 568.75), controlPoint1: CGPoint(x: 114.03, y: 544.69), controlPoint2: CGPoint(x: 103.25, y: 555.46))
        shape6Path.addLineToPoint(CGPoint(x: 151.38, y: 568.75))
        shape6Path.addCurveToPoint(CGPoint(x: 127.32, y: 544.69), controlPoint1: CGPoint(x: 151.38, y: 555.46), controlPoint2: CGPoint(x: 140.61, y: 544.69))
        shape6Path.addLineToPoint(CGPoint(x: 127.32, y: 544.69))
        shape6Path.closePath()
        shape6Path.miterLimit = 4;

        shape6Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape6Path.lineWidth = 5.09
        shape6Path.stroke()


        //// Rectangle-path 3 Drawing
        let rectanglepath3Path = UIBezierPath(rect: CGRect(x: 103.26, y: 568.75, width: 47.92, height: 9.97))
        fillColor6.setFill()
        rectanglepath3Path.fill()


        //// Rectangle-path 4 Drawing
        let rectanglepath4Path = UIBezierPath(rect: CGRect(x: 103.26, y: 568.75, width: 47.92, height: 9.97))
        strokeColor.setStroke()
        rectanglepath4Path.lineWidth = 5.09
        rectanglepath4Path.stroke()


        //// Shape 7 Drawing
        let shape7Path = UIBezierPath()
        shape7Path.moveToPoint(CGPoint(x: 47.74, y: 568.74))
        shape7Path.addLineToPoint(CGPoint(x: 42.72, y: 408.69))
        shape7Path.addLineToPoint(CGPoint(x: 70.37, y: 408.69))
        shape7Path.addLineToPoint(CGPoint(x: 63.99, y: 568.74))
        shape7Path.addLineToPoint(CGPoint(x: 47.74, y: 568.74))
        shape7Path.closePath()
        shape7Path.miterLimit = 4;

        shape7Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape7Path.fill()


        //// Shape 8 Drawing
        let shape8Path = UIBezierPath()
        shape8Path.moveToPoint(CGPoint(x: 47.74, y: 568.74))
        shape8Path.addLineToPoint(CGPoint(x: 42.72, y: 408.69))
        shape8Path.addLineToPoint(CGPoint(x: 70.37, y: 408.69))
        shape8Path.addLineToPoint(CGPoint(x: 63.99, y: 568.74))
        shape8Path.addLineToPoint(CGPoint(x: 47.74, y: 568.74))
        shape8Path.closePath()
        shape8Path.miterLimit = 4;

        shape8Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape8Path.lineWidth = 5.09
        shape8Path.stroke()


        //// Shape 9 Drawing
        let shape9Path = UIBezierPath()
        shape9Path.moveToPoint(CGPoint(x: 56.52, y: 544.69))
        shape9Path.addCurveToPoint(CGPoint(x: 32.46, y: 568.75), controlPoint1: CGPoint(x: 43.24, y: 544.69), controlPoint2: CGPoint(x: 32.46, y: 555.46))
        shape9Path.addLineToPoint(CGPoint(x: 80.59, y: 568.75))
        shape9Path.addCurveToPoint(CGPoint(x: 56.52, y: 544.69), controlPoint1: CGPoint(x: 80.59, y: 555.46), controlPoint2: CGPoint(x: 69.81, y: 544.69))
        shape9Path.closePath()
        shape9Path.miterLimit = 4;

        shape9Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape9Path.fill()


        //// Shape 10 Drawing
        let shape10Path = UIBezierPath()
        shape10Path.moveToPoint(CGPoint(x: 56.52, y: 544.69))
        shape10Path.addCurveToPoint(CGPoint(x: 32.46, y: 568.75), controlPoint1: CGPoint(x: 43.24, y: 544.69), controlPoint2: CGPoint(x: 32.46, y: 555.46))
        shape10Path.addLineToPoint(CGPoint(x: 80.59, y: 568.75))
        shape10Path.addCurveToPoint(CGPoint(x: 56.52, y: 544.69), controlPoint1: CGPoint(x: 80.59, y: 555.46), controlPoint2: CGPoint(x: 69.81, y: 544.69))
        shape10Path.addLineToPoint(CGPoint(x: 56.52, y: 544.69))
        shape10Path.closePath()
        shape10Path.miterLimit = 4;

        shape10Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape10Path.lineWidth = 5.09
        shape10Path.stroke()


        //// Rectangle-path 5 Drawing
        let rectanglepath5Path = UIBezierPath(rect: CGRect(x: 32.46, y: 568.75, width: 47.92, height: 9.97))
        fillColor6.setFill()
        rectanglepath5Path.fill()


        //// Rectangle-path 6 Drawing
        let rectanglepath6Path = UIBezierPath(rect: CGRect(x: 32.46, y: 568.75, width: 47.92, height: 9.97))
        strokeColor.setStroke()
        rectanglepath6Path.lineWidth = 5.09
        rectanglepath6Path.stroke()


        //// Shape 11 Drawing
        let shape11Path = UIBezierPath()
        shape11Path.moveToPoint(CGPoint(x: 39.57, y: 378.89))
        shape11Path.addLineToPoint(CGPoint(x: 39.57, y: 432.68))
        shape11Path.addLineToPoint(CGPoint(x: 72.77, y: 432.68))
        shape11Path.addLineToPoint(CGPoint(x: 72.77, y: 402.99))
        shape11Path.addCurveToPoint(CGPoint(x: 91.61, y: 381.46), controlPoint1: CGPoint(x: 72.77, y: 391.7), controlPoint2: CGPoint(x: 80.96, y: 381.99))
        shape11Path.addLineToPoint(CGPoint(x: 92.69, y: 381.46))
        shape11Path.addCurveToPoint(CGPoint(x: 111.53, y: 402.99), controlPoint1: CGPoint(x: 103.34, y: 381.99), controlPoint2: CGPoint(x: 111.53, y: 391.7))
        shape11Path.addLineToPoint(CGPoint(x: 111.53, y: 432.68))
        shape11Path.addLineToPoint(CGPoint(x: 144.28, y: 432.68))
        shape11Path.addLineToPoint(CGPoint(x: 144.28, y: 378.89))
        shape11Path.miterLimit = 4;

        shape11Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape11Path.fill()


        //// Shape 12 Drawing
        let shape12Path = UIBezierPath()
        shape12Path.moveToPoint(CGPoint(x: 38.03, y: 389.86))
        shape12Path.addLineToPoint(CGPoint(x: 39.57, y: 432.67))
        shape12Path.addLineToPoint(CGPoint(x: 72.77, y: 432.67))
        shape12Path.addLineToPoint(CGPoint(x: 72.77, y: 402.98))
        shape12Path.addCurveToPoint(CGPoint(x: 91.61, y: 381.46), controlPoint1: CGPoint(x: 72.77, y: 391.7), controlPoint2: CGPoint(x: 80.96, y: 381.99))
        shape12Path.addLineToPoint(CGPoint(x: 92.69, y: 381.46))
        shape12Path.addCurveToPoint(CGPoint(x: 111.53, y: 402.98), controlPoint1: CGPoint(x: 103.34, y: 381.99), controlPoint2: CGPoint(x: 111.53, y: 391.7))
        shape12Path.addLineToPoint(CGPoint(x: 111.53, y: 432.67))
        shape12Path.addLineToPoint(CGPoint(x: 144.28, y: 432.67))
        shape12Path.addLineToPoint(CGPoint(x: 145.56, y: 390.07))
        shape12Path.miterLimit = 4;

        shape12Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape12Path.lineWidth = 5.09
        shape12Path.stroke()




        //// Group 7
        //// Shape 13 Drawing
        let shape13Path = UIBezierPath()
        shape13Path.moveToPoint(CGPoint(x: 153.8, y: 367.55))
        shape13Path.addLineToPoint(CGPoint(x: 153.46, y: 367.55))
        shape13Path.addLineToPoint(CGPoint(x: 153.15, y: 333.02))
        shape13Path.addCurveToPoint(CGPoint(x: 152.43, y: 299.7), controlPoint1: CGPoint(x: 152.67, y: 324.87), controlPoint2: CGPoint(x: 152.43, y: 307.92))
        shape13Path.addLineToPoint(CGPoint(x: 152.43, y: 242.35))
        shape13Path.addLineToPoint(CGPoint(x: 173.77, y: 242.35))
        shape13Path.addLineToPoint(CGPoint(x: 173.77, y: 299.7))
        shape13Path.addCurveToPoint(CGPoint(x: 173.05, y: 333.02), controlPoint1: CGPoint(x: 173.77, y: 307.92), controlPoint2: CGPoint(x: 173.53, y: 324.87))
        shape13Path.addLineToPoint(CGPoint(x: 172.51, y: 367.55))
        shape13Path.addLineToPoint(CGPoint(x: 172.67, y: 367.55))
        shape13Path.addLineToPoint(CGPoint(x: 178.79, y: 383.49))
        shape13Path.addLineToPoint(CGPoint(x: 178.79, y: 390.11))
        shape13Path.addCurveToPoint(CGPoint(x: 167.52, y: 401.38), controlPoint1: CGPoint(x: 178.79, y: 396.33), controlPoint2: CGPoint(x: 173.74, y: 401.38))
        shape13Path.addLineToPoint(CGPoint(x: 153.8, y: 401.38))
        shape13Path.addLineToPoint(CGPoint(x: 153.8, y: 384.34))
        shape13Path.addLineToPoint(CGPoint(x: 145.12, y: 384.34))
        shape13Path.addLineToPoint(CGPoint(x: 145.12, y: 376.23))
        shape13Path.addLineToPoint(CGPoint(x: 153.8, y: 367.55))
        shape13Path.addLineToPoint(CGPoint(x: 153.8, y: 367.55))
        shape13Path.closePath()
        shape13Path.miterLimit = 4;

        shape13Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape13Path.fill()


        //// Shape 14 Drawing
        let shape14Path = UIBezierPath()
        shape14Path.moveToPoint(CGPoint(x: 153.8, y: 367.55))
        shape14Path.addLineToPoint(CGPoint(x: 153.46, y: 367.55))
        shape14Path.addLineToPoint(CGPoint(x: 153.15, y: 333.02))
        shape14Path.addCurveToPoint(CGPoint(x: 152.43, y: 299.7), controlPoint1: CGPoint(x: 152.67, y: 324.87), controlPoint2: CGPoint(x: 152.43, y: 307.92))
        shape14Path.addLineToPoint(CGPoint(x: 152.43, y: 242.35))
        shape14Path.addLineToPoint(CGPoint(x: 173.77, y: 242.35))
        shape14Path.addLineToPoint(CGPoint(x: 173.77, y: 299.7))
        shape14Path.addCurveToPoint(CGPoint(x: 173.05, y: 333.02), controlPoint1: CGPoint(x: 173.77, y: 307.92), controlPoint2: CGPoint(x: 173.53, y: 324.87))
        shape14Path.addLineToPoint(CGPoint(x: 172.51, y: 367.55))
        shape14Path.addLineToPoint(CGPoint(x: 172.67, y: 367.55))
        shape14Path.addLineToPoint(CGPoint(x: 178.79, y: 383.49))
        shape14Path.addLineToPoint(CGPoint(x: 178.79, y: 390.11))
        shape14Path.addCurveToPoint(CGPoint(x: 167.52, y: 401.38), controlPoint1: CGPoint(x: 178.79, y: 396.33), controlPoint2: CGPoint(x: 173.74, y: 401.38))
        shape14Path.addLineToPoint(CGPoint(x: 153.8, y: 401.38))
        shape14Path.addLineToPoint(CGPoint(x: 153.8, y: 384.34))
        shape14Path.addLineToPoint(CGPoint(x: 145.12, y: 384.34))
        shape14Path.addLineToPoint(CGPoint(x: 145.12, y: 376.23))
        shape14Path.addLineToPoint(CGPoint(x: 153.8, y: 367.55))
        shape14Path.addLineToPoint(CGPoint(x: 153.8, y: 367.55))
        shape14Path.closePath()
        shape14Path.miterLimit = 4;

        shape14Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape14Path.lineWidth = 5.09
        shape14Path.stroke()


        //// Shape 15 Drawing
        let shape15Path = UIBezierPath()
        shape15Path.moveToPoint(CGPoint(x: 29.88, y: 367.55))
        shape15Path.addLineToPoint(CGPoint(x: 30.22, y: 367.55))
        shape15Path.addLineToPoint(CGPoint(x: 30.53, y: 333.02))
        shape15Path.addCurveToPoint(CGPoint(x: 31.25, y: 299.7), controlPoint1: CGPoint(x: 31.01, y: 324.87), controlPoint2: CGPoint(x: 31.25, y: 307.92))
        shape15Path.addLineToPoint(CGPoint(x: 31.25, y: 242.35))
        shape15Path.addLineToPoint(CGPoint(x: 9.91, y: 242.35))
        shape15Path.addLineToPoint(CGPoint(x: 9.91, y: 299.7))
        shape15Path.addCurveToPoint(CGPoint(x: 10.63, y: 333.02), controlPoint1: CGPoint(x: 9.91, y: 307.92), controlPoint2: CGPoint(x: 10.15, y: 324.87))
        shape15Path.addLineToPoint(CGPoint(x: 11.17, y: 367.55))
        shape15Path.addLineToPoint(CGPoint(x: 11.01, y: 367.55))
        shape15Path.addLineToPoint(CGPoint(x: 4.89, y: 383.49))
        shape15Path.addLineToPoint(CGPoint(x: 4.89, y: 390.11))
        shape15Path.addCurveToPoint(CGPoint(x: 16.16, y: 401.38), controlPoint1: CGPoint(x: 4.89, y: 396.33), controlPoint2: CGPoint(x: 9.94, y: 401.38))
        shape15Path.addLineToPoint(CGPoint(x: 29.88, y: 401.38))
        shape15Path.addLineToPoint(CGPoint(x: 29.88, y: 384.34))
        shape15Path.addLineToPoint(CGPoint(x: 38.57, y: 384.34))
        shape15Path.addLineToPoint(CGPoint(x: 38.57, y: 376.23))
        shape15Path.addLineToPoint(CGPoint(x: 29.88, y: 367.55))
        shape15Path.addLineToPoint(CGPoint(x: 29.88, y: 367.55))
        shape15Path.closePath()
        shape15Path.miterLimit = 4;

        shape15Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape15Path.fill()


        //// Shape 16 Drawing
        let shape16Path = UIBezierPath()
        shape16Path.moveToPoint(CGPoint(x: 29.88, y: 367.55))
        shape16Path.addLineToPoint(CGPoint(x: 30.22, y: 367.55))
        shape16Path.addLineToPoint(CGPoint(x: 30.53, y: 333.02))
        shape16Path.addCurveToPoint(CGPoint(x: 31.25, y: 299.7), controlPoint1: CGPoint(x: 31.01, y: 324.87), controlPoint2: CGPoint(x: 31.25, y: 307.92))
        shape16Path.addLineToPoint(CGPoint(x: 31.25, y: 242.35))
        shape16Path.addLineToPoint(CGPoint(x: 9.91, y: 242.35))
        shape16Path.addLineToPoint(CGPoint(x: 9.91, y: 299.7))
        shape16Path.addCurveToPoint(CGPoint(x: 10.63, y: 333.02), controlPoint1: CGPoint(x: 9.91, y: 307.92), controlPoint2: CGPoint(x: 10.15, y: 324.87))
        shape16Path.addLineToPoint(CGPoint(x: 11.17, y: 367.55))
        shape16Path.addLineToPoint(CGPoint(x: 11.01, y: 367.55))
        shape16Path.addLineToPoint(CGPoint(x: 4.89, y: 383.49))
        shape16Path.addLineToPoint(CGPoint(x: 4.89, y: 390.11))
        shape16Path.addCurveToPoint(CGPoint(x: 16.16, y: 401.38), controlPoint1: CGPoint(x: 4.89, y: 396.33), controlPoint2: CGPoint(x: 9.94, y: 401.38))
        shape16Path.addLineToPoint(CGPoint(x: 29.88, y: 401.38))
        shape16Path.addLineToPoint(CGPoint(x: 29.88, y: 384.34))
        shape16Path.addLineToPoint(CGPoint(x: 38.57, y: 384.34))
        shape16Path.addLineToPoint(CGPoint(x: 38.57, y: 376.23))
        shape16Path.addLineToPoint(CGPoint(x: 29.88, y: 367.55))
        shape16Path.addLineToPoint(CGPoint(x: 29.88, y: 367.55))
        shape16Path.closePath()
        shape16Path.miterLimit = 4;

        shape16Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape16Path.lineWidth = 5.09
        shape16Path.stroke()


        //// Rectangle-path 7 Drawing
        let rectanglepath7Path = UIBezierPath(rect: CGRect(x: 24.61, y: 63.57, width: 134.74, height: 120.18))
        fillColor11.setFill()
        rectanglepath7Path.fill()


        //// Rectangle-path 8 Drawing
        let rectanglepath8Path = UIBezierPath(rect: CGRect(x: 24.61, y: 63.57, width: 134.74, height: 120.18))
        strokeColor.setStroke()
        rectanglepath8Path.lineWidth = 5.09
        rectanglepath8Path.stroke()


        //// Shape 17 Drawing
        let shape17Path = UIBezierPath()
        shape17Path.moveToPoint(CGPoint(x: 126.8, y: 135.78))
        shape17Path.addLineToPoint(CGPoint(x: 59.93, y: 135.78))
        shape17Path.addCurveToPoint(CGPoint(x: 3.42, y: 204.8), controlPoint1: CGPoint(x: 17.6, y: 135.78), controlPoint2: CGPoint(x: 5.78, y: 165.41))
        shape17Path.addLineToPoint(CGPoint(x: 3.42, y: 241.69))
        shape17Path.addLineToPoint(CGPoint(x: 179.65, y: 241.69))
        shape17Path.addLineToPoint(CGPoint(x: 180.54, y: 204.8))
        shape17Path.addCurveToPoint(CGPoint(x: 126.8, y: 135.78), controlPoint1: CGPoint(x: 178.17, y: 165.41), controlPoint2: CGPoint(x: 169.13, y: 135.78))
        shape17Path.closePath()
        shape17Path.miterLimit = 4;

        shape17Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape17Path.fill()


        //// Shape 18 Drawing
        let shape18Path = UIBezierPath()
        shape18Path.moveToPoint(CGPoint(x: 126.8, y: 135.78))
        shape18Path.addLineToPoint(CGPoint(x: 59.93, y: 135.78))
        shape18Path.addCurveToPoint(CGPoint(x: 3.42, y: 204.8), controlPoint1: CGPoint(x: 17.6, y: 135.78), controlPoint2: CGPoint(x: 5.78, y: 165.41))
        shape18Path.addLineToPoint(CGPoint(x: 3.42, y: 241.69))
        shape18Path.addLineToPoint(CGPoint(x: 180.54, y: 241.69))
        shape18Path.addLineToPoint(CGPoint(x: 180.54, y: 204.8))
        shape18Path.addCurveToPoint(CGPoint(x: 126.8, y: 135.78), controlPoint1: CGPoint(x: 178.17, y: 165.41), controlPoint2: CGPoint(x: 169.13, y: 135.78))
        shape18Path.addLineToPoint(CGPoint(x: 126.8, y: 135.78))
        shape18Path.closePath()
        shape18Path.miterLimit = 4;

        shape18Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape18Path.lineWidth = 5.09
        shape18Path.stroke()


        //// Shape 19 Drawing
        let shape19Path = UIBezierPath()
        shape19Path.moveToPoint(CGPoint(x: 91.95, y: 158.77))
        shape19Path.addLineToPoint(CGPoint(x: 91.95, y: 158.77))
        shape19Path.addCurveToPoint(CGPoint(x: 69.67, y: 136.5), controlPoint1: CGPoint(x: 79.7, y: 158.77), controlPoint2: CGPoint(x: 69.67, y: 148.75))
        shape19Path.addLineToPoint(CGPoint(x: 69.67, y: 83.05))
        shape19Path.addCurveToPoint(CGPoint(x: 91.95, y: 60.77), controlPoint1: CGPoint(x: 69.67, y: 70.8), controlPoint2: CGPoint(x: 79.7, y: 60.77))
        shape19Path.addCurveToPoint(CGPoint(x: 114.23, y: 83.05), controlPoint1: CGPoint(x: 104.2, y: 60.77), controlPoint2: CGPoint(x: 114.23, y: 70.8))
        shape19Path.addLineToPoint(CGPoint(x: 114.23, y: 136.5))
        shape19Path.addCurveToPoint(CGPoint(x: 91.95, y: 158.77), controlPoint1: CGPoint(x: 114.23, y: 148.75), controlPoint2: CGPoint(x: 104.2, y: 158.77))
        shape19Path.closePath()
        shape19Path.miterLimit = 4;

        shape19Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape19Path.fill()


        //// Shape 20 Drawing
        let shape20Path = UIBezierPath()
        shape20Path.moveToPoint(CGPoint(x: 91.95, y: 158.77))
        shape20Path.addLineToPoint(CGPoint(x: 91.95, y: 158.77))
        shape20Path.addCurveToPoint(CGPoint(x: 69.67, y: 136.5), controlPoint1: CGPoint(x: 79.7, y: 158.77), controlPoint2: CGPoint(x: 69.67, y: 148.75))
        shape20Path.addLineToPoint(CGPoint(x: 69.67, y: 83.05))
        shape20Path.addCurveToPoint(CGPoint(x: 91.95, y: 60.77), controlPoint1: CGPoint(x: 69.67, y: 70.8), controlPoint2: CGPoint(x: 79.7, y: 60.77))
        shape20Path.addCurveToPoint(CGPoint(x: 114.23, y: 83.05), controlPoint1: CGPoint(x: 104.2, y: 60.77), controlPoint2: CGPoint(x: 114.23, y: 70.8))
        shape20Path.addLineToPoint(CGPoint(x: 114.23, y: 136.5))
        shape20Path.addCurveToPoint(CGPoint(x: 91.95, y: 158.77), controlPoint1: CGPoint(x: 114.23, y: 148.75), controlPoint2: CGPoint(x: 104.2, y: 158.77))
        shape20Path.addLineToPoint(CGPoint(x: 91.95, y: 158.77))
        shape20Path.closePath()
        shape20Path.miterLimit = 4;

        shape20Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape20Path.lineWidth = 5.09
        shape20Path.stroke()


        //// Clipped
        //// path-1 Drawing


        //// SVGID_13_


        //// Group 10
        //// path-3 Drawing


        //// SVGID_15_


        //// Rectangle-path 9 Drawing
        let rectanglepath9Path = UIBezierPath(rect: CGRect(x: 9.91, y: 241.69, width: 19.86, height: 12.11))
        fillColor12.setFill()
        rectanglepath9Path.fill()






        //// Clipped 2
        //// path-5 Drawing


        //// SVGID_17_


        //// Group 14
        //// path-7 Drawing


        //// SVGID_19_


        //// Rectangle-path 10 Drawing
        let rectanglepath10Path = UIBezierPath(rect: CGRect(x: 154.18, y: 241.69, width: 19.59, height: 12.11))
        fillColor12.setFill()
        rectanglepath10Path.fill()






        //// Shape 21 Drawing
        let shape21Path = UIBezierPath(ovalInRect: CGRect(x: 18.35, y: 64.05, width: 21.1, height: 21.1))
        fillColor.setFill()
        shape21Path.fill()


        //// Oval 3 Drawing
        let oval3Path = UIBezierPath(ovalInRect: CGRect(x: 18.35, y: 64.05, width: 21.05, height: 21.05))
        strokeColor.setStroke()
        oval3Path.lineWidth = 5.09
        oval3Path.stroke()


        //// Shape 22 Drawing
        let shape22Path = UIBezierPath(ovalInRect: CGRect(x: 144.5, y: 64.05, width: 21.1, height: 21.1))
        fillColor.setFill()
        shape22Path.fill()


        //// Shape 23 Drawing
        let shape23Path = UIBezierPath(ovalInRect: CGRect(x: 144.5, y: 64.05, width: 21.1, height: 21.1))
        strokeColor.setStroke()
        shape23Path.lineWidth = 5.09
        shape23Path.stroke()


        //// Shape 24 Drawing
        let shape24Path = UIBezierPath(ovalInRect: CGRect(x: 28.5, y: 7.5, width: 127, height: 127))
        fillColor.setFill()
        shape24Path.fill()


        //// Oval 8 Drawing
        let oval8Path = UIBezierPath(ovalInRect: CGRect(x: 28.49, y: 7.51, width: 126.97, height: 126.97))
        strokeColor.setStroke()
        oval8Path.lineWidth = 5.09
        oval8Path.stroke()


        //// Shape 25 Drawing
        let shape25Path = UIBezierPath(ovalInRect: CGRect(x: 65.35, y: 84.65, width: 8.1, height: 8.1))
        fillColor11.setFill()
        shape25Path.fill()


        //// Shape 26 Drawing
        let shape26Path = UIBezierPath(ovalInRect: CGRect(x: 110.5, y: 84.65, width: 8.1, height: 8.1))
        fillColor11.setFill()
        shape26Path.fill()


        //// Shape 27 Drawing
        let shape27Path = UIBezierPath()
        shape27Path.moveToPoint(CGPoint(x: 77.94, y: 112.78))
        shape27Path.addCurveToPoint(CGPoint(x: 91.98, y: 116.27), controlPoint1: CGPoint(x: 82.13, y: 115.01), controlPoint2: CGPoint(x: 86.9, y: 116.27))
        shape27Path.addCurveToPoint(CGPoint(x: 106.01, y: 112.78), controlPoint1: CGPoint(x: 97.05, y: 116.27), controlPoint2: CGPoint(x: 101.83, y: 115.01))
        shape27Path.miterLimit = 4;

        shape27Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape27Path.lineWidth = 5.09
        shape27Path.stroke()


        //// Shape 28 Drawing
        let shape28Path = UIBezierPath()
        shape28Path.moveToPoint(CGPoint(x: 78.09, y: 76.71))
        shape28Path.addCurveToPoint(CGPoint(x: 69.39, y: 74.55), controlPoint1: CGPoint(x: 75.49, y: 75.33), controlPoint2: CGPoint(x: 72.53, y: 74.55))
        shape28Path.addCurveToPoint(CGPoint(x: 60.7, y: 76.71), controlPoint1: CGPoint(x: 66.25, y: 74.55), controlPoint2: CGPoint(x: 63.3, y: 75.33))
        shape28Path.miterLimit = 4;

        shape28Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape28Path.lineWidth = 5.09
        shape28Path.stroke()


        //// Shape 29 Drawing
        let shape29Path = UIBezierPath()
        shape29Path.moveToPoint(CGPoint(x: 123.25, y: 76.71))
        shape29Path.addCurveToPoint(CGPoint(x: 114.56, y: 74.55), controlPoint1: CGPoint(x: 120.66, y: 75.33), controlPoint2: CGPoint(x: 117.7, y: 74.55))
        shape29Path.addCurveToPoint(CGPoint(x: 105.87, y: 76.71), controlPoint1: CGPoint(x: 111.42, y: 74.55), controlPoint2: CGPoint(x: 108.46, y: 75.33))
        shape29Path.miterLimit = 4;

        shape29Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape29Path.lineWidth = 5.09
        shape29Path.stroke()


        //// Shape 30 Drawing
        let shape30Path = UIBezierPath()
        shape30Path.moveToPoint(CGPoint(x: 92.11, y: 88.17))
        shape30Path.addLineToPoint(CGPoint(x: 92.11, y: 97.63))
        shape30Path.miterLimit = 4;

        shape30Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape30Path.lineWidth = 5.09
        shape30Path.stroke()


        //// Shape 31 Drawing
        let shape31Path = UIBezierPath()
        shape31Path.moveToPoint(CGPoint(x: 159.29, y: 59.37))
        shape31Path.addCurveToPoint(CGPoint(x: 92.24, y: 2.94), controlPoint1: CGPoint(x: 153.78, y: 27.33), controlPoint2: CGPoint(x: 125.86, y: 2.94))
        shape31Path.addCurveToPoint(CGPoint(x: 24.61, y: 63.57), controlPoint1: CGPoint(x: 57.17, y: 2.94), controlPoint2: CGPoint(x: 28.3, y: 29.48))
        shape31Path.addLineToPoint(CGPoint(x: 99.89, y: 63.57))
        shape31Path.addLineToPoint(CGPoint(x: 106.85, y: 44.95))
        shape31Path.addLineToPoint(CGPoint(x: 113.82, y: 63.57))
        shape31Path.addLineToPoint(CGPoint(x: 128.41, y: 63.57))
        shape31Path.addLineToPoint(CGPoint(x: 135.37, y: 44.95))
        shape31Path.addLineToPoint(CGPoint(x: 142.33, y: 63.57))
        shape31Path.addLineToPoint(CGPoint(x: 155.72, y: 63.57))
        shape31Path.addCurveToPoint(CGPoint(x: 159.29, y: 59.37), controlPoint1: CGPoint(x: 157.95, y: 63.57), controlPoint2: CGPoint(x: 159.67, y: 61.57))
        shape31Path.closePath()
        shape31Path.miterLimit = 4;

        shape31Path.usesEvenOddFillRule = true;

        fillColor11.setFill()
        shape31Path.fill()


        //// Shape 32 Drawing
        let shape32Path = UIBezierPath()
        shape32Path.moveToPoint(CGPoint(x: 159.29, y: 59.37))
        shape32Path.addCurveToPoint(CGPoint(x: 92.24, y: 2.94), controlPoint1: CGPoint(x: 153.78, y: 27.33), controlPoint2: CGPoint(x: 125.86, y: 2.94))
        shape32Path.addCurveToPoint(CGPoint(x: 24.61, y: 63.57), controlPoint1: CGPoint(x: 57.17, y: 2.94), controlPoint2: CGPoint(x: 28.3, y: 29.48))
        shape32Path.addLineToPoint(CGPoint(x: 99.89, y: 63.57))
        shape32Path.addLineToPoint(CGPoint(x: 106.85, y: 44.95))
        shape32Path.addLineToPoint(CGPoint(x: 113.82, y: 63.57))
        shape32Path.addLineToPoint(CGPoint(x: 128.41, y: 63.57))
        shape32Path.addLineToPoint(CGPoint(x: 135.37, y: 44.95))
        shape32Path.addLineToPoint(CGPoint(x: 142.33, y: 63.57))
        shape32Path.addLineToPoint(CGPoint(x: 155.72, y: 63.57))
        shape32Path.addCurveToPoint(CGPoint(x: 159.29, y: 59.37), controlPoint1: CGPoint(x: 157.95, y: 63.57), controlPoint2: CGPoint(x: 159.67, y: 61.57))
        shape32Path.addLineToPoint(CGPoint(x: 159.29, y: 59.37))
        shape32Path.closePath()
        shape32Path.miterLimit = 4;

        shape32Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape32Path.lineWidth = 5.09
        shape32Path.stroke()


        //// Shape 33 Drawing
        let shape33Path = UIBezierPath()
        shape33Path.moveToPoint(CGPoint(x: 140.59, y: 280.91))
        shape33Path.addLineToPoint(CGPoint(x: 140.59, y: 280.91))
        shape33Path.addCurveToPoint(CGPoint(x: 158.21, y: 339.67), controlPoint1: CGPoint(x: 151.87, y: 298.3), controlPoint2: CGPoint(x: 158.21, y: 318.75))
        shape33Path.addLineToPoint(CGPoint(x: 158.21, y: 350.62))
        shape33Path.addLineToPoint(CGPoint(x: 97.6, y: 350.62))
        shape33Path.addLineToPoint(CGPoint(x: 25.75, y: 350.62))
        shape33Path.addLineToPoint(CGPoint(x: 25.75, y: 339.67))
        shape33Path.addCurveToPoint(CGPoint(x: 43.31, y: 280.91), controlPoint1: CGPoint(x: 25.75, y: 318.75), controlPoint2: CGPoint(x: 32.03, y: 298.3))
        shape33Path.miterLimit = 4;

        shape33Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape33Path.fill()


        //// Shape 34 Drawing
        let shape34Path = UIBezierPath()
        shape34Path.moveToPoint(CGPoint(x: 140.59, y: 280.91))
        shape34Path.addLineToPoint(CGPoint(x: 140.59, y: 280.91))
        shape34Path.addCurveToPoint(CGPoint(x: 158.21, y: 339.67), controlPoint1: CGPoint(x: 151.87, y: 298.3), controlPoint2: CGPoint(x: 158.21, y: 318.75))
        shape34Path.addLineToPoint(CGPoint(x: 158.21, y: 350.62))
        shape34Path.addLineToPoint(CGPoint(x: 97.6, y: 350.62))
        shape34Path.addLineToPoint(CGPoint(x: 25.75, y: 350.62))
        shape34Path.addLineToPoint(CGPoint(x: 25.75, y: 339.67))
        shape34Path.addCurveToPoint(CGPoint(x: 43.31, y: 280.91), controlPoint1: CGPoint(x: 25.75, y: 318.75), controlPoint2: CGPoint(x: 32.03, y: 298.3))
        shape34Path.miterLimit = 4;

        shape34Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape34Path.lineWidth = 5.09
        shape34Path.stroke()


        //// Shape 35 Drawing
        let shape35Path = UIBezierPath()
        shape35Path.moveToPoint(CGPoint(x: 152.38, y: 242.35))
        shape35Path.addLineToPoint(CGPoint(x: 152.38, y: 242.35))
        shape35Path.addLineToPoint(CGPoint(x: 31.57, y: 242.35))
        shape35Path.addCurveToPoint(CGPoint(x: 37.8, y: 290.43), controlPoint1: CGPoint(x: 31.57, y: 258.54), controlPoint2: CGPoint(x: 33.67, y: 274.66))
        shape35Path.addLineToPoint(CGPoint(x: 146.15, y: 290.43))
        shape35Path.addCurveToPoint(CGPoint(x: 152.38, y: 242.35), controlPoint1: CGPoint(x: 150.28, y: 274.65), controlPoint2: CGPoint(x: 152.38, y: 258.53))
        shape35Path.closePath()
        shape35Path.miterLimit = 4;

        shape35Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape35Path.fill()


        //// Shape 36 Drawing
        let shape36Path = UIBezierPath()
        shape36Path.moveToPoint(CGPoint(x: 31.57, y: 242.35))
        shape36Path.addLineToPoint(CGPoint(x: 31.57, y: 242.35))
        shape36Path.addCurveToPoint(CGPoint(x: 37.8, y: 290.49), controlPoint1: CGPoint(x: 31.57, y: 258.56), controlPoint2: CGPoint(x: 33.66, y: 274.69))
        shape36Path.miterLimit = 4;

        shape36Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape36Path.fill()


        //// Shape 37 Drawing
        let shape37Path = UIBezierPath()
        shape37Path.moveToPoint(CGPoint(x: 152.38, y: 242.35))
        shape37Path.addLineToPoint(CGPoint(x: 152.38, y: 242.35))
        shape37Path.addCurveToPoint(CGPoint(x: 146.15, y: 290.5), controlPoint1: CGPoint(x: 152.38, y: 258.56), controlPoint2: CGPoint(x: 150.29, y: 274.7))
        shape37Path.miterLimit = 4;

        shape37Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape37Path.fill()


        //// Shape 38 Drawing
        let shape38Path = UIBezierPath()
        shape38Path.moveToPoint(CGPoint(x: 35.94, y: 224.04))
        shape38Path.addCurveToPoint(CGPoint(x: 28.14, y: 208.82), controlPoint1: CGPoint(x: 33.57, y: 215.16), controlPoint2: CGPoint(x: 28.14, y: 208.82))
        shape38Path.addLineToPoint(CGPoint(x: 155.81, y: 208.82))
        shape38Path.addCurveToPoint(CGPoint(x: 148.01, y: 224.04), controlPoint1: CGPoint(x: 155.81, y: 208.82), controlPoint2: CGPoint(x: 150.39, y: 215.16))
        shape38Path.addLineToPoint(CGPoint(x: 137.47, y: 215.17))
        shape38Path.addCurveToPoint(CGPoint(x: 152.8, y: 239.23), controlPoint1: CGPoint(x: 146.53, y: 219.39), controlPoint2: CGPoint(x: 152.8, y: 228.58))
        shape38Path.addCurveToPoint(CGPoint(x: 126.26, y: 265.78), controlPoint1: CGPoint(x: 152.8, y: 253.89), controlPoint2: CGPoint(x: 140.92, y: 265.78))
        shape38Path.addLineToPoint(CGPoint(x: 57.69, y: 265.78))
        shape38Path.addCurveToPoint(CGPoint(x: 31.15, y: 239.23), controlPoint1: CGPoint(x: 43.04, y: 265.78), controlPoint2: CGPoint(x: 31.15, y: 253.89))
        shape38Path.addCurveToPoint(CGPoint(x: 46.48, y: 215.17), controlPoint1: CGPoint(x: 31.15, y: 228.58), controlPoint2: CGPoint(x: 37.43, y: 219.39))
        shape38Path.addLineToPoint(CGPoint(x: 35.94, y: 224.04))
        shape38Path.closePath()
        shape38Path.miterLimit = 4;

        shape38Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape38Path.fill()


        //// Shape 39 Drawing
        let shape39Path = UIBezierPath()
        shape39Path.moveToPoint(CGPoint(x: 47.25, y: 248.31))
        shape39Path.addCurveToPoint(CGPoint(x: 25.9, y: 222.78), controlPoint1: CGPoint(x: 32.59, y: 248.31), controlPoint2: CGPoint(x: 25.9, y: 237.44))
        shape39Path.addCurveToPoint(CGPoint(x: 31.52, y: 206.57), controlPoint1: CGPoint(x: 25.9, y: 217.13), controlPoint2: CGPoint(x: 28.51, y: 210.88))
        shape39Path.miterLimit = 4;

        shape39Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape39Path.lineWidth = 5.09
        shape39Path.stroke()


        //// Shape 40 Drawing
        let shape40Path = UIBezierPath()
        shape40Path.moveToPoint(CGPoint(x: 136.65, y: 248.31))
        shape40Path.addCurveToPoint(CGPoint(x: 158, y: 222.78), controlPoint1: CGPoint(x: 151.31, y: 248.31), controlPoint2: CGPoint(x: 158, y: 237.44))
        shape40Path.addCurveToPoint(CGPoint(x: 152.39, y: 206.57), controlPoint1: CGPoint(x: 158, y: 217.13), controlPoint2: CGPoint(x: 155.4, y: 210.88))
        shape40Path.miterLimit = 4;

        shape40Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape40Path.lineWidth = 5.09
        shape40Path.stroke()


        //// Shape 41 Drawing
        let shape41Path = UIBezierPath()
        shape41Path.moveToPoint(CGPoint(x: 69.07, y: 252.85))
        shape41Path.addCurveToPoint(CGPoint(x: 114.78, y: 252.85), controlPoint1: CGPoint(x: 91.18, y: 244.96), controlPoint2: CGPoint(x: 114.78, y: 252.85))
        shape41Path.miterLimit = 4;

        shape41Path.usesEvenOddFillRule = true;

        strokeColor2.setStroke()
        shape41Path.lineWidth = 5.09
        shape41Path.stroke()


        //// Shape 42 Drawing
        let shape42Path = UIBezierPath()
        shape42Path.moveToPoint(CGPoint(x: 152.38, y: 242.35))
        shape42Path.addLineToPoint(CGPoint(x: 152.38, y: 242.35))
        shape42Path.addCurveToPoint(CGPoint(x: 146.15, y: 290.5), controlPoint1: CGPoint(x: 152.38, y: 258.56), controlPoint2: CGPoint(x: 150.29, y: 274.7))
        shape42Path.miterLimit = 4;

        shape42Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape42Path.lineWidth = 5.09
        shape42Path.stroke()


        //// Shape 43 Drawing
        let shape43Path = UIBezierPath()
        shape43Path.moveToPoint(CGPoint(x: 31.57, y: 242.35))
        shape43Path.addLineToPoint(CGPoint(x: 31.57, y: 242.35))
        shape43Path.addCurveToPoint(CGPoint(x: 37.8, y: 290.49), controlPoint1: CGPoint(x: 31.57, y: 258.56), controlPoint2: CGPoint(x: 33.66, y: 274.69))
        shape43Path.miterLimit = 4;

        shape43Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape43Path.lineWidth = 5.09
        shape43Path.stroke()
    }

    public class func drawBasicMale() {
        //// Color Declarations
        let fillColor = UIColor(red: 0.997, green: 0.849, blue: 0.775, alpha: 1.000)
        let fillColor6 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let strokeColor = UIColor(red: 0.103, green: 0.073, blue: 0.066, alpha: 1.000)
        let fillColor11 = UIColor(red: 0.103, green: 0.073, blue: 0.066, alpha: 1.000)
        let fillColor12 = UIColor(red: 0.997, green: 0.856, blue: 0.697, alpha: 1.000)
        let strokeColor2 = UIColor(red: 0.551, green: 0.551, blue: 0.555, alpha: 1.000)
        let strokeColor3 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)

        //// Page-1
        //// Group 캐릭터베이직 3
        //// Group 5
        //// Group 6
        //// Shape Drawing
        let shapePath = UIBezierPath()
        shapePath.moveToPoint(CGPoint(x: 61.25, y: 578.89))
        shapePath.addCurveToPoint(CGPoint(x: 53.03, y: 509.07), controlPoint1: CGPoint(x: 61.25, y: 578.89), controlPoint2: CGPoint(x: 53.21, y: 524.84))
        shapePath.addCurveToPoint(CGPoint(x: 53.07, y: 507.4), controlPoint1: CGPoint(x: 53.02, y: 508.51), controlPoint2: CGPoint(x: 53.04, y: 507.96))
        shapePath.addLineToPoint(CGPoint(x: 60.24, y: 425.31))
        shapePath.addLineToPoint(CGPoint(x: 79.55, y: 425.31))
        shapePath.addLineToPoint(CGPoint(x: 86.39, y: 507.4))
        shapePath.addCurveToPoint(CGPoint(x: 86.43, y: 509.07), controlPoint1: CGPoint(x: 86.43, y: 507.96), controlPoint2: CGPoint(x: 86.44, y: 508.51))
        shapePath.addCurveToPoint(CGPoint(x: 78.22, y: 578.89), controlPoint1: CGPoint(x: 86.25, y: 524.84), controlPoint2: CGPoint(x: 78.22, y: 578.89))
        shapePath.addLineToPoint(CGPoint(x: 61.25, y: 578.89))
        shapePath.addLineToPoint(CGPoint(x: 61.25, y: 578.89))
        shapePath.closePath()
        shapePath.miterLimit = 4;

        shapePath.usesEvenOddFillRule = true;

        fillColor.setFill()
        shapePath.fill()


        //// Shape 2 Drawing
        let shape2Path = UIBezierPath()
        shape2Path.moveToPoint(CGPoint(x: 61.25, y: 578.89))
        shape2Path.addCurveToPoint(CGPoint(x: 53.03, y: 509.07), controlPoint1: CGPoint(x: 61.25, y: 578.89), controlPoint2: CGPoint(x: 53.21, y: 524.84))
        shape2Path.addCurveToPoint(CGPoint(x: 53.07, y: 507.4), controlPoint1: CGPoint(x: 53.02, y: 508.51), controlPoint2: CGPoint(x: 53.04, y: 507.96))
        shape2Path.addLineToPoint(CGPoint(x: 60.24, y: 425.31))
        shape2Path.addLineToPoint(CGPoint(x: 79.55, y: 425.31))
        shape2Path.addLineToPoint(CGPoint(x: 86.39, y: 507.4))
        shape2Path.addCurveToPoint(CGPoint(x: 86.43, y: 509.07), controlPoint1: CGPoint(x: 86.43, y: 507.96), controlPoint2: CGPoint(x: 86.44, y: 508.51))
        shape2Path.addCurveToPoint(CGPoint(x: 78.22, y: 578.89), controlPoint1: CGPoint(x: 86.25, y: 524.84), controlPoint2: CGPoint(x: 78.22, y: 578.89))
        shape2Path.addLineToPoint(CGPoint(x: 61.25, y: 578.89))
        shape2Path.addLineToPoint(CGPoint(x: 61.25, y: 578.89))
        shape2Path.closePath()
        shape2Path.miterLimit = 4;

        shape2Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape2Path.lineWidth = 5.43
        shape2Path.stroke()


        //// Shape 3 Drawing
        let shape3Path = UIBezierPath()
        shape3Path.moveToPoint(CGPoint(x: 69.73, y: 569.46))
        shape3Path.addCurveToPoint(CGPoint(x: 39.14, y: 600.04), controlPoint1: CGPoint(x: 52.84, y: 569.46), controlPoint2: CGPoint(x: 39.14, y: 583.15))
        shape3Path.addLineToPoint(CGPoint(x: 100.32, y: 600.04))
        shape3Path.addCurveToPoint(CGPoint(x: 69.73, y: 569.46), controlPoint1: CGPoint(x: 100.32, y: 583.15), controlPoint2: CGPoint(x: 86.62, y: 569.46))
        shape3Path.closePath()
        shape3Path.miterLimit = 4;

        shape3Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape3Path.fill()


        //// Shape 4 Drawing
        let shape4Path = UIBezierPath()
        shape4Path.moveToPoint(CGPoint(x: 69.73, y: 569.46))
        shape4Path.addCurveToPoint(CGPoint(x: 39.14, y: 600.04), controlPoint1: CGPoint(x: 52.84, y: 569.46), controlPoint2: CGPoint(x: 39.14, y: 583.15))
        shape4Path.addLineToPoint(CGPoint(x: 100.32, y: 600.04))
        shape4Path.addCurveToPoint(CGPoint(x: 69.73, y: 569.46), controlPoint1: CGPoint(x: 100.32, y: 583.15), controlPoint2: CGPoint(x: 86.62, y: 569.46))
        shape4Path.addLineToPoint(CGPoint(x: 69.73, y: 569.46))
        shape4Path.closePath()
        shape4Path.miterLimit = 4;

        shape4Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape4Path.lineWidth = 5.43
        shape4Path.stroke()


        //// Rectangle-path Drawing
        let rectanglepathPath = UIBezierPath(rect: CGRect(x: 39.14, y: 600.04, width: 60.92, height: 12.67))
        fillColor6.setFill()
        rectanglepathPath.fill()


        //// Rectangle-path 2 Drawing
        let rectanglepath2Path = UIBezierPath(rect: CGRect(x: 39.14, y: 600.04, width: 60.92, height: 12.67))
        strokeColor.setStroke()
        rectanglepath2Path.lineWidth = 5.43
        rectanglepath2Path.stroke()


        //// Shape 5 Drawing
        let shape5Path = UIBezierPath()
        shape5Path.moveToPoint(CGPoint(x: 136.43, y: 578.89))
        shape5Path.addCurveToPoint(CGPoint(x: 128.21, y: 509.07), controlPoint1: CGPoint(x: 136.43, y: 578.89), controlPoint2: CGPoint(x: 128.4, y: 524.84))
        shape5Path.addCurveToPoint(CGPoint(x: 128.25, y: 507.4), controlPoint1: CGPoint(x: 128.21, y: 508.51), controlPoint2: CGPoint(x: 128.22, y: 507.96))
        shape5Path.addLineToPoint(CGPoint(x: 135.43, y: 425.31))
        shape5Path.addLineToPoint(CGPoint(x: 154.73, y: 425.31))
        shape5Path.addLineToPoint(CGPoint(x: 161.57, y: 507.4))
        shape5Path.addCurveToPoint(CGPoint(x: 161.61, y: 509.07), controlPoint1: CGPoint(x: 161.61, y: 507.96), controlPoint2: CGPoint(x: 161.62, y: 508.51))
        shape5Path.addCurveToPoint(CGPoint(x: 153.4, y: 578.89), controlPoint1: CGPoint(x: 161.43, y: 524.84), controlPoint2: CGPoint(x: 153.4, y: 578.89))
        shape5Path.addLineToPoint(CGPoint(x: 136.43, y: 578.89))
        shape5Path.addLineToPoint(CGPoint(x: 136.43, y: 578.89))
        shape5Path.closePath()
        shape5Path.miterLimit = 4;

        shape5Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape5Path.fill()


        //// Shape 6 Drawing
        let shape6Path = UIBezierPath()
        shape6Path.moveToPoint(CGPoint(x: 136.43, y: 578.89))
        shape6Path.addCurveToPoint(CGPoint(x: 128.21, y: 509.07), controlPoint1: CGPoint(x: 136.43, y: 578.89), controlPoint2: CGPoint(x: 128.4, y: 524.84))
        shape6Path.addCurveToPoint(CGPoint(x: 128.25, y: 507.4), controlPoint1: CGPoint(x: 128.21, y: 508.51), controlPoint2: CGPoint(x: 128.22, y: 507.96))
        shape6Path.addLineToPoint(CGPoint(x: 135.43, y: 425.31))
        shape6Path.addLineToPoint(CGPoint(x: 154.73, y: 425.31))
        shape6Path.addLineToPoint(CGPoint(x: 161.57, y: 507.4))
        shape6Path.addCurveToPoint(CGPoint(x: 161.61, y: 509.07), controlPoint1: CGPoint(x: 161.61, y: 507.96), controlPoint2: CGPoint(x: 161.62, y: 508.51))
        shape6Path.addCurveToPoint(CGPoint(x: 153.4, y: 578.89), controlPoint1: CGPoint(x: 161.43, y: 524.84), controlPoint2: CGPoint(x: 153.4, y: 578.89))
        shape6Path.addLineToPoint(CGPoint(x: 136.43, y: 578.89))
        shape6Path.addLineToPoint(CGPoint(x: 136.43, y: 578.89))
        shape6Path.closePath()
        shape6Path.miterLimit = 4;

        shape6Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape6Path.lineWidth = 5.43
        shape6Path.stroke()


        //// Shape 7 Drawing
        let shape7Path = UIBezierPath()
        shape7Path.moveToPoint(CGPoint(x: 144.91, y: 569.46))
        shape7Path.addCurveToPoint(CGPoint(x: 114.32, y: 600.04), controlPoint1: CGPoint(x: 128.02, y: 569.46), controlPoint2: CGPoint(x: 114.32, y: 583.15))
        shape7Path.addLineToPoint(CGPoint(x: 175.5, y: 600.04))
        shape7Path.addCurveToPoint(CGPoint(x: 144.91, y: 569.46), controlPoint1: CGPoint(x: 175.5, y: 583.15), controlPoint2: CGPoint(x: 161.81, y: 569.46))
        shape7Path.closePath()
        shape7Path.miterLimit = 4;

        shape7Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape7Path.fill()


        //// Shape 8 Drawing
        let shape8Path = UIBezierPath()
        shape8Path.moveToPoint(CGPoint(x: 144.91, y: 569.46))
        shape8Path.addCurveToPoint(CGPoint(x: 114.32, y: 600.04), controlPoint1: CGPoint(x: 128.02, y: 569.46), controlPoint2: CGPoint(x: 114.32, y: 583.15))
        shape8Path.addLineToPoint(CGPoint(x: 175.5, y: 600.04))
        shape8Path.addCurveToPoint(CGPoint(x: 144.91, y: 569.46), controlPoint1: CGPoint(x: 175.5, y: 583.15), controlPoint2: CGPoint(x: 161.81, y: 569.46))
        shape8Path.addLineToPoint(CGPoint(x: 144.91, y: 569.46))
        shape8Path.closePath()
        shape8Path.miterLimit = 4;

        shape8Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape8Path.lineWidth = 5.43
        shape8Path.stroke()


        //// Rectangle-path 3 Drawing
        let rectanglepath3Path = UIBezierPath(rect: CGRect(x: 114.32, y: 600.04, width: 60.92, height: 12.67))
        fillColor6.setFill()
        rectanglepath3Path.fill()


        //// Rectangle-path 4 Drawing
        let rectanglepath4Path = UIBezierPath(rect: CGRect(x: 114.32, y: 600.04, width: 60.92, height: 12.67))
        strokeColor.setStroke()
        rectanglepath4Path.lineWidth = 5.43
        rectanglepath4Path.stroke()




        //// Shape 9 Drawing
        let shape9Path = UIBezierPath()
        shape9Path.moveToPoint(CGPoint(x: 52.27, y: 415.28))
        shape9Path.addCurveToPoint(CGPoint(x: 37.2, y: 384.75), controlPoint1: CGPoint(x: 40.94, y: 408.58), controlPoint2: CGPoint(x: 37.2, y: 398.87))
        shape9Path.addLineToPoint(CGPoint(x: 178.21, y: 384.75))
        shape9Path.addCurveToPoint(CGPoint(x: 163.13, y: 415.28), controlPoint1: CGPoint(x: 178.21, y: 397.19), controlPoint2: CGPoint(x: 172.3, y: 408.25))
        shape9Path.addLineToPoint(CGPoint(x: 167.77, y: 433.08))
        shape9Path.addLineToPoint(CGPoint(x: 167.77, y: 482.54))
        shape9Path.addLineToPoint(CGPoint(x: 127.61, y: 482.54))
        shape9Path.addLineToPoint(CGPoint(x: 127.61, y: 424.05))
        shape9Path.addCurveToPoint(CGPoint(x: 108.3, y: 403.21), controlPoint1: CGPoint(x: 127.61, y: 413.12), controlPoint2: CGPoint(x: 119.21, y: 403.73))
        shape9Path.addCurveToPoint(CGPoint(x: 87.04, y: 423.48), controlPoint1: CGPoint(x: 96.65, y: 402.66), controlPoint2: CGPoint(x: 87.04, y: 411.94))
        shape9Path.addLineToPoint(CGPoint(x: 87.04, y: 482.54))
        shape9Path.addLineToPoint(CGPoint(x: 46.88, y: 482.54))
        shape9Path.addLineToPoint(CGPoint(x: 46.88, y: 433.08))
        shape9Path.addLineToPoint(CGPoint(x: 52.27, y: 415.28))
        shape9Path.closePath()
        shape9Path.miterLimit = 4;

        shape9Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape9Path.fill()
        strokeColor3.setStroke()
        shape9Path.lineWidth = 5.43
        shape9Path.stroke()


        //// Shape 10 Drawing
        let shape10Path = UIBezierPath()
        shape10Path.moveToPoint(CGPoint(x: 36.21, y: 380.74))
        shape10Path.addLineToPoint(CGPoint(x: 36.26, y: 380.74))
        shape10Path.addLineToPoint(CGPoint(x: 36.57, y: 345.35))
        shape10Path.addCurveToPoint(CGPoint(x: 37.31, y: 320.15), controlPoint1: CGPoint(x: 37.06, y: 337), controlPoint2: CGPoint(x: 37.31, y: 328.58))
        shape10Path.addLineToPoint(CGPoint(x: 37.31, y: 263.85))
        shape10Path.addLineToPoint(CGPoint(x: 8.65, y: 263.85))
        shape10Path.addLineToPoint(CGPoint(x: 8.65, y: 320.15))
        shape10Path.addCurveToPoint(CGPoint(x: 9.39, y: 345.35), controlPoint1: CGPoint(x: 8.65, y: 328.58), controlPoint2: CGPoint(x: 8.9, y: 337))
        shape10Path.addLineToPoint(CGPoint(x: 9.95, y: 380.74))
        shape10Path.addLineToPoint(CGPoint(x: 9.89, y: 380.74))
        shape10Path.addLineToPoint(CGPoint(x: 3.62, y: 393))
        shape10Path.addLineToPoint(CGPoint(x: 3.62, y: 412))
        shape10Path.addCurveToPoint(CGPoint(x: 15.17, y: 423.55), controlPoint1: CGPoint(x: 3.62, y: 418.38), controlPoint2: CGPoint(x: 8.79, y: 423.55))
        shape10Path.addLineToPoint(CGPoint(x: 36.21, y: 423.55))
        shape10Path.addLineToPoint(CGPoint(x: 36.21, y: 403.37))
        shape10Path.addLineToPoint(CGPoint(x: 45.1, y: 403.37))
        shape10Path.addLineToPoint(CGPoint(x: 45.1, y: 389.64))
        shape10Path.addLineToPoint(CGPoint(x: 36.21, y: 380.74))
        shape10Path.addLineToPoint(CGPoint(x: 36.21, y: 380.74))
        shape10Path.closePath()
        shape10Path.miterLimit = 4;

        shape10Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape10Path.fill()


        //// Shape 11 Drawing
        let shape11Path = UIBezierPath()
        shape11Path.moveToPoint(CGPoint(x: 36.21, y: 380.74))
        shape11Path.addLineToPoint(CGPoint(x: 36.26, y: 380.74))
        shape11Path.addLineToPoint(CGPoint(x: 36.57, y: 345.35))
        shape11Path.addCurveToPoint(CGPoint(x: 37.31, y: 320.15), controlPoint1: CGPoint(x: 37.06, y: 337), controlPoint2: CGPoint(x: 37.31, y: 328.58))
        shape11Path.addLineToPoint(CGPoint(x: 37.31, y: 263.85))
        shape11Path.addLineToPoint(CGPoint(x: 8.65, y: 263.85))
        shape11Path.addLineToPoint(CGPoint(x: 8.65, y: 320.15))
        shape11Path.addCurveToPoint(CGPoint(x: 9.39, y: 345.35), controlPoint1: CGPoint(x: 8.65, y: 328.58), controlPoint2: CGPoint(x: 8.9, y: 337))
        shape11Path.addLineToPoint(CGPoint(x: 9.95, y: 380.74))
        shape11Path.addLineToPoint(CGPoint(x: 9.89, y: 380.74))
        shape11Path.addLineToPoint(CGPoint(x: 3.62, y: 393))
        shape11Path.addLineToPoint(CGPoint(x: 3.62, y: 412))
        shape11Path.addCurveToPoint(CGPoint(x: 15.17, y: 423.55), controlPoint1: CGPoint(x: 3.62, y: 418.38), controlPoint2: CGPoint(x: 8.79, y: 423.55))
        shape11Path.addLineToPoint(CGPoint(x: 36.21, y: 423.55))
        shape11Path.addLineToPoint(CGPoint(x: 36.21, y: 403.37))
        shape11Path.addLineToPoint(CGPoint(x: 45.1, y: 403.37))
        shape11Path.addLineToPoint(CGPoint(x: 45.1, y: 389.64))
        shape11Path.addLineToPoint(CGPoint(x: 36.21, y: 380.74))
        shape11Path.addLineToPoint(CGPoint(x: 36.21, y: 380.74))
        shape11Path.closePath()
        shape11Path.miterLimit = 4;

        shape11Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape11Path.lineWidth = 5.43
        shape11Path.stroke()


        //// Clipped
        //// path-1 Drawing


        //// SVGID_5_


        //// Group 9
        //// path-3 Drawing


        //// SVGID_7_


        //// Rectangle-path 5 Drawing
        let rectanglepath5Path = UIBezierPath(rect: CGRect(x: 8.59, y: 263.86, width: 28.63, height: 12.91))
        fillColor12.setFill()
        rectanglepath5Path.fill()






        //// Shape 12 Drawing
        let shape12Path = UIBezierPath()
        shape12Path.moveToPoint(CGPoint(x: 179.2, y: 380.74))
        shape12Path.addLineToPoint(CGPoint(x: 179.15, y: 380.74))
        shape12Path.addLineToPoint(CGPoint(x: 178.84, y: 345.35))
        shape12Path.addCurveToPoint(CGPoint(x: 178.09, y: 320.15), controlPoint1: CGPoint(x: 178.34, y: 337), controlPoint2: CGPoint(x: 178.09, y: 328.58))
        shape12Path.addLineToPoint(CGPoint(x: 178.09, y: 263.85))
        shape12Path.addLineToPoint(CGPoint(x: 206.76, y: 263.85))
        shape12Path.addLineToPoint(CGPoint(x: 206.76, y: 320.15))
        shape12Path.addCurveToPoint(CGPoint(x: 206.01, y: 345.35), controlPoint1: CGPoint(x: 206.76, y: 328.58), controlPoint2: CGPoint(x: 206.51, y: 337))
        shape12Path.addLineToPoint(CGPoint(x: 205.46, y: 380.74))
        shape12Path.addLineToPoint(CGPoint(x: 205.52, y: 380.74))
        shape12Path.addLineToPoint(CGPoint(x: 211.79, y: 393))
        shape12Path.addLineToPoint(CGPoint(x: 211.79, y: 412))
        shape12Path.addCurveToPoint(CGPoint(x: 200.24, y: 423.55), controlPoint1: CGPoint(x: 211.79, y: 418.38), controlPoint2: CGPoint(x: 206.62, y: 423.55))
        shape12Path.addLineToPoint(CGPoint(x: 179.2, y: 423.55))
        shape12Path.addLineToPoint(CGPoint(x: 179.2, y: 403.37))
        shape12Path.addLineToPoint(CGPoint(x: 170.31, y: 403.37))
        shape12Path.addLineToPoint(CGPoint(x: 170.31, y: 389.64))
        shape12Path.addLineToPoint(CGPoint(x: 179.2, y: 380.74))
        shape12Path.addLineToPoint(CGPoint(x: 179.2, y: 380.74))
        shape12Path.closePath()
        shape12Path.miterLimit = 4;

        shape12Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape12Path.fill()


        //// Shape 13 Drawing
        let shape13Path = UIBezierPath()
        shape13Path.moveToPoint(CGPoint(x: 179.2, y: 380.74))
        shape13Path.addLineToPoint(CGPoint(x: 179.15, y: 380.74))
        shape13Path.addLineToPoint(CGPoint(x: 178.84, y: 345.35))
        shape13Path.addCurveToPoint(CGPoint(x: 178.09, y: 320.15), controlPoint1: CGPoint(x: 178.34, y: 337), controlPoint2: CGPoint(x: 178.09, y: 328.58))
        shape13Path.addLineToPoint(CGPoint(x: 178.09, y: 263.85))
        shape13Path.addLineToPoint(CGPoint(x: 206.76, y: 263.85))
        shape13Path.addLineToPoint(CGPoint(x: 206.76, y: 320.15))
        shape13Path.addCurveToPoint(CGPoint(x: 206.01, y: 345.35), controlPoint1: CGPoint(x: 206.76, y: 328.58), controlPoint2: CGPoint(x: 206.51, y: 337))
        shape13Path.addLineToPoint(CGPoint(x: 205.46, y: 380.74))
        shape13Path.addLineToPoint(CGPoint(x: 205.52, y: 380.74))
        shape13Path.addLineToPoint(CGPoint(x: 211.79, y: 393))
        shape13Path.addLineToPoint(CGPoint(x: 211.79, y: 412))
        shape13Path.addCurveToPoint(CGPoint(x: 200.24, y: 423.55), controlPoint1: CGPoint(x: 211.79, y: 418.38), controlPoint2: CGPoint(x: 206.62, y: 423.55))
        shape13Path.addLineToPoint(CGPoint(x: 179.2, y: 423.55))
        shape13Path.addLineToPoint(CGPoint(x: 179.2, y: 403.37))
        shape13Path.addLineToPoint(CGPoint(x: 170.31, y: 403.37))
        shape13Path.addLineToPoint(CGPoint(x: 170.31, y: 389.64))
        shape13Path.addLineToPoint(CGPoint(x: 179.2, y: 380.74))
        shape13Path.addLineToPoint(CGPoint(x: 179.2, y: 380.74))
        shape13Path.closePath()
        shape13Path.miterLimit = 4;

        shape13Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape13Path.lineWidth = 5.43
        shape13Path.stroke()


        //// Clipped 2
        //// path-5 Drawing


        //// SVGID_9_


        //// Group 13
        //// path-7 Drawing


        //// SVGID_11_


        //// Rectangle-path 6 Drawing
        let rectanglepath6Path = UIBezierPath(rect: CGRect(x: 178.19, y: 263.86, width: 28.62, height: 12.91))
        fillColor12.setFill()
        rectanglepath6Path.fill()






        //// Shape 14 Drawing
        let shape14Path = UIBezierPath()
        shape14Path.moveToPoint(CGPoint(x: 107.7, y: 142.68))
        shape14Path.addLineToPoint(CGPoint(x: 107.7, y: 142.68))
        shape14Path.addCurveToPoint(CGPoint(x: 3.87, y: 247.5), controlPoint1: CGPoint(x: 52.53, y: 142.68), controlPoint2: CGPoint(x: 6.96, y: 185.64))
        shape14Path.addLineToPoint(CGPoint(x: 3.62, y: 263.85))
        shape14Path.addLineToPoint(CGPoint(x: 211.79, y: 263.85))
        shape14Path.addLineToPoint(CGPoint(x: 211.54, y: 247.5))
        shape14Path.addCurveToPoint(CGPoint(x: 107.7, y: 142.68), controlPoint1: CGPoint(x: 208.45, y: 185.64), controlPoint2: CGPoint(x: 162.88, y: 142.68))
        shape14Path.closePath()
        shape14Path.miterLimit = 4;

        shape14Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape14Path.fill()


        //// Shape 15 Drawing
        let shape15Path = UIBezierPath()
        shape15Path.moveToPoint(CGPoint(x: 107.7, y: 142.68))
        shape15Path.addLineToPoint(CGPoint(x: 107.7, y: 142.68))
        shape15Path.addCurveToPoint(CGPoint(x: 3.87, y: 247.5), controlPoint1: CGPoint(x: 52.53, y: 142.68), controlPoint2: CGPoint(x: 6.96, y: 185.64))
        shape15Path.addLineToPoint(CGPoint(x: 3.62, y: 263.85))
        shape15Path.addLineToPoint(CGPoint(x: 211.79, y: 263.85))
        shape15Path.addLineToPoint(CGPoint(x: 211.54, y: 247.5))
        shape15Path.addCurveToPoint(CGPoint(x: 107.7, y: 142.68), controlPoint1: CGPoint(x: 208.45, y: 185.64), controlPoint2: CGPoint(x: 162.88, y: 142.68))
        shape15Path.addLineToPoint(CGPoint(x: 107.7, y: 142.68))
        shape15Path.closePath()
        shape15Path.miterLimit = 4;

        shape15Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape15Path.lineWidth = 5.43
        shape15Path.stroke()


        //// Shape 16 Drawing
        let shape16Path = UIBezierPath()
        shape16Path.moveToPoint(CGPoint(x: 108.38, y: 176.63))
        shape16Path.addLineToPoint(CGPoint(x: 108.38, y: 176.63))
        shape16Path.addCurveToPoint(CGPoint(x: 88.76, y: 157.01), controlPoint1: CGPoint(x: 97.59, y: 176.63), controlPoint2: CGPoint(x: 88.76, y: 167.8))
        shape16Path.addLineToPoint(CGPoint(x: 88.76, y: 109.94))
        shape16Path.addCurveToPoint(CGPoint(x: 108.38, y: 90.32), controlPoint1: CGPoint(x: 88.76, y: 99.15), controlPoint2: CGPoint(x: 97.59, y: 90.32))
        shape16Path.addCurveToPoint(CGPoint(x: 127.99, y: 109.94), controlPoint1: CGPoint(x: 119.17, y: 90.32), controlPoint2: CGPoint(x: 127.99, y: 99.15))
        shape16Path.addLineToPoint(CGPoint(x: 127.99, y: 157.01))
        shape16Path.addCurveToPoint(CGPoint(x: 108.38, y: 176.63), controlPoint1: CGPoint(x: 128, y: 167.8), controlPoint2: CGPoint(x: 119.17, y: 176.63))
        shape16Path.closePath()
        shape16Path.miterLimit = 4;

        shape16Path.usesEvenOddFillRule = true;

        fillColor.setFill()
        shape16Path.fill()


        //// Shape 17 Drawing
        let shape17Path = UIBezierPath()
        shape17Path.moveToPoint(CGPoint(x: 108.38, y: 176.63))
        shape17Path.addLineToPoint(CGPoint(x: 108.38, y: 176.63))
        shape17Path.addCurveToPoint(CGPoint(x: 88.76, y: 157.01), controlPoint1: CGPoint(x: 97.59, y: 176.63), controlPoint2: CGPoint(x: 88.76, y: 167.8))
        shape17Path.addLineToPoint(CGPoint(x: 88.76, y: 109.94))
        shape17Path.addCurveToPoint(CGPoint(x: 108.38, y: 90.32), controlPoint1: CGPoint(x: 88.76, y: 99.15), controlPoint2: CGPoint(x: 97.59, y: 90.32))
        shape17Path.addCurveToPoint(CGPoint(x: 127.99, y: 109.94), controlPoint1: CGPoint(x: 119.17, y: 90.32), controlPoint2: CGPoint(x: 127.99, y: 99.15))
        shape17Path.addLineToPoint(CGPoint(x: 127.99, y: 157.01))
        shape17Path.addCurveToPoint(CGPoint(x: 108.38, y: 176.63), controlPoint1: CGPoint(x: 128, y: 167.8), controlPoint2: CGPoint(x: 119.17, y: 176.63))
        shape17Path.addLineToPoint(CGPoint(x: 108.38, y: 176.63))
        shape17Path.closePath()
        shape17Path.miterLimit = 4;

        shape17Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape17Path.lineWidth = 5.43
        shape17Path.stroke()


        //// Shape 18 Drawing
        let shape18Path = UIBezierPath(ovalInRect: CGRect(x: 20.5, y: 70.55, width: 24.9, height: 24.9))
        fillColor.setFill()
        shape18Path.fill()


        //// Oval 3 Drawing
        let oval3Path = UIBezierPath(ovalInRect: CGRect(x: 20.46, y: 70.54, width: 24.95, height: 24.95))
        strokeColor.setStroke()
        oval3Path.lineWidth = 5.43
        oval3Path.stroke()


        //// Shape 19 Drawing
        let shape19Path = UIBezierPath(ovalInRect: CGRect(x: 170, y: 70.55, width: 24.9, height: 24.9))
        fillColor.setFill()
        shape19Path.fill()


        //// Oval 6 Drawing
        let oval6Path = UIBezierPath(ovalInRect: CGRect(x: 169.99, y: 70.54, width: 24.95, height: 24.95))
        strokeColor.setStroke()
        oval6Path.lineWidth = 5.43
        oval6Path.stroke()


        //// Shape 20 Drawing
        let shape20Path = UIBezierPath(ovalInRect: CGRect(x: 33.2, y: 3.55, width: 150.4, height: 150.4))
        fillColor.setFill()
        shape20Path.fill()


        //// Shape 21 Drawing
        let shape21Path = UIBezierPath(ovalInRect: CGRect(x: 33.2, y: 3.55, width: 150.4, height: 150.4))
        strokeColor.setStroke()
        shape21Path.lineWidth = 5.43
        shape21Path.stroke()


        //// Shape 22 Drawing
        let shape22Path = UIBezierPath(ovalInRect: CGRect(x: 76.8, y: 70.3, width: 9.6, height: 9.6))
        fillColor11.setFill()
        shape22Path.fill()


        //// Shape 23 Drawing
        let shape23Path = UIBezierPath(ovalInRect: CGRect(x: 130.35, y: 70.3, width: 9.6, height: 9.6))
        fillColor11.setFill()
        shape23Path.fill()


        //// Shape 24 Drawing
        let shape24Path = UIBezierPath()
        shape24Path.moveToPoint(CGPoint(x: 91.74, y: 120.21))
        shape24Path.addCurveToPoint(CGPoint(x: 108.38, y: 124.34), controlPoint1: CGPoint(x: 96.7, y: 122.85), controlPoint2: CGPoint(x: 102.37, y: 124.34))
        shape24Path.addCurveToPoint(CGPoint(x: 125.02, y: 120.21), controlPoint1: CGPoint(x: 114.39, y: 124.34), controlPoint2: CGPoint(x: 120.05, y: 122.85))
        shape24Path.miterLimit = 4;

        shape24Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape24Path.lineWidth = 5.43
        shape24Path.stroke()


        //// Shape 25 Drawing
        let shape25Path = UIBezierPath()
        shape25Path.moveToPoint(CGPoint(x: 91.92, y: 60.87))
        shape25Path.addCurveToPoint(CGPoint(x: 81.62, y: 58.3), controlPoint1: CGPoint(x: 88.85, y: 59.23), controlPoint2: CGPoint(x: 85.34, y: 58.3))
        shape25Path.addCurveToPoint(CGPoint(x: 71.32, y: 60.87), controlPoint1: CGPoint(x: 77.9, y: 58.3), controlPoint2: CGPoint(x: 74.39, y: 59.23))
        shape25Path.miterLimit = 4;

        shape25Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape25Path.lineWidth = 5.43
        shape25Path.stroke()


        //// Shape 26 Drawing
        let shape26Path = UIBezierPath()
        shape26Path.moveToPoint(CGPoint(x: 145.43, y: 60.87))
        shape26Path.addCurveToPoint(CGPoint(x: 135.13, y: 58.3), controlPoint1: CGPoint(x: 142.36, y: 59.23), controlPoint2: CGPoint(x: 138.86, y: 58.3))
        shape26Path.addCurveToPoint(CGPoint(x: 124.84, y: 60.87), controlPoint1: CGPoint(x: 131.41, y: 58.3), controlPoint2: CGPoint(x: 127.91, y: 59.23))
        shape26Path.miterLimit = 4;

        shape26Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape26Path.lineWidth = 5.43
        shape26Path.stroke()


        //// Shape 27 Drawing
        let shape27Path = UIBezierPath()
        shape27Path.moveToPoint(CGPoint(x: 108.54, y: 91.04))
        shape27Path.addLineToPoint(CGPoint(x: 108.54, y: 100.74))
        shape27Path.miterLimit = 4;

        shape27Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape27Path.lineWidth = 5.43
        shape27Path.stroke()


        //// Shape 28 Drawing
        let shape28Path = UIBezierPath()
        shape28Path.moveToPoint(CGPoint(x: 184.83, y: 249.28))
        shape28Path.addLineToPoint(CGPoint(x: 184.83, y: 285.29))
        shape28Path.addCurveToPoint(CGPoint(x: 182.99, y: 297.03), controlPoint1: CGPoint(x: 184.83, y: 289.27), controlPoint2: CGPoint(x: 184.21, y: 293.23))
        shape28Path.addLineToPoint(CGPoint(x: 166.51, y: 352.7))
        shape28Path.addLineToPoint(CGPoint(x: 48.9, y: 352.7))
        shape28Path.addLineToPoint(CGPoint(x: 32.42, y: 297.03))
        shape28Path.addCurveToPoint(CGPoint(x: 30.58, y: 285.29), controlPoint1: CGPoint(x: 31.2, y: 293.23), controlPoint2: CGPoint(x: 30.58, y: 289.27))
        shape28Path.addLineToPoint(CGPoint(x: 30.58, y: 249.28))
        shape28Path.miterLimit = 4;

        shape28Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape28Path.fill()


        //// Shape 29 Drawing
        let shape29Path = UIBezierPath()
        shape29Path.moveToPoint(CGPoint(x: 175.14, y: 323.54))
        shape29Path.addCurveToPoint(CGPoint(x: 180.79, y: 343.61), controlPoint1: CGPoint(x: 178.83, y: 329.58), controlPoint2: CGPoint(x: 180.79, y: 336.52))
        shape29Path.addLineToPoint(CGPoint(x: 180.79, y: 372.01))
        shape29Path.addLineToPoint(CGPoint(x: 107.7, y: 372.01))
        shape29Path.addLineToPoint(CGPoint(x: 34.62, y: 372.01))
        shape29Path.addLineToPoint(CGPoint(x: 34.62, y: 343.61))
        shape29Path.addCurveToPoint(CGPoint(x: 40.26, y: 323.55), controlPoint1: CGPoint(x: 34.62, y: 336.52), controlPoint2: CGPoint(x: 36.58, y: 329.58))
        shape29Path.miterLimit = 4;

        shape29Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape29Path.fill()


        //// Shape 30 Drawing
        let shape30Path = UIBezierPath()
        shape30Path.moveToPoint(CGPoint(x: 175.14, y: 323.54))
        shape30Path.addCurveToPoint(CGPoint(x: 180.79, y: 343.61), controlPoint1: CGPoint(x: 178.83, y: 329.58), controlPoint2: CGPoint(x: 180.79, y: 336.52))
        shape30Path.addLineToPoint(CGPoint(x: 180.79, y: 372.01))
        shape30Path.addLineToPoint(CGPoint(x: 107.7, y: 372.01))
        shape30Path.addLineToPoint(CGPoint(x: 34.62, y: 372.01))
        shape30Path.addLineToPoint(CGPoint(x: 34.62, y: 343.61))
        shape30Path.addCurveToPoint(CGPoint(x: 40.26, y: 323.55), controlPoint1: CGPoint(x: 34.62, y: 336.52), controlPoint2: CGPoint(x: 36.58, y: 329.58))
        shape30Path.miterLimit = 4;

        shape30Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape30Path.lineWidth = 5.43
        shape30Path.stroke()


        //// Shape 31 Drawing
        let shape31Path = UIBezierPath()
        shape31Path.moveToPoint(CGPoint(x: 40.27, y: 323.55))
        shape31Path.addLineToPoint(CGPoint(x: 32.41, y: 297.03))
        shape31Path.addCurveToPoint(CGPoint(x: 30.58, y: 285.29), controlPoint1: CGPoint(x: 31.2, y: 293.23), controlPoint2: CGPoint(x: 30.58, y: 289.27))
        shape31Path.addLineToPoint(CGPoint(x: 30.58, y: 249.28))
        shape31Path.miterLimit = 4;

        shape31Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape31Path.fill()


        //// Shape 32 Drawing
        let shape32Path = UIBezierPath()
        shape32Path.moveToPoint(CGPoint(x: 40.27, y: 323.55))
        shape32Path.addLineToPoint(CGPoint(x: 32.41, y: 297.03))
        shape32Path.addCurveToPoint(CGPoint(x: 30.58, y: 285.29), controlPoint1: CGPoint(x: 31.2, y: 293.23), controlPoint2: CGPoint(x: 30.58, y: 289.27))
        shape32Path.addLineToPoint(CGPoint(x: 30.58, y: 249.28))
        shape32Path.miterLimit = 4;

        shape32Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape32Path.lineWidth = 5.43
        shape32Path.stroke()


        //// Shape 33 Drawing
        let shape33Path = UIBezierPath()
        shape33Path.moveToPoint(CGPoint(x: 184.83, y: 249.28))
        shape33Path.addLineToPoint(CGPoint(x: 184.83, y: 285.29))
        shape33Path.addCurveToPoint(CGPoint(x: 182.99, y: 297.03), controlPoint1: CGPoint(x: 184.83, y: 289.27), controlPoint2: CGPoint(x: 184.21, y: 293.23))
        shape33Path.addLineToPoint(CGPoint(x: 175.14, y: 323.55))
        shape33Path.miterLimit = 4;

        shape33Path.usesEvenOddFillRule = true;

        fillColor6.setFill()
        shape33Path.fill()


        //// Shape 34 Drawing
        let shape34Path = UIBezierPath()
        shape34Path.moveToPoint(CGPoint(x: 184.83, y: 249.28))
        shape34Path.addLineToPoint(CGPoint(x: 184.83, y: 285.29))
        shape34Path.addCurveToPoint(CGPoint(x: 182.99, y: 297.03), controlPoint1: CGPoint(x: 184.83, y: 289.27), controlPoint2: CGPoint(x: 184.21, y: 293.23))
        shape34Path.addLineToPoint(CGPoint(x: 175.14, y: 323.55))
        shape34Path.miterLimit = 4;

        shape34Path.usesEvenOddFillRule = true;

        strokeColor.setStroke()
        shape34Path.lineWidth = 5.43
        shape34Path.stroke()


        //// Shape 35 Drawing
        let shape35Path = UIBezierPath()
        shape35Path.moveToPoint(CGPoint(x: 59.4, y: 272.22))
        shape35Path.addCurveToPoint(CGPoint(x: 156.01, y: 272.22), controlPoint1: CGPoint(x: 106.13, y: 258.52), controlPoint2: CGPoint(x: 156.01, y: 272.22))
        shape35Path.miterLimit = 4;

        shape35Path.usesEvenOddFillRule = true;

        strokeColor2.setStroke()
        shape35Path.lineWidth = 5.43
        shape35Path.stroke()


        //// Rectangle-path 7 Drawing
        let rectanglepath7Path = UIBezierPath(rect: CGRect(x: 37.2, y: 371.93, width: 141, height: 12.82))
        fillColor6.setFill()
        rectanglepath7Path.fill()


        //// Rectangle-path 8 Drawing
        let rectanglepath8Path = UIBezierPath(rect: CGRect(x: 37.2, y: 371.93, width: 141, height: 12.82))
        strokeColor.setStroke()
        rectanglepath8Path.lineWidth = 5.43
        rectanglepath8Path.stroke()
    }

    //// Generated Images

    public class var imageOfBlue2: UIImage {
        if Cache.imageOfBlue2 != nil {
            return Cache.imageOfBlue2!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 41, height: 53), false, 0)
            JaemCharacterStyleKit.drawBlue2()

        Cache.imageOfBlue2 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return Cache.imageOfBlue2!
    }

    public class var imageOfBlue3: UIImage {
        if Cache.imageOfBlue3 != nil {
            return Cache.imageOfBlue3!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 41, height: 53), false, 0)
            JaemCharacterStyleKit.drawBlue3()

        Cache.imageOfBlue3 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return Cache.imageOfBlue3!
    }

    public class var imageOfBlue4: UIImage {
        if Cache.imageOfBlue4 != nil {
            return Cache.imageOfBlue4!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 41, height: 53), false, 0)
            JaemCharacterStyleKit.drawBlue4()

        Cache.imageOfBlue4 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return Cache.imageOfBlue4!
    }

    public class var imageOfBlue5: UIImage {
        if Cache.imageOfBlue5 != nil {
            return Cache.imageOfBlue5!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 41, height: 53), false, 0)
            JaemCharacterStyleKit.drawBlue5()

        Cache.imageOfBlue5 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return Cache.imageOfBlue5!
    }

    public class var imageOfGray1: UIImage {
        if Cache.imageOfGray1 != nil {
            return Cache.imageOfGray1!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 35, height: 44), false, 0)
            JaemCharacterStyleKit.drawGray1()

        Cache.imageOfGray1 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return Cache.imageOfGray1!
    }

    public class var imageOfGray2: UIImage {
        if Cache.imageOfGray2 != nil {
            return Cache.imageOfGray2!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 35, height: 44), false, 0)
            JaemCharacterStyleKit.drawGray2()

        Cache.imageOfGray2 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return Cache.imageOfGray2!
    }

    public class var imageOfGray3: UIImage {
        if Cache.imageOfGray3 != nil {
            return Cache.imageOfGray3!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 34, height: 44), false, 0)
            JaemCharacterStyleKit.drawGray3()

        Cache.imageOfGray3 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return Cache.imageOfGray3!
    }

    public class var imageOfGray4: UIImage {
        if Cache.imageOfGray4 != nil {
            return Cache.imageOfGray4!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 35, height: 44), false, 0)
            JaemCharacterStyleKit.drawGray4()

        Cache.imageOfGray4 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return Cache.imageOfGray4!
    }

    public class var imageOfGray5: UIImage {
        if Cache.imageOfGray5 != nil {
            return Cache.imageOfGray5!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 34, height: 44), false, 0)
            JaemCharacterStyleKit.drawGray5()

        Cache.imageOfGray5 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return Cache.imageOfGray5!
    }

    public class var imageOfBlue1: UIImage {
        if Cache.imageOfBlue1 != nil {
            return Cache.imageOfBlue1!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 41, height: 53), false, 0)
            JaemCharacterStyleKit.drawBlue1()

        Cache.imageOfBlue1 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return Cache.imageOfBlue1!
    }

    public class var imageOfBasicFemale: UIImage {
        if Cache.imageOfBasicFemale != nil {
            return Cache.imageOfBasicFemale!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 184, height: 582), false, 0)
            JaemCharacterStyleKit.drawBasicFemale()

        Cache.imageOfBasicFemale = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return Cache.imageOfBasicFemale!
    }

    public class var imageOfBasicMale: UIImage {
        if Cache.imageOfBasicMale != nil {
            return Cache.imageOfBasicMale!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 215, height: 616), false, 0)
            JaemCharacterStyleKit.drawBasicMale()

        Cache.imageOfBasicMale = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return Cache.imageOfBasicMale!
    }

    //// Customization Infrastructure

    @IBOutlet var blue2Targets: [AnyObject]! {
        get { return Cache.blue2Targets }
        set {
            Cache.blue2Targets = newValue
            for target: AnyObject in newValue {
                target.performSelector(NSSelectorFromString("setImage:"), withObject: JaemCharacterStyleKit.imageOfBlue2)
            }
        }
    }

    @IBOutlet var blue3Targets: [AnyObject]! {
        get { return Cache.blue3Targets }
        set {
            Cache.blue3Targets = newValue
            for target: AnyObject in newValue {
                target.performSelector(NSSelectorFromString("setImage:"), withObject: JaemCharacterStyleKit.imageOfBlue3)
            }
        }
    }

    @IBOutlet var blue4Targets: [AnyObject]! {
        get { return Cache.blue4Targets }
        set {
            Cache.blue4Targets = newValue
            for target: AnyObject in newValue {
                target.performSelector(NSSelectorFromString("setImage:"), withObject: JaemCharacterStyleKit.imageOfBlue4)
            }
        }
    }

    @IBOutlet var blue5Targets: [AnyObject]! {
        get { return Cache.blue5Targets }
        set {
            Cache.blue5Targets = newValue
            for target: AnyObject in newValue {
                target.performSelector(NSSelectorFromString("setImage:"), withObject: JaemCharacterStyleKit.imageOfBlue5)
            }
        }
    }

    @IBOutlet var gray1Targets: [AnyObject]! {
        get { return Cache.gray1Targets }
        set {
            Cache.gray1Targets = newValue
            for target: AnyObject in newValue {
                target.performSelector(NSSelectorFromString("setImage:"), withObject: JaemCharacterStyleKit.imageOfGray1)
            }
        }
    }

    @IBOutlet var gray2Targets: [AnyObject]! {
        get { return Cache.gray2Targets }
        set {
            Cache.gray2Targets = newValue
            for target: AnyObject in newValue {
                target.performSelector(NSSelectorFromString("setImage:"), withObject: JaemCharacterStyleKit.imageOfGray2)
            }
        }
    }

    @IBOutlet var gray3Targets: [AnyObject]! {
        get { return Cache.gray3Targets }
        set {
            Cache.gray3Targets = newValue
            for target: AnyObject in newValue {
                target.performSelector(NSSelectorFromString("setImage:"), withObject: JaemCharacterStyleKit.imageOfGray3)
            }
        }
    }

    @IBOutlet var gray4Targets: [AnyObject]! {
        get { return Cache.gray4Targets }
        set {
            Cache.gray4Targets = newValue
            for target: AnyObject in newValue {
                target.performSelector(NSSelectorFromString("setImage:"), withObject: JaemCharacterStyleKit.imageOfGray4)
            }
        }
    }

    @IBOutlet var gray5Targets: [AnyObject]! {
        get { return Cache.gray5Targets }
        set {
            Cache.gray5Targets = newValue
            for target: AnyObject in newValue {
                target.performSelector(NSSelectorFromString("setImage:"), withObject: JaemCharacterStyleKit.imageOfGray5)
            }
        }
    }

    @IBOutlet var blue1Targets: [AnyObject]! {
        get { return Cache.blue1Targets }
        set {
            Cache.blue1Targets = newValue
            for target: AnyObject in newValue {
                target.performSelector(NSSelectorFromString("setImage:"), withObject: JaemCharacterStyleKit.imageOfBlue1)
            }
        }
    }

    @IBOutlet var basicFemaleTargets: [AnyObject]! {
        get { return Cache.basicFemaleTargets }
        set {
            Cache.basicFemaleTargets = newValue
            for target: AnyObject in newValue {
                target.performSelector(NSSelectorFromString("setImage:"), withObject: JaemCharacterStyleKit.imageOfBasicFemale)
            }
        }
    }

    @IBOutlet var basicMaleTargets: [AnyObject]! {
        get { return Cache.basicMaleTargets }
        set {
            Cache.basicMaleTargets = newValue
            for target: AnyObject in newValue {
                target.performSelector(NSSelectorFromString("setImage:"), withObject: JaemCharacterStyleKit.imageOfBasicMale)
            }
        }
    }

}
